[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"### Task List","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"There are three types of tasks that can be added to","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"the task list: todo, deadline and event. The task list","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"can track their status of completion and find tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"through keywords. It will be stored locally and opened","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"automatically upon next launch of software.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"### `Add a task`","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"Add a todo, deadline or event to your task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"`todo homework`","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"added: [T][] homework","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"`deadline assignment /by: today`","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"added: [D][] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"`event celebration /at: Saturday`","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"added: [E][] celebration (at: Saturday)","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"### `List all tasks`","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"List all the tasks on the task list now.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"`list`","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"There are 2 tasks on the list now:","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"1.[D][] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"2.[E][] celebration (at: Saturday)","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"### `Mark a task`","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"Brominne"},"content":"Mark a task as done, or unmark it as not done.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"Brominne"},"content":"`mark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"Brominne"},"content":"Task 1 is marked as done~","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"Brominne"},"content":"[D][X] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"Brominne"},"content":"`unmark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"Brominne"},"content":"Task 1 is unmarked as not done~","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"Brominne"},"content":"[D][] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"Brominne"},"content":"### `Delete a task`","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"Brominne"},"content":"Delete a task from the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"Brominne"},"content":"`delete 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"Brominne"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"Brominne"},"content":"Task 2: [E][] celebration (at: Saturday) is removed~","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"Brominne"},"content":"There are 1 tasks on the list now:","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"Brominne"},"content":"1.[D][] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"Brominne"},"content":"### `Find a task`","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"Brominne"},"content":"Find a task whose description or time contains","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"Brominne"},"content":"a given keyword or keyphrase.","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"Brominne"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"Brominne"},"content":"`find assignment`","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"Brominne"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"Brominne"},"content":"1 matching tasks are found:","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"Brominne"},"content":"1.[D][] assignment (by: today)","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"Brominne":88}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private CommandType commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"     * get the type of the command","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * @return type of command","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"     * get the task that is described in the command, if there is any","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     * @return default is an empty Todo object","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"        return new Todo(\"\", false);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     * get the index of the task to be modified, if there is any","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"     * @return default is 0","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    public int getIndex() {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"        return 0;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"     * get key associated with task, if there is any","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"     * @return default is null","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    public String getKey() {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"        return \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":39}},{"path":"src/main/java/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final CommandType commandType \u003d CommandType.BYE;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":8}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * This enum contains the possible type of commands","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"public enum CommandType {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    TASK, LIST, ERROR, NULL, DELETE, MARK, UNMARK, BYE, FIND","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":6}},{"path":"src/main/java/CorruptedDataFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * CorruptedDataFileException occurs when Duke fails to load the saved file due to","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" * error in the saved file format","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"public class CorruptedDataFileException extends Exception {","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Brominne":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class Deadline extends Task implements FormatChecker {","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private static final String DEADLINE_MARK \u003d \"[D]\";","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private static final TaskType taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private final String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * Default constructor for Deadline instance","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     * @param description description of Deadline","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * @param time        time of deadline","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"        super(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     * Construct a deadline object given additional status of completion","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     * @param description description of deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     * @param isDone      whether the deadline is marked as done","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     * @param time        time of the deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    public Deadline(String description, Boolean isDone, String time) {","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"     * get the icon that indicates whether the deadline is marked","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"     * @return string of icon for mark status","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"        return DEADLINE_MARK + super.getStatusIcon();","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"     * get type of task, which is deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"     * @return type of task","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"        return taskType;","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"     * get the time of deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"     * @return time of deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"        return this.time;","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"        return String.format(\"%s %s(by: %s)\", this.getStatusIcon(), description, this.time);","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Brominne":64}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class DeadlineCommand extends Command implements FormatChecker {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final String description;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private final String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.TASK;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     * Construct a deadline given an almost unprocessed input command","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * @param complexString a complex string that contains both deadline description and time","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     * @throws WrongCommandFormatException when input command is not in correct format","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    public DeadlineCommand(String complexString) throws WrongCommandFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"            int identifierIndex \u003d FormatChecker.findIdentifierIndex(DEADLINE_IDENTIFIER, complexString);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"            this.description \u003d complexString.substring(0, identifierIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"            FormatChecker.checkNullString(this.description);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"            this.time \u003d complexString.substring(identifierIndex + TIME_IDENTIFIER_LENGTH);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"            FormatChecker.checkNullString(this.time);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"            throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"     * get the command type of current deadline command","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"     * @return command type of deadline command, DEADLINE","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"     * get the task that can be constructed from current deadline command","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"     * @return the deadline task from current command","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"        return new Deadline(description, time);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":45}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class DeleteCommand extends Command implements FormatChecker {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final int index;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.DELETE;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     * Construct a delete command including task to delete","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     * @param index the index of task to delete","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     * get the index of task to delete","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     * @return the index of task to delete","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    public int getIndex() {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        return this.index;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"     * get the type of current delete command","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"     * @return command type of delete command, DELETE","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"import java.io.File;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    private static final String DEFAULT_FILE_PATH \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"            + File.separator + \"Saves\" + File.separator +\"Tasks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    private final UI ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"     * construct a duke class that contain key functions of software","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     * @param filePath path of saved data file","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"            tasks \u003d new TaskList(storage.loadSave());","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Create new saved file failed!%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"     * This method illustrates the process of how duke run with each line of input","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    public void run() {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"        ui.greet();","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"            String fullCommand \u003d \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"                fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"                ui.separateLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"                isExit \u003d tasks.execute(c);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"                storage.writeSave(tasks.getTasks());","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"                if (isExit) {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"                    ui.bye();","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Unknown command%n\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"                        \"%s is not a valid command%n\", fullCommand.split(\" \")[0]);","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"            } catch (NullCommandException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Null command%n\" +","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"                        \"No command is entered%n\");","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"            } finally {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"                ui.separateLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"        new Duke(DEFAULT_FILE_PATH).run();","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"Brominne":58}},{"path":"src/main/java/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class ErrorCommand extends Command{","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.ERROR;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"     * get the type of current error command","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * @return command type of error command, ERROR","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class Event extends Task implements FormatChecker {","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private static final String EVENT_MARK \u003d \"[E]\";","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private static final TaskType taskType \u003d TaskType.EVENT;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private final String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * Default constructor for Event instance","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     * @param description description of Event","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * @param time        time of event","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"        super(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     * Construct a deadline object given additional status of completion","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     * @param description description of event","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     * @param isDone      whether the event is marked as done","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     * @param time        time of the event","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    public Event(String description, Boolean isDone, String time) {","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"     * get the icon that indicates whether the event is marked","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"     * @return string of icon for mark status","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"        return EVENT_MARK + super.getStatusIcon();","lastModifiedDate":"2022-09-08"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"     * get type of task, which is event","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"     * @return type of task","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"        return taskType;","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"     * get the time of event","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"     * @return time of event","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"        return this.time;","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"        return String.format(\"%s %s(at: %s)\", this.getStatusIcon(), description, this.time);","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Brominne":64}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class EventCommand extends Command implements FormatChecker {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final String description;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private final String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.TASK;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     * Construct an event given an almost unprocessed input command","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * @param complexString a complex string that contains both event description and time","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     * @throws WrongCommandFormatException when input command is not in correct format","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    public EventCommand(String complexString) throws WrongCommandFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"            int identifierIndex \u003d FormatChecker.findIdentifierIndex(EVENT_IDENTIFIER, complexString);","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"            this.description \u003d complexString.substring(0, identifierIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"            FormatChecker.checkNullString(this.description);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"            this.time \u003d complexString.substring(identifierIndex + TIME_IDENTIFIER_LENGTH);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"            FormatChecker.checkNullString(this.time);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"            throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"     * get the task that can be constructed from current event command","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"     * @return the event task from current command","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"        return new Event(description, time);","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"     * get the command type of current event command","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"     * @return command type of event command, EVENT","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":45}},{"path":"src/main/java/ExcessArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * an ExcessArgumentException occurs when an input of command contains excess arguments","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" * for the current command type","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"public class ExcessArgumentException extends Exception {","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"Brominne":6}},{"path":"src/main/java/FileIO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"import java.io.File;","lastModifiedDate":"2022-09-15"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"public interface FileIO {","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     * Load the saved data file from a given path","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     * @param filePath path name of the saved data file","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"     * @return the saved tasks in ArrayList\u003cTask\u003e format","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     * @throws CorruptedDataFileException when data file is not in correct format","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     * @throws FileNotFoundException      when data file is not found in given path","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    static ArrayList\u003cTask\u003e loadFile(String filePath) throws CorruptedDataFileException, FileNotFoundException {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"            String line \u003d sc.nextLine();","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"            String[] args \u003d line.split(\"//\");","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"            for (String i : args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"                System.out.print(i + \u0027 \u0027);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"            System.out.println();","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"            TaskType taskType \u003d TaskType.valueOf(args[0]);","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"            String description \u003d args[2];","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"            String time \u003d (args.length \u003e 3 ? args[3] : \"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"            Boolean isDone \u003d (Integer.parseInt(args[1]) \u003d\u003d 1);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"            switch (taskType) {","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"            case TODO:","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"                tasks.add(new Todo(description, isDone));","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"                break;","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"            case DEADLINE:","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"                tasks.add(new Deadline(description, isDone, time));","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"                break;","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"            case EVENT:","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"                tasks.add(new Event(description, isDone, time));","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"                break;","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"            default:","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"                throw new CorruptedDataFileException();","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"        return tasks;","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"     * Write the current tasks in Duke to saved data file","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"     * @param Tasks    the current tasks in Duke","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"     * @param filePath the path name of the saved data file","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"     * @throws IOException when exception in writing files occurs","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"    static void writeFile(ArrayList\u003cTask\u003e Tasks, String filePath) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"        StringBuilder taskFileFormat \u003d new StringBuilder();","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"Brominne"},"content":"        for (Task task : Tasks) {","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"Brominne"},"content":"            taskFileFormat.append(task.getTaskType()).append(\"//\")","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"Brominne"},"content":"                    .append(task.getIsDone() ? \"1\" : \"0\").append(\"//\").append(task.getDescription());","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"Brominne"},"content":"            if (!task.getTaskType().equals(TaskType.TODO)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"Brominne"},"content":"                taskFileFormat.append(\"//\").append(task.getTime());","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Brominne"},"content":"            taskFileFormat.append(String.format(\"%n\"));","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"Brominne"},"content":"        fw.write(taskFileFormat.toString());","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"Brominne"},"content":"        fw.close();","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"Brominne":78}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class FindCommand  extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final CommandType commandType \u003d CommandType.FIND;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final String key;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    public FindCommand(String key) {","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"        this.key \u003d key;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * get the keyword to search for in the find command","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     * @return the keyword","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    public String getKey() {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"        return key;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":23}},{"path":"src/main/java/FormatChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public interface FormatChecker {","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    int TIME_IDENTIFIER_LENGTH \u003d 5;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    int MODIFICATION_COMMAND_LENGTH \u003d 2;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    String DEADLINE_IDENTIFIER \u003d \"/by: \";","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    String EVENT_IDENTIFIER \u003d \"/at: \";","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     * Check if the given string is empty","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     * @param string the string to check","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     * @throws WrongCommandFormatException when the given string is empty","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    static void checkNullString(String string) throws WrongCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"        if (string.replaceAll(\"\\\\s+\", \"\").equals(\"\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"            throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     * Find the location of time identifier in a given event or deadline command input","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     * @param identifier    the identifier of event or deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"     * @param complexString the command input of event or deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"     * @return the index of time identifier in the command input string","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"     * @throws WrongCommandFormatException when time identifier is missing in the command input","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"    static int findIdentifierIndex(String identifier, String complexString) throws WrongCommandFormatException {","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"        int separatorIndex \u003d complexString.indexOf(identifier);","lastModifiedDate":"2022-09-08"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"        if (separatorIndex \u003d\u003d -1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"            throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        return separatorIndex;","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"     * check if there are excess arguments in commands that modifies the task list, which are","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"     * delete, mark and unmark command","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"     * @param cmd the full string of command input","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"     * @throws ExcessArgumentException when there are excess arguments in the command input","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"    static void checkExcessArgument(String cmd) throws ExcessArgumentException {","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"        if (cmd.split(\" \").length \u003e MODIFICATION_COMMAND_LENGTH) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"            throw new ExcessArgumentException();","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Brominne":49}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final CommandType commandType \u003d CommandType.LIST;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"     * get the type of current list command","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * @return command type of list command, LIST","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"        return this.commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":14}},{"path":"src/main/java/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final int index; //true for mark, false for unmark","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.MARK;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * get the index of the task to mark as done","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     * @return the index of the task","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    public int getIndex() {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"        return index;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     * get the type of current mark command","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     * @return command type of mark command, MARK","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":28}},{"path":"src/main/java/NullCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * NullArgumentException occurs when the input command is empty","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"public class NullCommandException extends Exception {","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Brominne":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class Parser implements FormatChecker {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private static final int TODO_LENGTH \u003d 5;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private static final int DEADLINE_LENGTH \u003d 9;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    private static final int EVENT_LENGTH \u003d 6;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    private static final int FIND_LENGTH \u003d 4;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_SEPARATOR \u003d \" \";","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_NULL \u003d \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     * Parse the full command input into different type of command","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     * @param input the string of full command input","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     * @return a command that contains information of input","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"     * @throws NullCommandException    when the input is a null command","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"     * @throws UnknownCommandException when the input is not any known command","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    public static Command parseCommand(String input) throws NullCommandException, UnknownCommandException {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"        String[] args \u003d input.split(COMMAND_SEPARATOR);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"        switch (args[0]) {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"                String commandType \u003d args[0];","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"                int index \u003d Integer.parseInt(args[1]) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"                FormatChecker.checkExcessArgument(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"                if (commandType.equalsIgnoreCase(COMMAND_MARK)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | ExcessArgumentException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"                        \"Try the command in correct format: mark \u003cindex of task\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"                if (input.length() \u003d\u003d TODO_LENGTH - 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"                    throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"                return new TodoCommand(input.substring(TODO_LENGTH));","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"            } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong Command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"                        \"Try the correct command format: \" +","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"                        \"todo \u003cdescription\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"                if (input.length() \u003d\u003d DEADLINE_LENGTH - 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"                    throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"Brominne"},"content":"                return new DeadlineCommand(input.substring(DEADLINE_LENGTH));","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"Brominne"},"content":"            } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong Command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"Brominne"},"content":"                        \"Try the correct command format: \" +","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"Brominne"},"content":"                        \"deadline \u003cdescription\u003e /by: \u003ctime\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"Brominne"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"Brominne"},"content":"                if (input.length() \u003d\u003d EVENT_LENGTH - 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"Brominne"},"content":"                    throw new WrongCommandFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"Brominne"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"Brominne"},"content":"                return new EventCommand(input.substring(EVENT_LENGTH));","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"Brominne"},"content":"            } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong Command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"Brominne"},"content":"                        \"Try the correct command format: \" +","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"Brominne"},"content":"                        \"event \u003cdescription\u003e /at: \u003ctime\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"Brominne"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"Brominne"},"content":"                int index \u003d Integer.parseInt(args[1]) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"Brominne"},"content":"                FormatChecker.checkExcessArgument(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"Brominne"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"Brominne"},"content":"            } catch (NumberFormatException | ArrayIndexOutOfBoundsException | ExcessArgumentException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"Brominne"},"content":"                        \"Try the command in correct format: delete \u003cindex of task\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"Brominne"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"Brominne"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"Brominne"},"content":"                String key \u003d input.substring(FIND_LENGTH);","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"Brominne"},"content":"                FormatChecker.checkNullString(key);","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"Brominne"},"content":"                return new FindCommand(key);","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"Brominne"},"content":"            } catch (WrongCommandFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"Brominne"},"content":"                System.out.format(\"Exception: Wrong command Format%n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"Brominne"},"content":"                        \"Keyword can not be null, try: find \u003ckeyword\u003e%n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"Brominne"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"Brominne"},"content":"            return new CommandBye();","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"Brominne"},"content":"        case COMMAND_NULL:","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"Brominne"},"content":"            throw new NullCommandException();","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"Brominne"},"content":"        default:","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"Brominne"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"Brominne"},"content":"        return new ErrorCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":113}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"import java.io.File;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-15"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"public class Storage implements FileIO {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    private final String filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"     * read the saved data file and load it to software","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     * @return the task list saved in data file","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    public ArrayList\u003cTask\u003e loadSave() throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"            tasks \u003d FileIO.loadFile(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"            System.out.println(\"Saved file is successfully loaded!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        } catch (CorruptedDataFileException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"            System.out.println(\"The saved file is corrupted.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"            System.out.println(\"The saved file is not found\");","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"            file.createNewFile();","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"New saved file at %s is created.%n\", filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"            System.out.println(task);","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"     * Write the current task list to storage","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"     * @param tasks the current task list","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"    public void writeSave(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"            FileIO.writeFile(tasks, filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"IO exception occurs:%n%s%n\", e.getMessage());","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Brominne":51}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    protected String description;","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private static final String CHECK_MARK \u003d \"[X]\";","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    private static final String UNCHECK_MARK \u003d \"[]\";","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    protected static final TaskType taskType \u003d TaskType.TASK;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"    protected String time;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     * Default constructor for Task instance","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     * @param description task description","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-21"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     * Constructor with additional information of completion status","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     * @param description task description","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"     * @param isDone      whether the task is marked as done","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"     * Empty constructor for Task instance","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"    public Task() {","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"     * Retrieve the status icon of Task","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"     * @return status icon","lastModifiedDate":"2022-09-02"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-21"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"        return (isDone ? CHECK_MARK : UNCHECK_MARK);","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"     * Set the completion status of current task","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"     * @param isDone whether the task is mark as done","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"     * get the description of current task","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"     * @return task description","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"        return this.description;","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"     * get the completion status of current task","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"Brominne"},"content":"     * @return completion status of current task","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"Brominne"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"Brominne"},"content":"        return this.isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"Brominne"},"content":"     * get the task type of current task","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"Brominne"},"content":"     * @return type of task","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"Brominne"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"Brominne"},"content":"        return taskType;","lastModifiedDate":"2022-09-15"},{"lineNumber":79,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":80,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":81,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"Brominne"},"content":"     * get the time associated with the task, if there is any","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"Brominne"},"content":"     * @return the time associated with current task","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"Brominne"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"Brominne"},"content":"        return this.time;","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-21"},{"lineNumber":91,"author":{"gitId":"Brominne"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":92,"author":{"gitId":"Brominne"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-30"},{"lineNumber":93,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":94,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":95,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"Brominne":95}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"public class TaskList {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"     * Add item to list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"     * @param item tasks in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    private void add(Task item) {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"        tasks.add(item);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"        System.out.format(\"added: %s%n%d items on list%n\", item, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"     * List all items in storage","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"    private void listAll() {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"        System.out.format(\"There are %d tasks on the list now:%n\", tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"%d.%s%n\", i++, task);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"     * mark a task as done","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"     * @param i index of task","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"    private void mark(int i) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"            tasks.get(i).setIsDone(true);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Task %d is marked as done~%n%s%n\", i+1, tasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Exception: Unable to mark task %n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"                    \"There are only %d tasks now~%n\", tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"     * mark a task as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"     * @param i index of task","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"Brominne"},"content":"    private void unmark(int i) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Brominne"},"content":"            tasks.get(i).setIsDone(false);","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Task %d is unmarked as not done~%n%s%n\", i+1, tasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"Brominne"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Exception: Unable to mark task %n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"Brominne"},"content":"                    \"There are only %d tasks now~%n\", tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"Brominne"},"content":"     * Delete a task from list","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"Brominne"},"content":"     * @param i index of task","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"Brominne"},"content":"    private void deleteTask(int i) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"Brominne"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"Brominne"},"content":"            String removedTask \u003d tasks.get(i).toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"Brominne"},"content":"            tasks.remove(i);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Task %d: %s is removed~%n\", i+1, removedTask);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"Brominne"},"content":"            this.listAll();","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"Brominne"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"Exception: Unable to delete task %n\" +","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"Brominne"},"content":"                    \"There are only %d tasks now~%n\", tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"Brominne"},"content":"     * find and list the tasks containing certain keyword","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"Brominne"},"content":"     * @param key the keyword","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"Brominne"},"content":"    private void find(String key) {","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"Brominne"},"content":"        ArrayList\u003cTask\u003e tasksContainKey \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"Brominne"},"content":"        for(Task task: tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"Brominne"},"content":"            if(task.toString().contains(key)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"Brominne"},"content":"                tasksContainKey.add(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"Brominne"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"Brominne"},"content":"        System.out.format(\"%d matching tasks are found:%n\", tasksContainKey.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"Brominne"},"content":"        int i \u003d 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"Brominne"},"content":"        for(Task task: tasksContainKey) {","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"Brominne"},"content":"            System.out.format(\"%d.%s%n\", i++, task);","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"Brominne"},"content":"     * execute a command on the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"Brominne"},"content":"     * @param command the command to execute","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"Brominne"},"content":"     * @return whether the software will quit","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"Brominne"},"content":"    public Boolean execute(Command command) {","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"Brominne"},"content":"        CommandType commandType \u003d command.getCommandType();","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"Brominne"},"content":"        int index \u003d command.getIndex();","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"Brominne"},"content":"        switch (commandType) {","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"Brominne"},"content":"        case TASK:","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"Brominne"},"content":"            this.add(command.getTask());","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"Brominne"},"content":"        case LIST:","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"Brominne"},"content":"            this.listAll();","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"Brominne"},"content":"        case MARK:","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"Brominne"},"content":"            this.mark(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"Brominne"},"content":"        case UNMARK:","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"Brominne"},"content":"            this.unmark(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"Brominne"},"content":"        case DELETE:","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"Brominne"},"content":"            this.deleteTask(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"Brominne"},"content":"        case FIND:","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"Brominne"},"content":"            this.find(command.getKey());","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"Brominne"},"content":"        case NULL:","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"Brominne"},"content":"        case ERROR:","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"Brominne"},"content":"            break;","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"Brominne"},"content":"        case BYE:","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"Brominne"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"Brominne"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"Brominne"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"Brominne"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"Brominne"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":140}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * TaskType contain types of tasks, while TASK is the generic type of task","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"public enum TaskType {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    TODO, DEADLINE, EVENT, TASK","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":6}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class Todo extends Task implements FormatChecker {","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private static final String TODO_MARK \u003d \"[T]\";","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"    private static final TaskType taskType \u003d TaskType.TODO;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     * Default constructor for a Todo instance","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     * @param description description of Todo","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     * get the icon that indicates whether the event is marked","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"     * @return string of icon for mark status","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        return TODO_MARK + super.getStatusIcon();","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"        return taskType;","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"Brominne":35}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class TodoCommand extends Command implements FormatChecker {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final String description;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.TASK;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     * Construct an event given an almost unprocessed input command","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     * @param description description of todo command","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     * @throws WrongCommandFormatException when input command is not in correct format","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    public TodoCommand(String description) throws WrongCommandFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"        FormatChecker.checkNullString(description);","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     * get the task that is specified in current todo command","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"     * @return the task specified in the todo command","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    public Task getTask() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        return new Todo(description, false);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":30}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":" * Storage class serve as a storage of all tasks and execute command","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":" * on the list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"public class UI implements FormatChecker, FileIO {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye! Always there waiting for you!\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"    private static final String GREET_MESSAGE_1 \u003d \"Hello! I\u0027m Rae.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    private static final String GREET_MESSAGE_2 \u003d \"How does everything progress now?\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"    private static final int LINE_SEPARATOR_LENGTH \u003d 60;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    private static final String LINE_SEPARATOR \u003d \"_\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     * greet prints greet messages","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    public void greet() {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        separateLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"        System.out.println(GREET_MESSAGE_1);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"        System.out.println(GREET_MESSAGE_2);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"        separateLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"     *  print a line separator","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Brominne"},"content":"    public void separateLine() {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"Brominne"},"content":"        System.out.println(LINE_SEPARATOR.repeat(LINE_SEPARATOR_LENGTH));","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Brominne"},"content":"     * bye prints farewell messages","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"Brominne"},"content":"    public void bye() {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Brominne"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"Brominne"},"content":"     * read the next line of command","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Brominne"},"content":"     * @return the next command in string","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Brominne"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Brominne"},"content":"        return in.nextLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":50}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * UnknownCommandException occurs when the command identified is unknown","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Brominne":5}},{"path":"src/main/java/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"    private final int index; //true for mark, false for unmark","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"    private final static CommandType commandType \u003d CommandType.UNMARK;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"     * Construct an unmark command that unmark a task","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"     * @param index the index of task","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Brominne"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Brominne"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Brominne"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Brominne"},"content":"     * get index of the task to unmark","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Brominne"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Brominne"},"content":"     * @return the index of task","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Brominne"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Brominne"},"content":"    public int getIndex() {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Brominne"},"content":"        return index;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Brominne"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Brominne"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Brominne"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Brominne"},"content":"        return commandType;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Brominne":28}},{"path":"src/main/java/WrongCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":" * WrongCommandFormatException occurs when the command input does not","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":" * follow the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"public class WrongCommandFormatException extends Exception {","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"Brominne":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Brominne"},"content":"todo Bian Rui: answer CS2113 tutorial quesitons","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"Brominne"},"content":"event CS2113 lecture /at: Fri 4-6pm","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"Brominne"},"content":"mark 1","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"Brominne"},"content":"mark 2","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"Brominne"},"content":"deadline CS2113 lab /by: Wednesday","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"Brominne"},"content":"list","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"Brominne"},"content":"unmark 2","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"Brominne"},"content":"mark 3","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"Brominne"},"content":"list","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"Brominne":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"Brominne"},"content":"# dos2unix somehow failed to run","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"Brominne"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Brominne":2}}]
