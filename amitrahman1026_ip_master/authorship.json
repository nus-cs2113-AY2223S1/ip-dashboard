[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"# duke.Duke project template","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"instructions on how to use it.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"You will use this as a baseline for the individual project, as well as the team project later in the semester.","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"   first)","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"   like the below as the output:","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amitrahman1026":10,"-":21}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"Duke is a desktop app for managing a todo list, optimized for user via a Command Line Interface (CLI).","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"Table of Contents","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    1. [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    2. [Exiting: `bye`](#exiting-bye)","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    3. [Find task by keyword: `find`](#find-task-by-keyword-find)","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    4. [Add a ToDo: `todo`](#add-a-todo-todo)","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    5. [Add an Event: `event`](#add-an-event-event)","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    6. [Add a Deadline: `deadline`](#add-a-deadline-deadline)","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    7. [Mark a task as done: `done`](#mark-a-task-as-done-done)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    8. [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"3. [Command summary](#command-summary)","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"4. [Credits](#credits)","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"## Quick start","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"2. Download the latest duke.jar release.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"3. Copy the file to the folder you want to use as your *home folder* for Duke.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"4. Open the command line in that folder and run the command `java -jar duke.jar`.","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"5. When you first run the application, a Duke will greet you.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"Hello! I\u0027m Duke!","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"───▄▄▄","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"─▄▀░▄░▀▄","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"─█░█▄▀░█","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"─█░▀▄▄▀█▄█▄▀","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"▄▄█▄▄▄▄███▀","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"How can I help you?","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"Please enter your taskList command: (send \u0027bye\u0027 to exit)","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"1. Type a command and press Enter to execute it.","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"2. Refer to the Features below for details of each command.","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"## Features","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"\u003e - Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"    e.g. in `event NAME /at TIME`, `NAME` and `TIME` are parameters which can be used as `event basketball /at noon`.","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"\u003e - `TIME` will be stored as plain string. The onus is up to the user to save `TIME` data in a format that is meaningful to them.","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"Lists out all the tasks in the task list. ","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"Tasks types are displayed within the first square bracket, where the letter inside","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"indicated what type of task it is - ","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"- T for a todo task","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"- D for a deadline task ","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"- E for an event task","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"The letter X in the second square bracket represents tasks that are marked as done","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"and no letter indicates that the task is yet to be done.","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"Format: `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"amitrahman1026"},"content":"### Exiting: `bye`","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"amitrahman1026"},"content":"Exits the application.","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"amitrahman1026"},"content":"Format: `bye`","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":81,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"amitrahman1026"},"content":"bye","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"amitrahman1026"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"amitrahman1026"},"content":"───▄▄▄","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"amitrahman1026"},"content":"─▄▀░▄░▀▄","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"amitrahman1026"},"content":"─█░█▄▀░█","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"amitrahman1026"},"content":"─█░▀▄▄▀█▄█▄▀","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"amitrahman1026"},"content":"▄▄█▄▄▄▄███▀","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"amitrahman1026"},"content":"### Find task by keyword: `find`","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"amitrahman1026"},"content":"Finds all tasks with names containing a given search term.","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"amitrahman1026"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":103,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"amitrahman1026"},"content":"find basketball","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"amitrahman1026"},"content":"Here are the tasks in your list that contains \u0027basketball\u0027","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"amitrahman1026"},"content":"### Add a ToDo: `todo`","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"amitrahman1026"},"content":"Creates a ToDo item on the task list.","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"amitrahman1026"},"content":"Format: `todo TASK`","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":119,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"amitrahman1026"},"content":"todo read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"amitrahman1026"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"amitrahman1026"},"content":"  [T][ ] read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"amitrahman1026"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"amitrahman1026"},"content":"### Add an Event: `event`","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"amitrahman1026"},"content":"Use this command to keep track of events you need to attend.","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"amitrahman1026"},"content":"Format: `event NAME /at TIME`","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"amitrahman1026"},"content":"event another Event /at 1234","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"amitrahman1026"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"amitrahman1026"},"content":"  [E][ ] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"amitrahman1026"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"amitrahman1026"},"content":"### Add a Deadline: `deadline`","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"amitrahman1026"},"content":"Use this command to keep track of deadlines you need to meet.","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"amitrahman1026"},"content":"Format: `deadline NAME /by TIME`","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":153,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"amitrahman1026"},"content":"deadline return book /by noon","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"amitrahman1026"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"amitrahman1026"},"content":"  [D][ ] return book (by: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"amitrahman1026"},"content":"Now you have 4 tasks in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":162,"author":{"gitId":"amitrahman1026"},"content":"### Mark a task as done: `done`","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"amitrahman1026"},"content":"Marks a task in your list as done.","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"amitrahman1026"},"content":"Format: `done INDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":170,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"amitrahman1026"},"content":"2. [T][ ] read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"amitrahman1026"},"content":"3. [E][ ] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"amitrahman1026"},"content":"4. [D][ ] return book (by: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"amitrahman1026"},"content":"done 3","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"amitrahman1026"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"amitrahman1026"},"content":"  [E][X] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"amitrahman1026"},"content":"2. [T][ ] read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"amitrahman1026"},"content":"3. [E][X] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"amitrahman1026"},"content":"4. [D][ ] return book (by: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"amitrahman1026"},"content":"### Delete a task: `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"amitrahman1026"},"content":"Deletes a task from your list.","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"amitrahman1026"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"amitrahman1026"},"content":"Sample:","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":203,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":204,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":207,"author":{"gitId":"amitrahman1026"},"content":"2. [T][ ] read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"amitrahman1026"},"content":"3. [E][X] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"amitrahman1026"},"content":"4. [D][ ] return book (by: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"amitrahman1026"},"content":"delete 2","lastModifiedDate":"2022-09-29"},{"lineNumber":213,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"amitrahman1026"},"content":"Noted. I\u0027ve removed this task: [T][ ] read a book","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"amitrahman1026"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-29"},{"lineNumber":218,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"amitrahman1026"},"content":"1. [E][ ] basketball (at: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"amitrahman1026"},"content":"2. [E][X] another Event (at: 1234)","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"amitrahman1026"},"content":"3. [D][ ] return book (by: noon)","lastModifiedDate":"2022-09-29"},{"lineNumber":222,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":223,"author":{"gitId":"amitrahman1026"},"content":"______________________________________","lastModifiedDate":"2022-09-29"},{"lineNumber":224,"author":{"gitId":"amitrahman1026"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":225,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":226,"author":{"gitId":"amitrahman1026"},"content":"## Saving the Data","lastModifiedDate":"2022-09-29"},{"lineNumber":227,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":228,"author":{"gitId":"amitrahman1026"},"content":"Duke data is saved to the hard disk automatically after any command that modifies the data.","lastModifiedDate":"2022-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"amitrahman1026"},"content":"## Command summary","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":232,"author":{"gitId":"amitrahman1026"},"content":"| Action                | Format                   | Example                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"amitrahman1026"},"content":"|-----------------------|--------------------------|---------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"amitrahman1026"},"content":"| List tasks            | `list`                   | `list`                          |","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"amitrahman1026"},"content":"| Exit application      | `bye`                    | `bye`                           |","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"amitrahman1026"},"content":"| Find tasks by keyword | `find KEYWORD`           | `find basketball`               | ","lastModifiedDate":"2022-09-29"},{"lineNumber":237,"author":{"gitId":"amitrahman1026"},"content":"| Add a Todo            | `todo NAME`              | `todo read a book`              |","lastModifiedDate":"2022-09-29"},{"lineNumber":238,"author":{"gitId":"amitrahman1026"},"content":"| Add an event          | `event NAME /at TIME`    | `event another Event /at 1234`  |","lastModifiedDate":"2022-09-29"},{"lineNumber":239,"author":{"gitId":"amitrahman1026"},"content":"| Add a deadline        | `deadline NAME /by TIME` | `deadline return book /by noon` |","lastModifiedDate":"2022-09-29"},{"lineNumber":240,"author":{"gitId":"amitrahman1026"},"content":"| Mark a task as done   | `done INDEX`             | `done 3`                        |","lastModifiedDate":"2022-09-29"},{"lineNumber":241,"author":{"gitId":"amitrahman1026"},"content":"| Delete a task         | `delete INDEX`           | `delete 2`                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":242,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":243,"author":{"gitId":"amitrahman1026"},"content":"## Credits","lastModifiedDate":"2022-09-29"},{"lineNumber":244,"author":{"gitId":"amitrahman1026"},"content":"UserGuide formatting adapted from @owenl131","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"amitrahman1026":225,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"import duke.command.ExecutedCommand;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":" * \u003ch1\u003eDuke\u003c/h1\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":" * Duke is an application that helps users manage their tasks such as Events, To-dos and Deadlines through the CLI.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":" *","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":" * @author Amit Rahman","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"public class Duke {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"     * Exit command literal","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"     * Sets up the application state by creatine new instances of TaskList, Storage, UI and Parser.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    private final UI ui;","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"    private final Parser parser;","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"     * Sets up the application state by creatine new instances of TaskList, Storage, UI and Parser.","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"     * @param filePath file path of where taskList data is to be stored in and accessed from.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"        InitializeTaskList initializedTaskList \u003d null;","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"            initializedTaskList \u003d storage.initializeTaskList();","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"            System.out.println(\"Fatal error creating file.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"        taskList \u003d initializedTaskList.taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"        UI.printMessageWithLines(initializedTaskList.initialisationMessage);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"     * Helper function to execute the command and returns acknowledgement message of result of executed command","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"     * @param command command extracted from parsed user input","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"     * @return acknowledgement message from executing command","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"    public static ExecutedCommand executeCommand(Command command) {","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"            return command.execute();","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"amitrahman1026"},"content":"            return new ExecutedCommand(e.getMessage(),null,false);","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"amitrahman1026"},"content":"     * Method to continuously run on a loop while taking in userInput,","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"amitrahman1026"},"content":"     * parse the userInput into commands and command details via Parser, executing command,","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"amitrahman1026"},"content":"     * printing acknowledgement of results of running the command. Then a new taskList is written","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"amitrahman1026"},"content":"     * to storage if there are any updates to taskList data. The loop is exited when the userInput is \"bye\"","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"amitrahman1026"},"content":"    public void run(){","lastModifiedDate":"2022-09-27"},{"lineNumber":78,"author":{"gitId":"amitrahman1026"},"content":"        UI.printGreeting();","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"amitrahman1026"},"content":"        System.out.println(\"Please enter your taskList command: (send \u0027bye\u0027 to exit)\");","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"amitrahman1026"},"content":"        String userInput \u003d UI.readInput();","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":82,"author":{"gitId":"amitrahman1026"},"content":"        while (!userInput.equals(BYE)) {","lastModifiedDate":"2022-09-27"},{"lineNumber":83,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":84,"author":{"gitId":"amitrahman1026"},"content":"            Command command \u003d Parser.parsedCommand(taskList, userInput);","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"amitrahman1026"},"content":"            ExecutedCommand executedCommand \u003d executeCommand(command);","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"amitrahman1026"},"content":"            if (executedCommand.isTaskListChanged()){","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"amitrahman1026"},"content":"                taskList \u003d executedCommand.getTaskList();","lastModifiedDate":"2022-09-27"},{"lineNumber":90,"author":{"gitId":"amitrahman1026"},"content":"                try {","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"amitrahman1026"},"content":"                    Storage.writeToFile(taskList);","lastModifiedDate":"2022-09-27"},{"lineNumber":92,"author":{"gitId":"amitrahman1026"},"content":"                } catch (IOException e){","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"amitrahman1026"},"content":"                    UI.printMessageWithLines(\"Error writing to file.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"amitrahman1026"},"content":"                }","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"amitrahman1026"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"amitrahman1026"},"content":"            String executionMessage \u003d executedCommand.getExecutionMessage();","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"amitrahman1026"},"content":"            UI.printMessageWithLines(executionMessage);","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"amitrahman1026"},"content":"            userInput \u003d UI.readInput();","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"amitrahman1026"},"content":"        UI.printGoodbye();","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"amitrahman1026"},"content":"     * This is the main method which instantiates Duke and executes the run method.","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"amitrahman1026"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-27"},{"lineNumber":110,"author":{"gitId":"amitrahman1026"},"content":"        new Duke(\"./data/data.txt\").run();","lastModifiedDate":"2022-09-27"},{"lineNumber":111,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":113}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" * Represents an add command where a Deadline task is added to the taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public AddDeadlineCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.addDeadline(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":18}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" * Represents an add command where an Event task is added to the taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public AddEventCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.addEvent(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":19}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" * Represents an add command where a ToDo task is added to the taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    public AddTodoCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.addTodo(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" * Abstract of a command that contains","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":" * TaskList \u003ccode\u003etaskList\u003c/code\u003e represents the taskList the command is executed on","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":" * String \u003ccode\u003einput\u003c/code\u003e represents the arguments for the command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    protected TaskList taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    protected String input;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructor */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"    protected Command(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"     * Executes command based on the given commandArguments on taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"     * @throws Exception when commandArguments do not fit the required format","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    public abstract ExecutedCommand execute() throws Exception;","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/** Delete command where an existing task is deleted from taskList */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public DeleteCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.deleteTask(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":17}},{"path":"src/main/java/duke/command/DoNothingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/** A null command to be executed when the command is not recognised */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class DoNothingCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public DoNothingCommand(TaskList taskList) {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        TaskList.doNothing();","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(\"\", taskList, false);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":17}},{"path":"src/main/java/duke/command/ExecutedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" * Parent class that serves as base for executing other commands and constructing acknowledgement","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":" * messages to display to user upon execution of command","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"public class ExecutedCommand {","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    private final String executionMessage;","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    private final TaskList taskList;","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    private final boolean isTaskListChanged;","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"     * Constructor","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand(String executionMessage, TaskList taskList, boolean isTaskListChanged) {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"        this.executionMessage \u003d executionMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"        this.isTaskListChanged \u003d isTaskListChanged;","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"        return taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"    public boolean isTaskListChanged(){","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"        return isTaskListChanged;","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"    public String getExecutionMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"        return executionMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"/** Find command to show all current tasks in taskList that match search term in user input*/","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    public FindCommand(TaskList taskList, String input){","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList,input);","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.findTask(input);","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, false);","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"amitrahman1026":15}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/** List command to show all current tasks in taskList */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public ListCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.getTaskList();","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, false);","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":16}},{"path":"src/main/java/duke/command/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.command;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" * Change an existing tasks isDone from false to true","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class MarkAsDoneCommand extends Command {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public MarkAsDoneCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"        super(taskList, input);","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    public ExecutedCommand execute() throws Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"        String executionMessage \u003d TaskList.markAsDone(input);","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"        return new ExecutedCommand(executionMessage, taskList, true);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":17}},{"path":"src/main/java/duke/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when DeadlineCommand does not follow the format: deadline [description] /by [time]","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class DeadlineException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Deadline command must follow the format \u003cdescription\u003e /by \u003ctime/date\u003e \";","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":11}},{"path":"src/main/java/duke/exceptions/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when DeleteCommand does not follow the format: delete [index]","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class DeleteException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Delete command must follow the format: delete \u003cindex\u003e\";","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":11}},{"path":"src/main/java/duke/exceptions/DeleteRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/** Thrown when the index given in the DeleteCommand is out of range */","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"public class DeleteRangeException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Delete command is out of range of the number of tasks.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":9}},{"path":"src/main/java/duke/exceptions/DoNothingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/** Thrown when commands are not recognised */","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"public class DoNothingException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Command not found\";","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":8}},{"path":"src/main/java/duke/exceptions/DoneAlreadyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when index in DoneCommand is already marked as done","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class DoneAlreadyException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Done command is out of range of the number of tasks.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":10}},{"path":"src/main/java/duke/exceptions/DoneFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when DoneCommand does not follow the format: done [index]","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class DoneFormatException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Done command must follow the format:done \u003cindex\u003e\";","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":10}},{"path":"src/main/java/duke/exceptions/DoneRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when index in DoneCommand is not within bounds of taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class DoneRangeException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Done command index is out of the range of the number of tasks.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":10}},{"path":"src/main/java/duke/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/** Thrown when taskList is empty */","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"public class EmptyListException extends EventException {","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Task list is empty\";","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":9}},{"path":"src/main/java/duke/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * Thrown when EventCommand does not follow the format: event [description] /at [time]","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class EventException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Event command must follow the format \u003cdescription\u003e /at \u003ctime/date\u003e\";","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":10}},{"path":"src/main/java/duke/exceptions/FileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/** Used when format of data in storage file is not recognised */","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"public class FileFormatException extends Exception{","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":4}},{"path":"src/main/java/duke/exceptions/NotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/** Used when search term is not cointain in taskList are not recognised */","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"public class NotFoundException extends Exception{","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! The search term could not be found!\";","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"amitrahman1026":8}},{"path":"src/main/java/duke/exceptions/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/** Thrown when TodoCommand input does not follow the format:","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" *      todo [description]","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"public class TodoException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"        return \"OOPS!!! Todo command must follow the format:todo \u003cdescription\u003e\";","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.parser;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class Parser {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"     * Commands","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"    public static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public static final String START_LINE_DELIMITER \u003d \"^\";","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    public Parser() {","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"     * Parses input and returns a command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskList taskList to execute command on","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"     * @param input Input from the user to extract command from","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"     * @return Command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    public static Command parsedCommand(TaskList taskList, String input) {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"        final String[] splitLine \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"        final String command \u003d splitLine[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"        final String commandArguments \u003d input.replaceAll(START_LINE_DELIMITER + command + SPACE_DELIMITER, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(LIST)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"            return new ListCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(TODO)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"            return new AddTodoCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(EVENT)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"            return new AddEventCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(DEADLINE)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"            return new AddDeadlineCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(DELETE)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"            return new DeleteCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(DONE)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"            return new MarkAsDoneCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"        if (command.equals(FIND)) {","lastModifiedDate":"2022-09-27"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"            return new FindCommand(taskList, commandArguments);","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"        return new DoNothingCommand(taskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":65}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import duke.exceptions.FileFormatException;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"import duke.tasks.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"import java.io.File;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":" * Reads and writes list of task into storage file","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"public class Storage {","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    private final String TODO_STORAGE_DELIMITER \u003d \"T\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"    private final String EVENT_STORAGE_DELIMITER \u003d \"E\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\\\\|.+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    private final String DEADLINE_STORAGE_DELIMITER \u003d \"D\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\\\\|.+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    private final String TODO_TASK_TYPE \u003d \"T\";","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"    private final String EVENT_TASK_TYPE \u003d \"E\";","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    private final String DEADLINE_TASK_TYPE \u003d \"D\";","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    public static final String PARTITION_DELIMITER \u003d \"\\\\s\\\\|\\\\s\";","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    private final String filePath;","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    private static File file \u003d null;","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructor */","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"     * Loads data from file into \u003ccode\u003etaskList\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskList taskList to be loaded with data from storage file","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"     * @throws FileFormatException When the entry format is wrong","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"     * @throws FileNotFoundException When file does not exist","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"    public void loadDataIntoTaskList(TaskList taskList) throws FileFormatException, FileNotFoundException{","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"                String dataLine \u003d myReader.nextLine();","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"                if(!dataLine.matches(TODO_STORAGE_DELIMITER) \u0026\u0026","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"                        !dataLine.matches(EVENT_STORAGE_DELIMITER) \u0026\u0026","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"                        !dataLine.matches(DEADLINE_STORAGE_DELIMITER)){","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"                    throw new FileFormatException();","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"                }","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"                String[] dataLineSplit \u003d dataLine.split(PARTITION_DELIMITER);","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"                String taskType \u003d dataLineSplit[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"                boolean isDone \u003d dataLineSplit[1].equals(\"1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"                String taskDescription \u003d dataLineSplit[2];","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"                if (taskType.equals(TODO_TASK_TYPE)){","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"                    TaskList.addTodo(taskDescription, isDone);","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"                } else if (taskType.equals(EVENT_TASK_TYPE)){","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"                    String at \u003d dataLineSplit[3];","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"                    TaskList.addEvent(taskDescription, at, isDone);","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"                } else if (taskType.equals(DEADLINE_TASK_TYPE)){","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"                    String by \u003d dataLineSplit[3];","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"amitrahman1026"},"content":"                    TaskList.addDeadline(taskDescription, by, isDone);","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"amitrahman1026"},"content":"                }","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"amitrahman1026"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"amitrahman1026"},"content":"            myReader.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"amitrahman1026"},"content":"     * Creates a data file and parent directory if it does not already exists","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"amitrahman1026"},"content":"     * @throws IOException When the file path is not available","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"amitrahman1026"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"amitrahman1026"},"content":"        Path pathToFile \u003d Paths.get(filePath);","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"amitrahman1026"},"content":"        Files.createDirectories(pathToFile.getParent());","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"amitrahman1026"},"content":"        file.createNewFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"amitrahman1026"},"content":"     * Initialise a new taskList and load its data into file if file exists otherwise create new file to store data","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"amitrahman1026"},"content":"     * @return InitializedTaskList containing \u003ccode\u003etaskList\u003c/code\u003e and \u003ccode\u003einitialisationMessage\u003c/code\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"amitrahman1026"},"content":"     * containing String of initialisation message of details of successful initialisation of taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"amitrahman1026"},"content":"     * @throws IOException if unable to write to file","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"amitrahman1026"},"content":"    public InitializeTaskList initializeTaskList() throws IOException {","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"amitrahman1026"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"amitrahman1026"},"content":"        String initialisationMessage \u003d \"\";","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"amitrahman1026"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"amitrahman1026"},"content":"            loadDataIntoTaskList(taskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"amitrahman1026"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"amitrahman1026"},"content":"            initialisationMessage +\u003d \"File not found.\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"amitrahman1026"},"content":"            try {","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"amitrahman1026"},"content":"                initialisationMessage +\u003d \"Creating \" + filePath + \"\\n\";","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"amitrahman1026"},"content":"                createFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"amitrahman1026"},"content":"            } catch (IOException e_){","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"amitrahman1026"},"content":"                initialisationMessage +\u003d \"Error creating new file\";","lastModifiedDate":"2022-09-27"},{"lineNumber":103,"author":{"gitId":"amitrahman1026"},"content":"            }","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"amitrahman1026"},"content":"        } catch (FileFormatException e){","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"amitrahman1026"},"content":"            initialisationMessage +\u003d \"File data contains format errors.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"amitrahman1026"},"content":"        return new InitializeTaskList(taskList, initialisationMessage);","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"amitrahman1026"},"content":"     * Writes taskList to file in a formatted manner","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskList list of task to write to data","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"amitrahman1026"},"content":"     * @throws IOException if there is error while trying to write into file","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"amitrahman1026"},"content":"    public static void writeToFile(TaskList taskList) throws IOException {","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"amitrahman1026"},"content":"        FileWriter outputFile \u003d new FileWriter(file);","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"amitrahman1026"},"content":"        for (int i \u003d 0; i \u003c TaskList.taskList.size(); i++) {","lastModifiedDate":"2022-09-27"},{"lineNumber":119,"author":{"gitId":"amitrahman1026"},"content":"            Task task \u003d TaskList.taskList.get(i);","lastModifiedDate":"2022-09-27"},{"lineNumber":120,"author":{"gitId":"amitrahman1026"},"content":"            outputFile.write(task.writeTaskToFile() + \"\\n\");","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"amitrahman1026"},"content":"        outputFile.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":124}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * A Deadline represents a task with a deadline.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" * String \u003ccode\u003eby\u003c/code\u003e is the time task should be completed by","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    private final String by;","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructors with and without isDone */","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    public Deadline(String taskDescription, String by) {","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription);","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"    public Deadline(String taskDescription, String by, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"    /** Getter function for \u003ccode\u003eby\u003c/code\u003e*/","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public String getBy() {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"        return by;","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003eshowTask\u003c/code\u003e method specific for Deadline*/","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    public String showTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"        return \"[D][\" + (isDone ? DONE_SYMBOL : \" \") + \"] \" + taskDescription + \"(by: \" + by + \")\";","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003ewriteTaskToFile\u003c/code\u003e method specific for Deadline*/","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"    public String writeTaskToFile(){","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"        return \"D | \" + (isDone ? 1 : 0) + \" | \" + taskDescription;","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"amitrahman1026":35}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * An Event represents an event at a certain time.","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * String \u003ccode\u003eat\u003c/code\u003e is the time task would be held at","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"    private final String at;","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructors with and without isDone */","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    public Event(String taskDescription, String at) {","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription);","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    public Event(String taskDescription, String at, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    /** Getter function for \u003ccode\u003eat\u003c/code\u003e*/","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public String getAt() {","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"        return at;","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003eshowTask\u003c/code\u003e method specific for Events*/","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    public String showTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"        return \"[E][\" + (isDone ? DONE_SYMBOL : \" \") + \"] \" + taskDescription + \"(at: \" + at + \")\";","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003ewriteTaskToFile\u003c/code\u003e method specific for Events*/","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    public String writeTaskToFile(){","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"        return \"E | \" + (isDone ? 1 : 0) + \" | \" + taskDescription;","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"amitrahman1026":36}},{"path":"src/main/java/duke/tasks/InitializeTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":" * Initialises a taskList and sets message about the details of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * TaskList \u003ccode\u003etaskList\u003c/code\u003e is the list of tasks from user","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" * \u003ccode\u003einitialisationMessage\u003c/code\u003e is a String representing the results of initialisation of taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"public class InitializeTaskList {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    public TaskList taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    public String initialisationMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    public InitializeTaskList(TaskList taskList, String initialisationMessage){","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"        this.initialisationMessage \u003d initialisationMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":14}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * Tasks to be added to TaskList with attribute to track completion status","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" *  String \u003ccode\u003etaskDescription\u003c/code\u003e contains the description of the task; and","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" *  boolean \u003ccode\u003eisDone\u003c/code\u003e represents whether the task has been completed.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    protected final String taskDescription;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    protected final String DONE_SYMBOL \u003d \"X\";","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructors with and without isDone */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    /** Getter function for \u003ccode\u003etaskDescription\u003c/code\u003e*/","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"        return this.taskDescription;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    /** Getter function for \u003ccode\u003eisDone\u003c/code\u003e*/","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"        return this.isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"    public void markDone() {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"     * Abstract that serves as base for formatting taskDescription","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"     * @return String describing task","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"    public abstract String showTask();","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"     * Abstract that serves as base for formatting data written into storage file","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"     * @return String of formatted task to be written into storage file","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"    public abstract String writeTaskToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amitrahman1026":51}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":" * Represents an ArrayList of Task \u003ccode\u003etasks\u003c/code\u003e represents the list of all the tasks.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"public class TaskList {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"     * Parser delimiters","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    public static final String GET_DESCRIPTION_DELIMITER \u003d \"/.+\";","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"    public static final String GET_AT_DELIMITER \u003d \".+/at \";","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public static final String GET_BY_DELIMITER \u003d \".+/by \";","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DIGITS_DELIMITER \u003d \"\\\\d+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DEADLINE_DELIMITER \u003d \".+/by.+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    public static final String EVENT_DELIMITER \u003d \".+/at.+\";","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"     * Constructor","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"     * Gets acknowledgement of updated number of tasks in taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"     * @return String containing an acknowledgement message of how many tasks in taskList there are","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"    public static String getAcknowledgement() {","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"        int taskCount \u003d taskList.size();","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"        String latestTaskAdded \u003d taskList.get(taskCount - 1).showTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" +","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"                latestTaskAdded +","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"                \"\\nNow you have \" + taskCount + \" tasks in the list\";","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"     * Adds a Todo task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskDescription Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"     * @param isDone isDone status of task","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"    public static void addTodo(String taskDescription, boolean isDone){","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"     * Adds a Todo task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"     * @param commandArgument Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"     * @throws TodoException if task description is empty","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"    public static String addTodo(String commandArgument) throws TodoException {","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"        if (commandArgument.equals(\"\") || commandArgument.equals(\"todo\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"            throw new TodoException();","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Todo(commandArgument);","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"amitrahman1026"},"content":"        return getAcknowledgement();","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"amitrahman1026"},"content":"     * Adds an Event task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskDescription Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"amitrahman1026"},"content":"     * @param isDone isDone status of task","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"amitrahman1026"},"content":"    public static void addEvent(String taskDescription, String at, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Event(taskDescription, at, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":81,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"amitrahman1026"},"content":"     * Adds an Event task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"amitrahman1026"},"content":"     * @param commandArgument Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"amitrahman1026"},"content":"     * @return Acknowledgement message of successful addition of a task","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"amitrahman1026"},"content":"     * @throws EventException if task description do not follow the format of","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"amitrahman1026"},"content":"     *  description /at time","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":90,"author":{"gitId":"amitrahman1026"},"content":"    public static String addEvent(String commandArgument) throws EventException {","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"amitrahman1026"},"content":"        if (!commandArgument.matches(EVENT_DELIMITER)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"amitrahman1026"},"content":"            throw new EventException();","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"amitrahman1026"},"content":"        String taskDescription \u003d commandArgument.replaceAll(GET_DESCRIPTION_DELIMITER, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"amitrahman1026"},"content":"        String at \u003d commandArgument.replaceAll(GET_AT_DELIMITER, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Event(taskDescription, at);","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"amitrahman1026"},"content":"        return getAcknowledgement();","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"amitrahman1026"},"content":"     * Adds a Deadline task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"amitrahman1026"},"content":"     * @param taskDescription Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"amitrahman1026"},"content":"     * @param by time Deadline is due","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"amitrahman1026"},"content":"     * @param isDone isDone status of task","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"amitrahman1026"},"content":"    public static void addDeadline(String taskDescription, String by, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Deadline(taskDescription, by, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-08-25"},{"lineNumber":113,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":114,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"amitrahman1026"},"content":"     * Adds an Event task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"amitrahman1026"},"content":"     * @param commandArgument Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DeadlineException if task description do not follow the format of","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"amitrahman1026"},"content":"     * description /by time","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"amitrahman1026"},"content":"     * @return Acknowledgement message of successful addition of a Deadline task","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"amitrahman1026"},"content":"    public static String addDeadline(String commandArgument) throws DeadlineException {","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"amitrahman1026"},"content":"        if (!commandArgument.matches(DEADLINE_DELIMITER)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"amitrahman1026"},"content":"            throw new DeadlineException();","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"amitrahman1026"},"content":"        String taskDescription \u003d commandArgument.replaceAll(GET_DESCRIPTION_DELIMITER, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"amitrahman1026"},"content":"        String by \u003d commandArgument.replaceAll(GET_BY_DELIMITER, \"\");","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"amitrahman1026"},"content":"        Task newTask \u003d new Deadline(taskDescription, by);","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"amitrahman1026"},"content":"        taskList.add(newTask);","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"amitrahman1026"},"content":"        return getAcknowledgement();","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"amitrahman1026"},"content":"     * Removes a task from taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"amitrahman1026"},"content":"     * @param commandArgument Arguments of the user\u0027s input","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"amitrahman1026"},"content":"     * @return deleteCompleteMessage a string containing latest number of tasks after successful deletion.","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DeleteException if user\u0027s input does not match format of a single integer","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DeleteRangeException if user input index is out of bounds of taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"amitrahman1026"},"content":"    public static String deleteTask(String commandArgument) throws DeleteException, DeleteRangeException {","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"amitrahman1026"},"content":"        if (!commandArgument.matches(DIGITS_DELIMITER)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"amitrahman1026"},"content":"            throw new DeleteException();","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"amitrahman1026"},"content":"        int index \u003d Integer.parseInt(commandArgument) - 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"amitrahman1026"},"content":"        if (index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"amitrahman1026"},"content":"            throw new DeleteRangeException();","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"amitrahman1026"},"content":"        String deleteCompleteMessage \u003d \"Noted. I\u0027ve removed this task: \"","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"amitrahman1026"},"content":"                + taskList.get(index).showTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"amitrahman1026"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"amitrahman1026"},"content":"        deleteCompleteMessage +\u003d \"\\n Now you have \" + taskList.size()","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"amitrahman1026"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":160,"author":{"gitId":"amitrahman1026"},"content":"        return deleteCompleteMessage;","lastModifiedDate":"2022-09-16"},{"lineNumber":161,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":162,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":163,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":164,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":165,"author":{"gitId":"amitrahman1026"},"content":"     * Function that retrieves all","lastModifiedDate":"2022-09-09"},{"lineNumber":166,"author":{"gitId":"amitrahman1026"},"content":"     * tasks in taskList.","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"amitrahman1026"},"content":"     * @return String of all tasks","lastModifiedDate":"2022-09-09"},{"lineNumber":169,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":170,"author":{"gitId":"amitrahman1026"},"content":"    public static String getTaskList() throws EmptyListException {","lastModifiedDate":"2022-09-16"},{"lineNumber":171,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":172,"author":{"gitId":"amitrahman1026"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-16"},{"lineNumber":173,"author":{"gitId":"amitrahman1026"},"content":"            throw new EmptyListException();","lastModifiedDate":"2022-09-16"},{"lineNumber":174,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":175,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":176,"author":{"gitId":"amitrahman1026"},"content":"        StringBuilder listOutput \u003d new StringBuilder();","lastModifiedDate":"2022-09-09"},{"lineNumber":177,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":178,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":179,"author":{"gitId":"amitrahman1026"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-09"},{"lineNumber":180,"author":{"gitId":"amitrahman1026"},"content":"            listOutput.append(i + 1);","lastModifiedDate":"2022-09-09"},{"lineNumber":181,"author":{"gitId":"amitrahman1026"},"content":"            listOutput.append(\". \");","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"amitrahman1026"},"content":"            listOutput.append(taskList.get(i).showTask());","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"amitrahman1026"},"content":"            listOutput.append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"amitrahman1026"},"content":"        return listOutput.toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":186,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":187,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":188,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-09"},{"lineNumber":189,"author":{"gitId":"amitrahman1026"},"content":"     * Function sets marks in task-list to be done","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"amitrahman1026"},"content":"     * @return Acknowledgement message of successful marking of the task as done","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DoneFormatException when user input format does not follow done \u003cinteger\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":192,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DoneRangeException when user inputs index out of range of taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":193,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DoneAlreadyException when user tries to mark a task that is already marked as done","lastModifiedDate":"2022-09-28"},{"lineNumber":194,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":195,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":196,"author":{"gitId":"amitrahman1026"},"content":"    public static String markAsDone(String commandArguments) throws DoneFormatException, DoneRangeException, DoneAlreadyException {","lastModifiedDate":"2022-09-16"},{"lineNumber":197,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":198,"author":{"gitId":"amitrahman1026"},"content":"        if (!commandArguments.matches(DIGITS_DELIMITER)) {","lastModifiedDate":"2022-09-16"},{"lineNumber":199,"author":{"gitId":"amitrahman1026"},"content":"            throw new DoneFormatException();","lastModifiedDate":"2022-09-16"},{"lineNumber":200,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"amitrahman1026"},"content":"        int index \u003d Integer.parseInt(commandArguments) - 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":202,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":203,"author":{"gitId":"amitrahman1026"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":204,"author":{"gitId":"amitrahman1026"},"content":"            throw new DoneRangeException();","lastModifiedDate":"2022-09-16"},{"lineNumber":205,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":206,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":207,"author":{"gitId":"amitrahman1026"},"content":"        if (taskList.get(index).isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":208,"author":{"gitId":"amitrahman1026"},"content":"            throw new DoneAlreadyException();","lastModifiedDate":"2022-09-16"},{"lineNumber":209,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":210,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"amitrahman1026"},"content":"        taskList.get(index).markDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":212,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":213,"author":{"gitId":"amitrahman1026"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"amitrahman1026"},"content":"                + taskList.get(index).showTask()","lastModifiedDate":"2022-09-16"},{"lineNumber":215,"author":{"gitId":"amitrahman1026"},"content":"                + \"\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":216,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":217,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":218,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"amitrahman1026"},"content":"     * Default empty command to be used when unrecognised command is given","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"amitrahman1026"},"content":"     * @throws DoNothingException when command is not recognised from user input","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"amitrahman1026"},"content":"    public static void doNothing() throws DoNothingException {","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"amitrahman1026"},"content":"        throw new DoNothingException();","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"amitrahman1026"},"content":"     * Find tasks which have description containing search term","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"amitrahman1026"},"content":"     * @param commandArguments Search term to find within tasks\u0027 description","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"amitrahman1026"},"content":"     * @return a String representing the list of items that contain the search term","lastModifiedDate":"2022-09-28"},{"lineNumber":232,"author":{"gitId":"amitrahman1026"},"content":"     * @throws NotFoundException when matching search term is not found","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":234,"author":{"gitId":"amitrahman1026"},"content":"    public static String findTask(String commandArguments) throws NotFoundException {","lastModifiedDate":"2022-09-27"},{"lineNumber":235,"author":{"gitId":"amitrahman1026"},"content":"        StringBuilder found \u003d new StringBuilder(\"Here are the tasks in your list that contains \u0027\" + commandArguments + \"\u0027\");","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":237,"author":{"gitId":"amitrahman1026"},"content":"        int numTasksFound \u003d 0;","lastModifiedDate":"2022-09-27"},{"lineNumber":238,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":239,"author":{"gitId":"amitrahman1026"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++){","lastModifiedDate":"2022-09-27"},{"lineNumber":240,"author":{"gitId":"amitrahman1026"},"content":"            if (taskList.get(i).getTaskDescription().toLowerCase().contains(commandArguments.toLowerCase())){","lastModifiedDate":"2022-09-27"},{"lineNumber":241,"author":{"gitId":"amitrahman1026"},"content":"                numTasksFound++;","lastModifiedDate":"2022-09-27"},{"lineNumber":242,"author":{"gitId":"amitrahman1026"},"content":"                found.append(\"\\n\").append(i + 1).append(\". \").append(taskList.get(i).showTask());","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"amitrahman1026"},"content":"            }","lastModifiedDate":"2022-09-27"},{"lineNumber":244,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":245,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":246,"author":{"gitId":"amitrahman1026"},"content":"        if (numTasksFound \u003d\u003d 0){","lastModifiedDate":"2022-09-27"},{"lineNumber":247,"author":{"gitId":"amitrahman1026"},"content":"            throw new NotFoundException();","lastModifiedDate":"2022-09-27"},{"lineNumber":248,"author":{"gitId":"amitrahman1026"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":249,"author":{"gitId":"amitrahman1026"},"content":"        return found.toString();","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":251,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"amitrahman1026":251}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.tasks;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":" * Represents a Todo Task to be added to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"    /** Constructors with and without isDone */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription);","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"    public Todo(String taskDescription, boolean isDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003eshowTask\u003c/code\u003e method specific for Todo*/","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"    public String showTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"        return \"[T][\" + (isDone ? DONE_SYMBOL : \" \") + \"] \" + taskDescription;","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"    /** Formatted \u003ccode\u003ewriteTaskToFile\u003c/code\u003e method specific for Todo*/","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"    public String writeTaskToFile(){","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"        return \"T | \" + (isDone ? 1 : 0) + \" | \" + taskDescription;","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"amitrahman1026":28}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"package duke.ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":" * Display class duke.ui.UI for duke chatbot \u0026 handle user input","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"public class UI {","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"    private static Scanner in \u003d null;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"    public static final String snailArt \u003d \"───▄▄▄\\n\" +","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"            \"─▄▀░▄░▀▄\\n\" +","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"            \"─█░█▄▀░█\\n\" +","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"            \"─█░▀▄▄▀█▄█▄▀\\n\" +","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"            \"▄▄█▄▄▄▄███▀\\n\\n\";","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"     * Greeting and goodbye messages","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"    public static final String DIVIDER \u003d \"______________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"    public static final String greetingMessage \u003d","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"amitrahman1026"},"content":"            \"Hello! I\u0027m Duke!\\n\" +","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"amitrahman1026"},"content":"                    snailArt +","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"amitrahman1026"},"content":"                    \"How can I help you?\";","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"amitrahman1026"},"content":"    public static final String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\\n\" + snailArt;","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"amitrahman1026"},"content":"     * Constructor","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"amitrahman1026"},"content":"    public UI() {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"amitrahman1026"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"amitrahman1026"},"content":"     * Reads input from command line","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"amitrahman1026"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"amitrahman1026"},"content":"     * @return String containing user input","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"amitrahman1026"},"content":"    public static String readInput() {","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"amitrahman1026"},"content":"        return in.nextLine();","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"amitrahman1026"},"content":"     * Prints formatted message","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"amitrahman1026"},"content":"    public static void printMessageWithLines(String message) {","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"amitrahman1026"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"amitrahman1026"},"content":"        System.out.println(message);","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"amitrahman1026"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"amitrahman1026"},"content":"     * Helper function to print greeting messages","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"amitrahman1026"},"content":"    public static void printGreeting() {","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"amitrahman1026"},"content":"        printMessageWithLines(greetingMessage);","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"amitrahman1026"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"amitrahman1026"},"content":"     * Helper function to print exit messages","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"amitrahman1026"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"amitrahman1026"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"amitrahman1026"},"content":"        printMessageWithLines(goodbyeMessage);","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"amitrahman1026"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"amitrahman1026"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"amitrahman1026"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amitrahman1026"},"content":"unknown command","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"amitrahman1026"},"content":"todo borrow book","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"amitrahman1026"},"content":"todo","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"amitrahman1026"},"content":"event basketball /at noon","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"amitrahman1026"},"content":"event /at noon","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"amitrahman1026"},"content":"deadline return book /by noon","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"amitrahman1026"},"content":"deadline project /by","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"amitrahman1026"},"content":"done 2","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"amitrahman1026"},"content":"done three","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"amitrahman1026"},"content":"done 4","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"amitrahman1026"},"content":"event another Event /at 1234","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"amitrahman1026"},"content":"done 4","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"amitrahman1026"},"content":"delete return book","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"delete 5","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"amitrahman1026"},"content":"delete 1","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"amitrahman1026"},"content":"list","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"amitrahman1026"},"content":"bye","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"amitrahman1026":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amitrahman1026"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amitrahman1026":1,"-":20}}]
