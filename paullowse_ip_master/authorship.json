[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"# duke.Duke project template","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"You will use this as a baseline for the individual project, as well as the team project later in the semester.","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"paullowse":2,"-":24}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"     * Creates duke.Task Object","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"     * @param text","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"    protected String by;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"        super(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"paullowse":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"import java.util.List;","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"    public static void main(String[] args) throws UnknownInputException {","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"        //tasks is an array list collection of task objects","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"        String input \u003d \" \";","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"        String description;","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"        Boolean isMarked;","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"        // duke runs until a \"bye\" is entered","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"        while (tasks.size() \u003c 100 \u0026\u0026 !input.equals(\"bye\")) {","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"            String [] splitInput \u003d input.split(\" \");","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"            isMarked \u003d Boolean.FALSE;","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"            // list commands duke to list all the tasks stored and their completion status","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"            // try at the start cos of the errors possibly","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"                switch (splitInput[0]) {","lastModifiedDate":"2022-09-03"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"                    case \"list\":","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"                        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"                            System.out.println(i + 1 + \". \" + tasks.get(i));","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"                        }","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"                        System.out.println();","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"                    case \"mark\":","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"                        // mark x commands duke to mark the corresponding task as completed","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"paullowse"},"content":"                        isMarked \u003d Boolean.TRUE;","lastModifiedDate":"2022-09-03"},{"lineNumber":48,"author":{"gitId":"paullowse"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-08-24"},{"lineNumber":49,"author":{"gitId":"paullowse"},"content":"                        // without the break, both mark and unmark will trigger the similar process","lastModifiedDate":"2022-08-30"},{"lineNumber":50,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"paullowse"},"content":"                    case \"unmark\":","lastModifiedDate":"2022-08-30"},{"lineNumber":52,"author":{"gitId":"paullowse"},"content":"                        // unmark x commands duke to mark the corresponding task as uncompleted","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"paullowse"},"content":"                        // Exceptions could occur","lastModifiedDate":"2022-08-30"},{"lineNumber":54,"author":{"gitId":"paullowse"},"content":"                        String numericString \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"paullowse"},"content":"                        int markedNum \u003d Integer.parseInt(numericString) - 1;","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"paullowse"},"content":"                        tasks.get(markedNum).setStatus(isMarked);","lastModifiedDate":"2022-09-03"},{"lineNumber":57,"author":{"gitId":"paullowse"},"content":"                        if (!isMarked) {","lastModifiedDate":"2022-09-03"},{"lineNumber":58,"author":{"gitId":"paullowse"},"content":"                            System.out.println(\"Oh no :( I\u0027ve marked it as uncompleted: \");","lastModifiedDate":"2022-08-30"},{"lineNumber":59,"author":{"gitId":"paullowse"},"content":"                        }","lastModifiedDate":"2022-08-24"},{"lineNumber":60,"author":{"gitId":"paullowse"},"content":"                        System.out.println(\"  \" + tasks.get(markedNum) + \"\\n\");","lastModifiedDate":"2022-08-30"},{"lineNumber":61,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":62,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":63,"author":{"gitId":"paullowse"},"content":"                    case \"todo\":","lastModifiedDate":"2022-08-30"},{"lineNumber":64,"author":{"gitId":"paullowse"},"content":"                        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"paullowse"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"paullowse"},"content":"                        }","lastModifiedDate":"2022-09-03"},{"lineNumber":67,"author":{"gitId":"paullowse"},"content":"                        description \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"paullowse"},"content":"                        Task td \u003d new Todo(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":69,"author":{"gitId":"paullowse"},"content":"                        // this function does all the printing","lastModifiedDate":"2022-09-03"},{"lineNumber":70,"author":{"gitId":"paullowse"},"content":"                        taskPrint(tasks, td);","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":72,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":73,"author":{"gitId":"paullowse"},"content":"                    case \"deadline\":","lastModifiedDate":"2022-08-30"},{"lineNumber":74,"author":{"gitId":"paullowse"},"content":"                        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"paullowse"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"paullowse"},"content":"                        }","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"paullowse"},"content":"                        description \u003d input.substring(input.indexOf(\" \") + 1, input.indexOf(\" /by \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":78,"author":{"gitId":"paullowse"},"content":"                        String by \u003d input.substring(input.indexOf(\"/by \") + 4);","lastModifiedDate":"2022-09-03"},{"lineNumber":79,"author":{"gitId":"paullowse"},"content":"                        Task d \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-30"},{"lineNumber":80,"author":{"gitId":"paullowse"},"content":"                        taskPrint(tasks, d);","lastModifiedDate":"2022-09-03"},{"lineNumber":81,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":82,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":83,"author":{"gitId":"paullowse"},"content":"                        //StringIndexOutOfBoundsException","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":85,"author":{"gitId":"paullowse"},"content":"                    case \"event\":","lastModifiedDate":"2022-08-30"},{"lineNumber":86,"author":{"gitId":"paullowse"},"content":"                        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-03"},{"lineNumber":87,"author":{"gitId":"paullowse"},"content":"                            throw new EmptyDescriptionException();","lastModifiedDate":"2022-09-03"},{"lineNumber":88,"author":{"gitId":"paullowse"},"content":"                        }","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"paullowse"},"content":"                        description \u003d input.substring(input.indexOf(\" \") + 1, input.indexOf(\" /at \"));","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"paullowse"},"content":"                        String at \u003d input.substring(input.indexOf(\"/at \") + 4);","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"paullowse"},"content":"                        Task e \u003d new Event(description, at);","lastModifiedDate":"2022-08-30"},{"lineNumber":92,"author":{"gitId":"paullowse"},"content":"                        taskPrint(tasks, e);","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":94,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":95,"author":{"gitId":"paullowse"},"content":"                    case \"blah\":","lastModifiedDate":"2022-09-03"},{"lineNumber":96,"author":{"gitId":"paullowse"},"content":"                    case \"idk\":","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"paullowse"},"content":"                        throw new UnknownInputException();","lastModifiedDate":"2022-09-03"},{"lineNumber":98,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":99,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":100,"author":{"gitId":"paullowse"},"content":"                    default:","lastModifiedDate":"2022-08-30"},{"lineNumber":101,"author":{"gitId":"paullowse"},"content":"                        // other calls causes duke to add the user-input to tasks","lastModifiedDate":"2022-08-25"},{"lineNumber":102,"author":{"gitId":"paullowse"},"content":"                        Task t \u003d new Task(input);","lastModifiedDate":"2022-09-03"},{"lineNumber":103,"author":{"gitId":"paullowse"},"content":"                        tasks.add(t);","lastModifiedDate":"2022-08-25"},{"lineNumber":104,"author":{"gitId":"paullowse"},"content":"                        System.out.println(\"added: \" + input + \"\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"paullowse"},"content":"                        break;","lastModifiedDate":"2022-08-30"},{"lineNumber":106,"author":{"gitId":"paullowse"},"content":"                }","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"paullowse"},"content":"            catch (UnknownInputException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"paullowse"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"paullowse"},"content":"            catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":113,"author":{"gitId":"paullowse"},"content":"                System.out.println(\"OOPS!!! You must have a \u0027 /at \u0027 for events OR a \u0027 /by \u0027 for deadlines!!\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":115,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"paullowse"},"content":"            catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":117,"author":{"gitId":"paullowse"},"content":"                if (splitInput[0] \u003d\u003d \"event\") {","lastModifiedDate":"2022-09-03"},{"lineNumber":118,"author":{"gitId":"paullowse"},"content":"                    System.out.println(\"OOPS!!! The description of an \" + splitInput[0] + \" cannot be empty.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":119,"author":{"gitId":"paullowse"},"content":"                } else {","lastModifiedDate":"2022-09-03"},{"lineNumber":120,"author":{"gitId":"paullowse"},"content":"                    System.out.println(\"OOPS!!! The description of a \" + splitInput[0] + \" cannot be empty.\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":121,"author":{"gitId":"paullowse"},"content":"                }","lastModifiedDate":"2022-09-03"},{"lineNumber":122,"author":{"gitId":"paullowse"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":123,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":124,"author":{"gitId":"paullowse"},"content":"            // input after the try, catch and switch case to obtain the next input statement","lastModifiedDate":"2022-09-03"},{"lineNumber":125,"author":{"gitId":"paullowse"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-09-03"},{"lineNumber":126,"author":{"gitId":"paullowse"},"content":"            input \u003d input.trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":127,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":128,"author":{"gitId":"paullowse"},"content":"        }","lastModifiedDate":"2022-08-30"},{"lineNumber":129,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":130,"author":{"gitId":"paullowse"},"content":"        System.out.println(\"Bye good friend! Hope to see you again soon!\\n\" + logo);","lastModifiedDate":"2022-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":133,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":134,"author":{"gitId":"paullowse"},"content":"     * Method for printing Tasks adding","lastModifiedDate":"2022-08-30"},{"lineNumber":135,"author":{"gitId":"paullowse"},"content":"     * @param tasks","lastModifiedDate":"2022-08-30"},{"lineNumber":136,"author":{"gitId":"paullowse"},"content":"     * @param t","lastModifiedDate":"2022-08-30"},{"lineNumber":137,"author":{"gitId":"paullowse"},"content":"     * @return","lastModifiedDate":"2022-08-30"},{"lineNumber":138,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":139,"author":{"gitId":"paullowse"},"content":"    public static void taskPrint(List\u003cTask\u003e tasks, Task t) {","lastModifiedDate":"2022-09-03"},{"lineNumber":140,"author":{"gitId":"paullowse"},"content":"        tasks.add(t);","lastModifiedDate":"2022-08-30"},{"lineNumber":141,"author":{"gitId":"paullowse"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t);","lastModifiedDate":"2022-08-30"},{"lineNumber":142,"author":{"gitId":"paullowse"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\\n\");","lastModifiedDate":"2022-09-03"},{"lineNumber":143,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"paullowse":136,"-":8}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"paullowse":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"     * Creates duke.Task Object","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"     * @param description","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"    protected String at;","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"        super(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"paullowse":22}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"    protected String description;","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"     * Creates duke.Task Object","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"     * @param description","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"     * Returns the status of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"     * @return status as \"X\" or \" \"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":21,"author":{"gitId":"paullowse"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-30"},{"lineNumber":22,"author":{"gitId":"paullowse"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-30"},{"lineNumber":23,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":24,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":25,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":26,"author":{"gitId":"paullowse"},"content":"     * Returns the Description of the task","lastModifiedDate":"2022-08-30"},{"lineNumber":27,"author":{"gitId":"paullowse"},"content":"     * @return description","lastModifiedDate":"2022-08-30"},{"lineNumber":28,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":29,"author":{"gitId":"paullowse"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-30"},{"lineNumber":30,"author":{"gitId":"paullowse"},"content":"        return (description);","lastModifiedDate":"2022-08-30"},{"lineNumber":31,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":32,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":33,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":34,"author":{"gitId":"paullowse"},"content":"     * Sets Status to according to mark","lastModifiedDate":"2022-08-30"},{"lineNumber":35,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":36,"author":{"gitId":"paullowse"},"content":"    public void setStatus(Boolean isMark) {","lastModifiedDate":"2022-08-30"},{"lineNumber":37,"author":{"gitId":"paullowse"},"content":"        isDone \u003d isMark;","lastModifiedDate":"2022-08-30"},{"lineNumber":38,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":39,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":40,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":41,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":42,"author":{"gitId":"paullowse"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":43,"author":{"gitId":"paullowse"},"content":"        return \"[\" + getStatusIcon() +\"] \" + description;","lastModifiedDate":"2022-08-30"},{"lineNumber":44,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":45,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":46,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"paullowse":46}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"    /**","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"     * Creates duke.Task Object","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"     *","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"     * @param description","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"paullowse"},"content":"     */","lastModifiedDate":"2022-08-30"},{"lineNumber":9,"author":{"gitId":"paullowse"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-30"},{"lineNumber":10,"author":{"gitId":"paullowse"},"content":"        super(description);","lastModifiedDate":"2022-08-30"},{"lineNumber":11,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":12,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":13,"author":{"gitId":"paullowse"},"content":"    @Override","lastModifiedDate":"2022-08-30"},{"lineNumber":14,"author":{"gitId":"paullowse"},"content":"    public String toString() {","lastModifiedDate":"2022-08-30"},{"lineNumber":15,"author":{"gitId":"paullowse"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-30"},{"lineNumber":16,"author":{"gitId":"paullowse"},"content":"    }","lastModifiedDate":"2022-08-30"},{"lineNumber":17,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":19,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-08-30"},{"lineNumber":20,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"paullowse":20}},{"path":"src/main/java/duke/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"public class UnknownInputException extends Exception {","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"paullowse":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"paullowse"},"content":"Hi","lastModifiedDate":"2022-08-30"},{"lineNumber":2,"author":{"gitId":"paullowse"},"content":"todo sleep","lastModifiedDate":"2022-08-30"},{"lineNumber":3,"author":{"gitId":"paullowse"},"content":"list","lastModifiedDate":"2022-08-30"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"mark 1","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"list","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"unmark 1","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"bye","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"paullowse":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"paullowse"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"paullowse":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"paullowse"},"content":"#if [ ! -d \"../bin\" ]","lastModifiedDate":"2022-08-30"},{"lineNumber":5,"author":{"gitId":"paullowse"},"content":"#then","lastModifiedDate":"2022-08-30"},{"lineNumber":6,"author":{"gitId":"paullowse"},"content":"#    mkdir ../bin","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"paullowse"},"content":"#fi","lastModifiedDate":"2022-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"paullowse":4,"-":34}}]
