[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"T / 1 / read book","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"D / 0 / return book / 2019-10-15","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"E / 0 / project meeting / 2019-08-06 2-4pm","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"T / 1 / join sports club","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"jeyvia":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"# Duke User Guide","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"#### Task List Manager","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"## Types of tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"### Todo","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"A `todo` task which contains: ","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"- Name ","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"### Event","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"An `event` task which contains:","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"- Name","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"- Date \u0026 Time of `event`","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"### Deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"A `deadline` task which contains:","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"- Name","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"- Date \u0026 Time that `deadline` is due by","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"## Features of Duke","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"### Starting the programme","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"When you start the programme, you should see the following message. ","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":" ____        _        ","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"|  _ \\ _   _| | _____","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"What can I do for you?","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"### Task List of Todos, Events and Deadlines","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"A collated Task List of tasks that you can view.","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"### `list` - To view full list of tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"**Duke** will print your full list of tasks to the output. ","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"`list`","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"1.[T][X] read book","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"2.[D][ ] return book (by: Oct 15 2019)","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"3.[E][ ] project meeting (at: Aug 6 2019 2-4pm)","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"4.[T][X] join sports club","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"If your list is empty, **Duke** will print the following message.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"Your list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"### Add new tasks to Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"### `Todo` - Add Todo to Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"`todo (task name)`","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"If your todo is added successfully, you should see following message below. **Duke** should also update you on the ","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"total number of tasks in your Task List. ","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"jeyvia"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"jeyvia"},"content":"  [T][ ] Name","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"jeyvia"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"jeyvia"},"content":"### `Event` - Add Event to Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"jeyvia"},"content":"`event (task name) /at (date time)`","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"jeyvia"},"content":"The input date must be given in the format: *YYYY-MM-DD*.","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"jeyvia"},"content":"If your `event` is added successfully, you should see following details below. **Duke** should also update you on the ","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"jeyvia"},"content":"total number of tasks in your Task List.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"jeyvia"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"jeyvia"},"content":"  [E][ ] Name (at: YYYY-MM-DD Time)","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"jeyvia"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"jeyvia"},"content":"### `Deadline` - Add Deadline to Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"jeyvia"},"content":"`deadline (task name) /by (date time)`","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"jeyvia"},"content":"The input date must be given in the format: *YYYY-MM-DD*.","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":101,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"jeyvia"},"content":"If your `deadline` is added successfully, you should see following details below. **Duke** should also update you on ","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"jeyvia"},"content":"the total number of tasks in your Task List.","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"jeyvia"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-26"},{"lineNumber":107,"author":{"gitId":"jeyvia"},"content":"  [D][ ] Name (by: YYYY-MM-DD Time)","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"jeyvia"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"jeyvia"},"content":"### Deleting tasks from Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"jeyvia"},"content":"You can remove tasks from Task List using their index number. This works for all 3 types of tasks. ","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"jeyvia"},"content":"`delete (task index number)`","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"jeyvia"},"content":"If your task is deleted successfully, you should see following details below. **Duke** should also update you on the ","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"jeyvia"},"content":"total number of tasks in your Task List.","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"jeyvia"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"jeyvia"},"content":"  [E][ ] Event Name (at: Jan 21 2021 2100)","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"jeyvia"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"jeyvia"},"content":"### Finding tasks in Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"jeyvia"},"content":"You can find specific tasks from Task List using keywords as search input. This works for all 3 types of tasks.","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"jeyvia"},"content":"`find (keywords)`","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"jeyvia"},"content":"If a task contains the keywords, **Duke** will print out the full details of the task. An example of the list of tasks ","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"jeyvia"},"content":"that contains the keyword ","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"jeyvia"},"content":"`\"book\"` is shown below. ","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":141,"author":{"gitId":"jeyvia"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"jeyvia"},"content":"1.[T][X] read book","lastModifiedDate":"2022-09-26"},{"lineNumber":143,"author":{"gitId":"jeyvia"},"content":"2.[D][ ] return book (by: Oct 15 2019)","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"jeyvia"},"content":"If no tasks in your list contains the keywords, **Duke** will print out the following message.","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"jeyvia"},"content":"There are no tasks found with the keyword: \u0027keywords\u0027.","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"jeyvia"},"content":"### Marking/Unmarking tasks in Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"jeyvia"},"content":"You can mark/unmark specific tasks from Task List using their index number. This works for all 3 types of tasks.","lastModifiedDate":"2022-09-26"},{"lineNumber":152,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":154,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"jeyvia"},"content":"`mark (task index number)`","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"jeyvia"},"content":"`unmark (task index number)`","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":160,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"jeyvia"},"content":"If your task is marked/unmarked successfully, **Duke** will print out the full details of the task with the ","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"jeyvia"},"content":"corresponding message. ","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":164,"author":{"gitId":"jeyvia"},"content":"This is a successful example of marking a task as done. ","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"jeyvia"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"jeyvia"},"content":"  [E][X] Name (at: Jun 21 2021 6pm)","lastModifiedDate":"2022-09-26"},{"lineNumber":168,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":169,"author":{"gitId":"jeyvia"},"content":"This is a successful example of unmarking a task as done.","lastModifiedDate":"2022-09-26"},{"lineNumber":170,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":171,"author":{"gitId":"jeyvia"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-26"},{"lineNumber":172,"author":{"gitId":"jeyvia"},"content":"  [E][ ] Name (at: Jun 21 2021 6pm)","lastModifiedDate":"2022-09-26"},{"lineNumber":173,"author":{"gitId":"jeyvia"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":175,"author":{"gitId":"jeyvia"},"content":"### Ending the programme","lastModifiedDate":"2022-09-26"},{"lineNumber":176,"author":{"gitId":"jeyvia"},"content":"Once you are done modifying or viewing your Task List, you can end the programme. ","lastModifiedDate":"2022-09-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":178,"author":{"gitId":"jeyvia"},"content":"#### Example of usage:","lastModifiedDate":"2022-09-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":180,"author":{"gitId":"jeyvia"},"content":"`bye`","lastModifiedDate":"2022-09-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":182,"author":{"gitId":"jeyvia"},"content":"#### Expected output:","lastModifiedDate":"2022-09-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":184,"author":{"gitId":"jeyvia"},"content":"If your programme has ended successfully, **Duke** will print out the following message.","lastModifiedDate":"2022-09-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":186,"author":{"gitId":"jeyvia"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-26"},{"lineNumber":188,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":189,"author":{"gitId":"jeyvia"},"content":"## Storing your Task List","lastModifiedDate":"2022-09-26"},{"lineNumber":190,"author":{"gitId":"jeyvia"},"content":"**Duke** stores the data of the Task List as `String` in a text file, `duke.txt`. The programme is made to find this ","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"jeyvia"},"content":"text file in the relative path:","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"jeyvia"},"content":"`[project_root]/data/duke.txt`","lastModifiedDate":"2022-09-26"},{"lineNumber":193,"author":{"gitId":"jeyvia"},"content":"### Retrieving data from file","lastModifiedDate":"2022-09-26"},{"lineNumber":194,"author":{"gitId":"jeyvia"},"content":"**Duke** automatically reads data from `duke.txt` at the start of the programme, and loads your Task List with the data ","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"jeyvia"},"content":"stored. ","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"jeyvia"},"content":"If `duke.txt` is not found in the relative path, **Duke** will create a new `duke.txt` in the relative file path. ","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"jeyvia"},"content":"### Writing data to file","lastModifiedDate":"2022-09-26"},{"lineNumber":199,"author":{"gitId":"jeyvia"},"content":"**Duke** appends the current Task List as `String` to another text file, `temp.txt`. The programme is made to create ","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"jeyvia"},"content":"this temporary text file in the relative path: `[project_root]/data/temp.txt`. ","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"jeyvia"},"content":"**Duke** then copies the contents of `temp.txt` into `duke.txt`, and deletes `temp.txt`. Hence, `duke.txt` now stores ","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"jeyvia"},"content":"the updated Task List. ","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jeyvia":179,"-":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"import consoleCommands.Command;","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import consoleCommands.Parser;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"import consoleCommands.Storage;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import consoleCommands.Ui;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import exception.NotEnoughArgumentsException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidFileDataException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"import exception.TaskDoesNotExistException;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidArgumentsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"import task.Task;","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":" * This is the main class of the programme, where the programme starts and ends, and exceptions are being handled.","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":" * It is also the base of the programme, where other classes are called from here.","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"    private static final String userDirectory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"    private static final java.nio.file.Path filePath \u003d java.nio.file.Paths.get(userDirectory, \"data\", \"duke.txt\");","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"    private static final java.nio.file.Path tempFilePath \u003d java.nio.file.Paths.get(userDirectory, \"data\", \"temp.txt\");","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"    private Command c;","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"     * Duke reads in data from text file to fill taskList array","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"     * @throws InvalidFileDataException if the file contains data that is wrong or not formatted correctly","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"     * @throws IOException if filePath is invalid or file cannot be found","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"    */","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"    public Duke() throws InvalidFileDataException, IOException {","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"            storage.readFromFile(filePath, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"        } catch (InvalidFileDataException |","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"                 IOException |","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"                 DateParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"     * Calls .start() to send introduction message","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"     * Runs the programme in a while-loop, until isExit is true","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"     * Catches the exception from .execute() and calls ui.showError() to print error message","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"     * After exiting while-loop, calls .writeToFile() to write data from taskList to text file","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"     * Calls .end() to send goodbye message and end programme","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"     * @throws IOException if filePath is invalid or file cannot be found","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"    public void run() throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"        ui.start();","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"            try {","lastModifiedDate":"2022-09-11"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"                c \u003d parser.Parse(fullCommand);","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"                c.execute(taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"            } catch (NotEnoughArgumentsException |","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"                     TaskDoesNotExistException |","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"                     InvalidCommandException |","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"                     InvalidArgumentsException |","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"                     DateParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"jeyvia"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-14"},{"lineNumber":72,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"jeyvia"},"content":"            storage.writeToFile(filePath, tempFilePath, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"jeyvia"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"jeyvia"},"content":"        ui.end();","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-08-24"},{"lineNumber":80,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":82,"author":{"gitId":"jeyvia"},"content":"     * @throws IOException if filePath is invalid or file cannot be found","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"jeyvia"},"content":"    public static void main(String[] args) throws IOException, InvalidFileDataException {","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"jeyvia"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeyvia":84,"-":3}},{"path":"src/main/java/consoleCommands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package consoleCommands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import exception.NotEnoughArgumentsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidArgumentsException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import exception.TaskDoesNotExistException;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"import task.Task;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":" * Class to handle all command calls in programme","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":" * Takes in two params, command and arguments to carry out command calls","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":" * Contains boolean isExit, to control when to end the programme","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"public class Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_UNMARKED \u003d \"unmark\";","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_MARKED \u003d \"mark\";","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"    private String command;","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"    private String arguments;","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"     * @param command is the string that determines the command executed","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is the string that supplements the executed command with data (e.g date, descriptions)","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"    public Command(String command, String arguments) {","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"     * execute() is the method that calls the commands in the programme","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"     * End programme: bye","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"     * List tasks: list","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"     * Add todo: todo (name)","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"     * Add deadline: deadline (name) /by (date \u0026 time)","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"     * Add event: event (name) /at (date \u0026 time)","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"     * Mark/Unmark: mark/unmark (task number)","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"     * Delete: delete (task number)","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"     * Find: find (input text)","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"     * @param taskList is an ArrayList of tasks, passed into .execute() to be used in commands","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if the arguments provided is insufficient for the corresponding commands","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"     * @throws TaskDoesNotExistException if the index provided in certain commands is \u003e size of taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"     * @throws InvalidArgumentsException if the arguments provided is incorrect for the corresponding commands","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"     * @throws InvalidCommandException if command provided does not exist","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"     * @throws DateParseException if date is given in the wrong format","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"    public void execute(ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"            throws NotEnoughArgumentsException, TaskDoesNotExistException, InvalidArgumentsException,","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"            InvalidCommandException, DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"            if (command.equalsIgnoreCase(COMMAND_BYE)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"                isExit \u003d true;","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_LIST)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"                TaskList.printList(taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_FIND)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"                TaskList.findTask(arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_MARKED) || command.equalsIgnoreCase(COMMAND_UNMARKED)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"                TaskList.markStatus(command, arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_DELETE)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"                TaskList.deleteTask(arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_TODO)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"jeyvia"},"content":"                TaskList.addTodo(arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_EVENT)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"jeyvia"},"content":"                TaskList.addEvent(arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"jeyvia"},"content":"            } else if (command.equalsIgnoreCase(COMMAND_DEADLINE)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"jeyvia"},"content":"                TaskList.addDeadline(arguments, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"jeyvia"},"content":"            } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"jeyvia"},"content":"                Ui.printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"jeyvia"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"jeyvia"},"content":"        } catch (NotEnoughArgumentsException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"jeyvia"},"content":"        } catch (TaskDoesNotExistException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"jeyvia"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"jeyvia"},"content":"        } catch (InvalidArgumentsException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":85,"author":{"gitId":"jeyvia"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":86,"author":{"gitId":"jeyvia"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"jeyvia"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"jeyvia"},"content":"        } catch (DateParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"jeyvia"},"content":"            throw new DateParseException();","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":91,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":92,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"jeyvia"},"content":"     * Method determines if programme exits or not","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"jeyvia"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"jeyvia"},"content":"        return isExit;","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":98,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jeyvia":100}},{"path":"src/main/java/consoleCommands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package consoleCommands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Class to parse commands inputted into the programme","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class Parser {","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"     * Method takes in an input string, and converts it into a command class object (with command and arguments)","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Method splits input into 2 strings, the first one being the command, and the second one is the arguments","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     * If input only has command, argument is passed as empty string","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"     * @param input is the input string from command line","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"     * @return command class object to Duke.java for execution","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"    public Command Parse(String input) {","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"        String[] tempInput \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"        if (tempInput.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"            String command \u003d tempInput[0];","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"            String arguments \u003d tempInput[1];","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"            return new Command(command, arguments);","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"        return new Command(input, \"\");","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jeyvia":23}},{"path":"src/main/java/consoleCommands/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package consoleCommands;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidFileDataException;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import task.Deadline;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import task.Event;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import task.Task;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"import task.Todo;","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"import java.io.File;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":" * Class is used to read/write data to/from text file and ArrayList of tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":" * Class also has method of converting tasks to string to be stored as data","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"public class Storage {","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"    public static final String IS_MARKED \u003d \"1\";","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public static final String IS_UNMARKED \u003d \"0\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"    public static final String TODO \u003d \"T\";","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"    public static final String DEADLINE \u003d \"D\";","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"    public static final String EVENT \u003d \"E\";","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"    public static final String LINE_SEPARATOR \u003d \" / \";","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"     * Method is used to read string from text file, and convert it into task objects to be inputted into ArrayList","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"     * If text file cannot be found in filePath, a new text file of the same name will be created","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"     * @param filePath is the relative filePath of the file to be read","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"     * @param taskList is the ArrayList of tasks, to read data from text file","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"    public void readFromFile(Path filePath, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"            throws IOException, InvalidFileDataException, DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"        File f \u003d new File(filePath.toString());","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"        if (f.exists()) {","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"            FileReader fr \u003d new FileReader(filePath.toString());","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"            Scanner s \u003d new Scanner(fr);","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"                String data \u003d s.nextLine();","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"                String[] taskData \u003d data.split(\" / \");","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"                if (taskData[0].equals(TODO)) {","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"                    taskList.add(new Todo(taskData[2]));","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"                } else if (taskData[0].equals(DEADLINE)) {","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"                    taskList.add(new Deadline(taskData[2], taskData[3]));","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"                } else if (taskData[0].equals(EVENT)) {","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"                    taskList.add(new Event(taskData[2], taskData[3]));","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"                } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"                    throw new InvalidFileDataException();","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"                }","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"                if (taskData[1].equals(IS_MARKED)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"                    taskList.get(taskList.size() - 1).isDone \u003d true;","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"                }","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"            fr.close();","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"        } else {","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"            f.createNewFile();","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"     * Method is used to convert task objects into string for writing to text file at the end of programme","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"jeyvia"},"content":"     * Method creates a temp file and inputs the string converted from ArrayList","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"jeyvia"},"content":"     * @param tempFilePath is the relative filePath of the temporary file to be written to","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"jeyvia"},"content":"     * @param taskList is the ArrayList of tasks, to write data to text file","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":74,"author":{"gitId":"jeyvia"},"content":"    public static void arrayToText(Path tempFilePath, ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"jeyvia"},"content":"        FileWriter fw \u003d new FileWriter(tempFilePath.toString(), true);","lastModifiedDate":"2022-09-26"},{"lineNumber":76,"author":{"gitId":"jeyvia"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"jeyvia"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"jeyvia"},"content":"            String textToAppend \u003d currentTask.getTaskClass();","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"jeyvia"},"content":"            if (currentTask.isDone) {","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"jeyvia"},"content":"                textToAppend +\u003d LINE_SEPARATOR + IS_MARKED;","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"jeyvia"},"content":"            } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"jeyvia"},"content":"                textToAppend +\u003d LINE_SEPARATOR + IS_UNMARKED;","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"jeyvia"},"content":"            textToAppend +\u003d LINE_SEPARATOR + currentTask.getDescription();","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"jeyvia"},"content":"            if (currentTask.getTaskClass().equals(EVENT) || currentTask.getTaskClass().equals(DEADLINE)) {","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"jeyvia"},"content":"                textToAppend +\u003d LINE_SEPARATOR + currentTask.getDateAndTime();","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"jeyvia"},"content":"            fw.write(textToAppend + System.lineSeparator());","lastModifiedDate":"2022-09-17"},{"lineNumber":89,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":90,"author":{"gitId":"jeyvia"},"content":"        fw.close();","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":93,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"jeyvia"},"content":"     * Method is used to write data from ArrayList to text file","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"jeyvia"},"content":"     * Method calls .arrayToText() to create a temporary text file, with data from ArrayList written to it","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"jeyvia"},"content":"     * Method then copies data from the temporary text file to the main text file, then deletes the temporary file","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"jeyvia"},"content":"     * @param filePath is the relative filePath of the file to be written to","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"jeyvia"},"content":"     * @param taskList is the ArrayList of tasks, to write data to text file","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"jeyvia"},"content":"     * @param tempFilePath is the relative filePath of the temporary file to be written to","lastModifiedDate":"2022-09-26"},{"lineNumber":100,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"jeyvia"},"content":"    public void writeToFile(Path filePath, Path tempFilePath, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-26"},{"lineNumber":102,"author":{"gitId":"jeyvia"},"content":"            throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":104,"author":{"gitId":"jeyvia"},"content":"            arrayToText(tempFilePath, taskList);","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"jeyvia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":106,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-09-17"},{"lineNumber":107,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"jeyvia"},"content":"        Path tempPath \u003d Paths.get(tempFilePath.toString());","lastModifiedDate":"2022-09-26"},{"lineNumber":109,"author":{"gitId":"jeyvia"},"content":"        Files.copy(tempPath, Paths.get(filePath.toString()), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"jeyvia"},"content":"        Files.delete(tempPath);","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"jeyvia":112}},{"path":"src/main/java/consoleCommands/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package consoleCommands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"import exception.InvalidArgumentsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import exception.NotEnoughArgumentsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import exception.TaskDoesNotExistException;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import task.Deadline;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"import task.Event;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"import task.Task;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"import task.Todo;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"import static consoleCommands.Ui.printLine;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":" * Class to execute commands on taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":" * Class is used to modify taskList or print various excerpts (full or specific tasks) of taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":" * All methods in this class takes in taskList as a parameter, which is an ArrayList of tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"@SuppressWarnings(\"DuplicatedCode\")","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"public class TaskList {","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_MARKED \u003d \"mark\";","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_UNMARKED \u003d \"unmark\";","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_DEADLINE_BY \u003d \"/by\";","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"    public static final String COMMAND_EVENT_AT \u003d \"/at\";","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public static final String ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"    public static final String DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"    public static final String MARKED_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"    public static final String UNMARKED_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"    public static final String EMPTY \u003d \"\";","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"     * Method marks/unmarks status of task in taskList based on command given","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"     * If task is marked, it sets the .isDone of task to true,","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"     * the checkbox will appear as [X] when printed","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"     * If task is unmarked, it sets the .isDone of task to false,","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"     * the checkbox will appear as [ ] when printed","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"     * Method takes in argument string, and converts it into an integer","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"     * @param command is the command of \"mark\" or \"unmark\"","lastModifiedDate":"2022-09-26"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is the index of the task to marked or unmarked","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments is an empty string","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"     * @throws TaskDoesNotExistException if index provided from argument string is \u003e size","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"     * of taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"    public static void markStatus(String command, String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"            throws TaskDoesNotExistException, NotEnoughArgumentsException {","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"        if (arguments.equals(EMPTY)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027delete (task index number)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"        int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"        if (command.equalsIgnoreCase(COMMAND_MARKED)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"            taskList.get(index-1).isDone \u003d true;","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"            System.out.println(MARKED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"        } else if (command.equalsIgnoreCase(COMMAND_UNMARKED)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"            taskList.get(index-1).isDone \u003d false;","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"            System.out.println(UNMARKED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"  \" + taskList.get(index-1));","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"     * Method reads in taskList and prints the full list of tasks if taskList is not empty","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":71,"author":{"gitId":"jeyvia"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"jeyvia"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"Your list is empty.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"jeyvia"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"jeyvia"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"jeyvia"},"content":"                System.out.print((i + 1) + \".\");","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"jeyvia"},"content":"                System.out.println(taskList.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":85,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"jeyvia"},"content":"     * Method deletes a task of a specific index, read in from the arguments, from the taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":87,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is the index of the task to be deleted","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments is an empty string","lastModifiedDate":"2022-09-26"},{"lineNumber":89,"author":{"gitId":"jeyvia"},"content":"     * @throws TaskDoesNotExistException if index provided from argument string is \u003e size","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"jeyvia"},"content":"     * of taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":91,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"jeyvia"},"content":"    public static void deleteTask(String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"jeyvia"},"content":"            throws TaskDoesNotExistException, NotEnoughArgumentsException {","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"jeyvia"},"content":"        if (arguments.equals(EMPTY)) {","lastModifiedDate":"2022-09-26"},{"lineNumber":96,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027delete (task index number)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-26"},{"lineNumber":98,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"jeyvia"},"content":"        int index \u003d Integer.parseInt(arguments);","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"jeyvia"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"jeyvia"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2022-09-25"},{"lineNumber":102,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"jeyvia"},"content":"        System.out.println(DELETED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":104,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"  \" + taskList.get(index-1).toString());","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"jeyvia"},"content":"        taskList.remove(index-1);","lastModifiedDate":"2022-09-25"},{"lineNumber":106,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-25"},{"lineNumber":107,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":108,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":110,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":111,"author":{"gitId":"jeyvia"},"content":"     * Method adds a todo task to taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":112,"author":{"gitId":"jeyvia"},"content":"     * Method will print an ADDED_MESSAGE after successfully adding task to taskList, as a","lastModifiedDate":"2022-09-26"},{"lineNumber":113,"author":{"gitId":"jeyvia"},"content":"     * confirmation.","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is the name of the todo task to be added","lastModifiedDate":"2022-09-26"},{"lineNumber":115,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments is an empty string","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"jeyvia"},"content":"    public static void addTodo (String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"jeyvia"},"content":"            throws NotEnoughArgumentsException {","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":120,"author":{"gitId":"jeyvia"},"content":"        if (arguments.equals(EMPTY)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":121,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027todo (task name)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":124,"author":{"gitId":"jeyvia"},"content":"        taskList.add(new Todo(arguments));","lastModifiedDate":"2022-09-25"},{"lineNumber":125,"author":{"gitId":"jeyvia"},"content":"        System.out.println(ADDED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":126,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"  \" + taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2022-09-25"},{"lineNumber":127,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-25"},{"lineNumber":128,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":129,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":130,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"jeyvia"},"content":"     * Method adds an event task to taskList","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"jeyvia"},"content":"     * Method will print an ADDED_MESSAGE after successfully adding task to taskList, as a","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"jeyvia"},"content":"     * confirmation.","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is a string of the name of event, and date and time of the event. Date","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"jeyvia"},"content":"     * must be provided in the format yyyy-MM-dd.","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"jeyvia"},"content":"     * @throws InvalidArgumentsException if arguments does not contain a \"/at\"","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments does not provide name or","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"jeyvia"},"content":"     * date and time of the event","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"jeyvia"},"content":"     * @throws DateParseException if date is given in the wrong format","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"jeyvia"},"content":"    public static void addEvent (String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-25"},{"lineNumber":143,"author":{"gitId":"jeyvia"},"content":"            throws InvalidArgumentsException, NotEnoughArgumentsException, DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":145,"author":{"gitId":"jeyvia"},"content":"        if (!arguments.contains(COMMAND_EVENT_AT)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":146,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027event (task name) /at (YYYY-MM-DD time)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"jeyvia"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":148,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":149,"author":{"gitId":"jeyvia"},"content":"        String[] eventInstructions \u003d arguments.split(\" /at \");","lastModifiedDate":"2022-09-25"},{"lineNumber":150,"author":{"gitId":"jeyvia"},"content":"        if (eventInstructions.length !\u003d 2) {","lastModifiedDate":"2022-09-25"},{"lineNumber":151,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027event (task name) /at (YYYY-MM-DD time)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":153,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":154,"author":{"gitId":"jeyvia"},"content":"        taskList.add(new Event(eventInstructions[0],eventInstructions[1]));","lastModifiedDate":"2022-09-25"},{"lineNumber":155,"author":{"gitId":"jeyvia"},"content":"        System.out.println(ADDED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":156,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"  \" + taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2022-09-25"},{"lineNumber":157,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-25"},{"lineNumber":158,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":159,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":160,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":162,"author":{"gitId":"jeyvia"},"content":"     * Method adds a deadline task to taskList","lastModifiedDate":"2022-09-26"},{"lineNumber":163,"author":{"gitId":"jeyvia"},"content":"     * Method will print an ADDED_MESSAGE after successfully adding task to taskList, as a","lastModifiedDate":"2022-09-26"},{"lineNumber":164,"author":{"gitId":"jeyvia"},"content":"     * confirmation.","lastModifiedDate":"2022-09-26"},{"lineNumber":165,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is a string of the name of deadline, and date and time of the deadline.","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"jeyvia"},"content":"     * Date must be provided in the format yyyy-MM-dd.","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"jeyvia"},"content":"     * @throws InvalidArgumentsException if arguments does not contain a \"/by\"","lastModifiedDate":"2022-09-26"},{"lineNumber":168,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments does not provide name or","lastModifiedDate":"2022-09-26"},{"lineNumber":169,"author":{"gitId":"jeyvia"},"content":"     * date and time of the deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":170,"author":{"gitId":"jeyvia"},"content":"     * @throws DateParseException if date is given in the wrong format","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":172,"author":{"gitId":"jeyvia"},"content":"    public static void addDeadline (String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-25"},{"lineNumber":173,"author":{"gitId":"jeyvia"},"content":"            throws InvalidArgumentsException, NotEnoughArgumentsException, DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":175,"author":{"gitId":"jeyvia"},"content":"        if (!arguments.contains(COMMAND_DEADLINE_BY)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":176,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027deadline (task name) /by (YYYY-MM-DD time)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"jeyvia"},"content":"            throw new InvalidArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":178,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":179,"author":{"gitId":"jeyvia"},"content":"        String[] deadlineInstructions \u003d arguments.split(\" /by \");","lastModifiedDate":"2022-09-25"},{"lineNumber":180,"author":{"gitId":"jeyvia"},"content":"        if (deadlineInstructions.length !\u003d 2) {","lastModifiedDate":"2022-09-25"},{"lineNumber":181,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027deadline (task name) /by (YYYY-MM-DD time)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":183,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":184,"author":{"gitId":"jeyvia"},"content":"        taskList.add(new Deadline(deadlineInstructions[0],deadlineInstructions[1]));","lastModifiedDate":"2022-09-25"},{"lineNumber":185,"author":{"gitId":"jeyvia"},"content":"        System.out.println(ADDED_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":186,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"  \" + taskList.get(taskList.size() - 1).toString());","lastModifiedDate":"2022-09-25"},{"lineNumber":187,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-25"},{"lineNumber":188,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":189,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":190,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":191,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":192,"author":{"gitId":"jeyvia"},"content":"     * Method uses keywords and iterates through the full list of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"jeyvia"},"content":"     * Method will print the task if Task.Description contains keywords","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"jeyvia"},"content":"     * @param arguments is a string of the keywords used to filter tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"jeyvia"},"content":"     * @throws NotEnoughArgumentsException if arguments is an empty string","lastModifiedDate":"2022-09-26"},{"lineNumber":196,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":197,"author":{"gitId":"jeyvia"},"content":"    public static void findTask (String arguments, ArrayList\u003cTask\u003e taskList)","lastModifiedDate":"2022-09-26"},{"lineNumber":198,"author":{"gitId":"jeyvia"},"content":"            throws NotEnoughArgumentsException {","lastModifiedDate":"2022-09-26"},{"lineNumber":199,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":200,"author":{"gitId":"jeyvia"},"content":"        if (arguments.equals(EMPTY)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":201,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"This command should be \u0027find (keywords)\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"jeyvia"},"content":"            throw new NotEnoughArgumentsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":203,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":204,"author":{"gitId":"jeyvia"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"jeyvia"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-25"},{"lineNumber":206,"author":{"gitId":"jeyvia"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2022-09-25"},{"lineNumber":207,"author":{"gitId":"jeyvia"},"content":"            if (currTask.getDescription().contains(arguments)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":208,"author":{"gitId":"jeyvia"},"content":"                tasksFound.add(currTask);","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"jeyvia"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":212,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"There are no tasks found with the keyword: \u0027\" + arguments + \"\u0027.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"jeyvia"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"jeyvia"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"jeyvia"},"content":"            int count \u003d 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":216,"author":{"gitId":"jeyvia"},"content":"            for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"jeyvia"},"content":"                System.out.print((count) + \".\");","lastModifiedDate":"2022-09-26"},{"lineNumber":218,"author":{"gitId":"jeyvia"},"content":"                System.out.println(tasksFound.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"jeyvia"},"content":"                count++;","lastModifiedDate":"2022-09-26"},{"lineNumber":220,"author":{"gitId":"jeyvia"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":221,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":222,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":223,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":224,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jeyvia":224}},{"path":"src/main/java/consoleCommands/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package consoleCommands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":" * Class to execute interface-based commands in programme","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"public class Ui {","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"    public static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"                                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"                                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"                                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"     * Method prints a line across, to demarcate between consecutive inputs and outputs","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"    public static void printLine() {","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"     * Called at the start of the programme, to print introduction message","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public void start() {","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"        System.out.println(HELLO_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"     * Called at the end of the programme, to print goodbye message","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"    public void end() {","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"    public Ui() {","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"     * Method to read input","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"     * @return input to Duke.java for further parsing","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"        return in.nextLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"     * Method to print exception error message","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"     * @param message is the error message of the respective exceptions","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"    public void showError(String message) {","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"        System.out.println(message);","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"        printLine();","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jeyvia":62}},{"path":"src/main/java/exception/DateParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if arguments provided for corresponding commands is insufficient or invalid","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class DateParseException extends Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"            \"The input date must be given in the format: YYYY-MM-DD. \\nInvalid date detected. Please try again.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"jeyvia":16}},{"path":"src/main/java/exception/InvalidArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if arguments provided for corresponding commands is insufficient or invalid","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class InvalidArgumentsException extends Exception {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d \"Invalid arguments detected. Please try again.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jeyvia":15}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if input is an invalid command","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d \"Invalid command. Please try again.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jeyvia":16}},{"path":"src/main/java/exception/InvalidFileDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if data found in file is invalid or text file is invalid","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class InvalidFileDataException extends Exception {","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d \"Invalid file data detected. File data will not be read.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"jeyvia":15}},{"path":"src/main/java/exception/NotEnoughArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-11"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if insufficient arguments are provided for certain command calls","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class NotEnoughArgumentsException extends Exception {","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d \"Not enough arguments entered. Please try again.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"jeyvia":15}},{"path":"src/main/java/exception/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package exception;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Exception if index provided in command call is \u003e size of taskList at the time","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class TaskDoesNotExistException extends Exception {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    private String MESSAGE \u003d \"Task does not exist. Please try again.\";","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Returns corresponding error message when called","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"        return MESSAGE;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jeyvia":15}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":" * Child of parent class Task","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":" * Contains description which is the name of deadline, date and time which is the","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":" * date and time due of the deadline respectively","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"    private String time;","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"    private LocalDate date;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"     * Method creates new deadline object","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"     * @param description is the name of the deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"     * @param by is the date + time of the deadline as a string","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"     * Method reads in string by, which contains date and time","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"     * Method splits date and time, and converts date from string to LocalDate","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"     * Date can only be read in \"yyyy-MM-dd\"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"     * Time will be kept as string","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"     * @throws DateParseException if date is given in the wrong format","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public Deadline(String description, String by) throws DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"        String[] DateTime \u003d by.split(\" \", 2);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"            this.date \u003d LocalDate.parse(DateTime[0], formatter);","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"            throw new DateParseException();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"        if (DateTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"            this.time \u003d \" \" + DateTime[1];","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"        } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"            this.time \u003d \"\";","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"     * @return full details of deadline including:","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"     * type as \"[D]\"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"     * status of mark/unmark, [X] if marked, [ ] if unmarked","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"     * description which is name of deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"     * date of deadline in the format \"MMM d yyyy\"","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"     * time of deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"        return (\"[D][\" + super.getStatusIcon() + \"] \" + super.description","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"                    + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + time + \")\");","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"     * @return type of child, which is \"D\"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"    public String getTaskClass() {","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"        return \"D\";","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"     * @return date and time of deadline task as a full string","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"        return (date.toString() + time);","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"jeyvia":69}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"import exception.DateParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":" * Child of parent class Task","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":" * Contains description which is the name of event, date and time which is the","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":" * date and time due of the event respectively","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"    private String time;","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"    private LocalDate date;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"     * Method creates new event object","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"     * @param description is the name of the event","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"     * @param at is the date + time of the event as a string","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"     * Method reads in string at, which contains date and time","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"     * Method splits date and time, and converts date from string to LocalDate","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"     * Date can only be read in \"yyyy-MM-dd\"","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"     * Time will be kept as string","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"     * @throws DateParseException if date is given in the wrong format","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    public Event(String description, String at) throws DateParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"        String[] DateTime \u003d at.split(\" \", 2);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"            this.date \u003d LocalDate.parse(DateTime[0], formatter);","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"            throw new DateParseException();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"        if (DateTime.length \u003d\u003d 2) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"            this.time \u003d \" \" + DateTime[1];","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"        } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"            this.time \u003d \"\";","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"     * @return full details of deadline including:","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"     * type as \"[E]\"","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"     * status of mark/unmark, [X] if marked, [ ] if unmarked","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"     * description which is name of event","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"     * date of event in the format \"MMM d yyyy\"","lastModifiedDate":"2022-09-26"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"     * time of event","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"        return (\"[E][\" + super.getStatusIcon() + \"] \" + super.description","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"                    + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + time + \")\");","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"     * @return type of child, which is \"E\"","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"jeyvia"},"content":"    public String getTaskClass() {","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"jeyvia"},"content":"        return \"E\";","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"jeyvia"},"content":"     * @return date and time of event task as a full string","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":65,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"jeyvia"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"jeyvia"},"content":"        return (date.toString() + time);","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":69,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"jeyvia":69}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Parent class of task, with children Todo, Event and Deadline","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"public class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"    protected String description;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"     * Boolean to show if task is done or not","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    public boolean isDone;","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"     * Method is called when task is to be printed","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"     * @return X if isDone is true, \" \" if isDone is false.","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"     * If true, [X] will be printed when task is printed","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"     * If false, [ ] will be printed when task is printed","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"            return \"X\";","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"        return \" \";","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"jeyvia"},"content":"     * @return the full details of each task as a string in child","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"jeyvia"},"content":"    public String toString() {","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"jeyvia"},"content":"        return toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":36,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"jeyvia"},"content":"     * @return the corresponding letter of the type of task in child","lastModifiedDate":"2022-09-26"},{"lineNumber":38,"author":{"gitId":"jeyvia"},"content":"     * \"D\" if deadline, \"E\" if event, \"T\" if todo","lastModifiedDate":"2022-09-26"},{"lineNumber":39,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"jeyvia"},"content":"    public String getTaskClass() {","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"jeyvia"},"content":"        return getTaskClass();","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":45,"author":{"gitId":"jeyvia"},"content":"     * @return description of task, regardless of child type","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"jeyvia"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"jeyvia"},"content":"        return description;","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"jeyvia"},"content":"     * @return date + time of task, in string format, regardless of child type","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"jeyvia"},"content":"    public String getDateAndTime() {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"jeyvia"},"content":"        return getDateAndTime();","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"jeyvia":57}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"/**","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":" * Child of parent class Task","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":" * Contains only description which is the name of todo","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":" */","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"        super(description);","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"jeyvia"},"content":"     * @return full details of todo including:","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"jeyvia"},"content":"     * type as \"[T]\"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"jeyvia"},"content":"     * status of mark/unmark, [X] if marked, [ ] if unmarked","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"jeyvia"},"content":"     * description which is name of todo","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"jeyvia"},"content":"    public String toString() {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"jeyvia"},"content":"        return (\"[T][\" + super.getStatusIcon() + \"] \" + super.description);","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"jeyvia"},"content":"    /**","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"jeyvia"},"content":"     * @return type of child, which is \"T\"","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"jeyvia"},"content":"     */","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"jeyvia"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"jeyvia"},"content":"    public String getTaskClass() {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"jeyvia"},"content":"        return \"T\";","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"jeyvia"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"jeyvia"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"jeyvia":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeyvia"},"content":"todo borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"jeyvia"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"jeyvia"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"jeyvia"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"jeyvia"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"jeyvia"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"jeyvia"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"jeyvia"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"jeyvia"},"content":"unmark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"jeyvia"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"jeyvia"},"content":"bye","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"jeyvia":11}}]
