[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"Duke is a robot that allows you to track tasks. These tasks can be in either Todos, Deadlines or Events.","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"You can also get your tasks in a .txt file for you to do whatever you want with it!","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"- [Adding a Todo: todo](#adding-a-todo-todo)","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"- [Adding a Deadline: deadline](#adding-a-deadline-deadline)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"- [Adding an Event: event](#adding-an-event-event)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"- [Marking a Task: mark](#marking-a-task-mark)","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"- [Unmarking a Task: unmark](#unmarking-a-task-unmark)","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"- [Deleting a Task: delete](#deleting-a-task-delete)","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"- [View all tasks: list](#view-all-tasks-list)","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"- [Exiting the program: bye](#exiting-the-program-bye)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"### Adding a Todo: `todo`","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"Adds a Todo to the list","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"`todo sometask`","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"Example of Usage:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"`todo Math Tutorial`","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"[T][ ] Math Tutorial","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"You now have 1 tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"Adds a Deadline to the list","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"`deadline sometask /by somedate`","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"Example of Usage:","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"`deadline Group Project /by Friday`","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"[D][ ] Group Project (by: Friday)","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"You now have 2 tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"### Adding an Event: `event`","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"Adds an Event to the list","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"`event sometask /at somedate`","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"Example of Usage:","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"`event Concert /at Sunday 1900`","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"jjtoh"},"content":"Got it. I have added this task:","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"jjtoh"},"content":"[E][ ] Concert (at: Sunday 1900)","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"jjtoh"},"content":"You now have 3 tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"jjtoh"},"content":"### Marking a Task: `mark`","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"jjtoh"},"content":"Marks a task.","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"jjtoh"},"content":"`mark index`","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"jjtoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"jjtoh"},"content":"`mark 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"jjtoh"},"content":"Marked the following task:","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"jjtoh"},"content":"[D][X] Group Project (by: Friday)","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"jjtoh"},"content":"### Unmarking a Task: `unmark`","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"jjtoh"},"content":"Unmarks a task.","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"jjtoh"},"content":"`unmark index`","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"jjtoh"},"content":"`unmark 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"jjtoh"},"content":"Unmarked the following task:","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"jjtoh"},"content":"[D][ ] Group Project (by: Friday)","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"jjtoh"},"content":"### Deleting a Task: `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"jjtoh"},"content":"Deletes a task.","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"jjtoh"},"content":"`Delete index`","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"jjtoh"},"content":"Example of usage:","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"jjtoh"},"content":"`delete 2`","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"jjtoh"},"content":"The following task has been deleted: ","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"jjtoh"},"content":"[D][ ] Group Project (by: Friday)","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"jjtoh"},"content":"You now have 2 tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"jjtoh"},"content":"### View all tasks: `list`","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"jjtoh"},"content":"Displays all the tasks currently in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"jjtoh"},"content":"`list`","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"jjtoh"},"content":"Here is the list of your tasks: ","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"jjtoh"},"content":"1. [T][ ] Math Tutorial","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"jjtoh"},"content":"2. [E][ ] Concert (at: Sunday 1900)","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"jjtoh"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"jjtoh"},"content":"Stops the execution of Duke.","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"jjtoh"},"content":"Use the command:","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"jjtoh"},"content":"`bye`","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"jjtoh"},"content":"Expected outcome:","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":170,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"jjtoh"},"content":"Goodbye, hope to see you again.","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"jjtoh"},"content":"-------------------------------------","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"jjtoh"},"content":"```","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jjtoh":150,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"    private static Storage storage;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"    public static UI ui;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    private static TaskList tasks;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"    public Duke () {","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"        Duke.storage \u003d new Storage();","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"        Duke.ui \u003d new UI();","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"        Duke.tasks \u003d new TaskList(storage.startReading());","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    public void run() {","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"        ui.welcomeUser();","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"        parser.executeCommands(ui, tasks, storage);","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jjtoh":26,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.exception;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"    private String message;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"     * Constructor for DukeException","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"     * @param message The error message to be displayed","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"        super(message);","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"jjtoh":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.command.*;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":" * An object that deals with anything that the user inputs so that logic","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":" * can be performed on them.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"public class Parser {","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    private final String TODO \u003d \"todo\";","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"    private final String LIST \u003d \"list\";","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"    private final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    private final String EVENT \u003d \"event\";","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    private final String BYE \u003d \"bye\";","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    private final String MARK \u003d \"mark\";","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    private final String UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    private final String DELETE \u003d \"delete\";","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    private final String FIND \u003d \"find\";","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    private final int SPLIT_AMOUNT \u003d 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"    private boolean exit \u003d false;","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * This method calls the execute method of the commands that the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * @param ui Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     * @param tasks Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"    public void executeCommands(UI ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        while (!exit) {","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"            try {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"                Command command \u003d handleCommand(ui);","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"                ui.printErrorMessage(e);","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"     * The method that identifies the command that the user is inputting.","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"     * @param ui Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"     * @return Command object based on what the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"     * @throws DukeException If user enters an invalid input.","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"    public Command handleCommand(UI ui) throws DukeException {","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"        String command \u003d getCommand(input);","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"        switch (command) {","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"        case (BYE):","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"            exit \u003d true;","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"        case (LIST):","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"        case (TODO):","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"            Todo todo \u003d handleTodo(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"            return new TodoCommand(todo);","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"        case (DEADLINE):","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"            Deadline deadline \u003d handleDeadline(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"jjtoh"},"content":"            return new DeadlineCommand(deadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"jjtoh"},"content":"        case (EVENT):","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"jjtoh"},"content":"            Event event \u003d handleEvent(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"jjtoh"},"content":"            return new EventCommand(event);","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"jjtoh"},"content":"        case (MARK):","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"jjtoh"},"content":"            int markIndex \u003d readIndex(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"jjtoh"},"content":"            return new MarkCommand(markIndex);","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"jjtoh"},"content":"        case (UNMARK):","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"jjtoh"},"content":"            int unmarkIndex \u003d readIndex(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"jjtoh"},"content":"            return new UnmarkCommand(unmarkIndex);","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"jjtoh"},"content":"        case (DELETE):","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"jjtoh"},"content":"            int deleteIndex \u003d readIndex(getArgument(input));","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"jjtoh"},"content":"            return new DeleteCommand(deleteIndex);","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"jjtoh"},"content":"        case (FIND):","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"jjtoh"},"content":"            String target \u003d getArgument(input);","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"jjtoh"},"content":"            return new FindCommand(target);","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"jjtoh"},"content":"        default:","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"jjtoh"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"jjtoh"},"content":"     * Gets the specific command the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"jjtoh"},"content":"     * @param input What the user inputs in the CLI.","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"jjtoh"},"content":"     * @return The first word, which is the command that the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"jjtoh"},"content":"    private String getCommand(String input) {","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"jjtoh"},"content":"        return input.split(\" \", 2)[0].trim().toLowerCase();","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"jjtoh"},"content":"     * Gets the argument that the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"jjtoh"},"content":"     * @param input What the user inputs in the CLI.","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"jjtoh"},"content":"     * @return The string after the first word, which is the argument.","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"jjtoh"},"content":"     * @throws DukeException If the user did not input the command.","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"jjtoh"},"content":"    private String getArgument(String input) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"jjtoh"},"content":"        String[] splitInput \u003d input.split(\" \", SPLIT_AMOUNT);","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"jjtoh"},"content":"        if (splitInput.length !\u003d SPLIT_AMOUNT) {","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"jjtoh"},"content":"            switch(splitInput[0]) {","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"jjtoh"},"content":"            case (TODO):","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Missing input for command, input the command in this format:\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"jjtoh"},"content":"                        + TODO + \" taskname\");","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"jjtoh"},"content":"            case (DEADLINE):","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Missing input for command, input the command in this format:\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"jjtoh"},"content":"                        + DEADLINE + \" taskname /by date\");","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"jjtoh"},"content":"            case (EVENT):","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Missing input for command, input the command in this format:\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"jjtoh"},"content":"                        + EVENT + \" taskname /at date\");","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"jjtoh"},"content":"            case (FIND):","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Missing input for command, input the command in this format:\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"jjtoh"},"content":"                        + FIND + \" something\");","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"jjtoh"},"content":"            default:","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Missing input for command, input the command in this format:\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"jjtoh"},"content":"                        + splitInput[0] + \" id\");","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"jjtoh"},"content":"        return splitInput[1];","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"jjtoh"},"content":"     * Creates a Todo object from the user\u0027s argument.","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument that the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"jjtoh"},"content":"     * @return A new Todo object based on user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"jjtoh"},"content":"    public Todo handleTodo(String input) {","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"jjtoh"},"content":"        return new Todo(input);","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"jjtoh"},"content":"     * Creates a Deadline object from the user\u0027s argument by identifying the description and timing.","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"jjtoh"},"content":"     * @return A new Deadline object based on the user\u0027s input.","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"jjtoh"},"content":"     * @throws DukeException If the user does not input the proper argument.","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"jjtoh"},"content":"    public Deadline handleDeadline(String input) throws DukeException {","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"jjtoh"},"content":"        String[] splitCommand \u003d splitDeadlineTime(input);","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"jjtoh"},"content":"        if (splitCommand.length !\u003d SPLIT_AMOUNT) {","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"jjtoh"},"content":"            throw new DukeException(\"Deadline is missing a timing.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":148,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"jjtoh"},"content":"        String description \u003d splitCommand[0];","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"jjtoh"},"content":"        String by \u003d splitCommand[1];","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"jjtoh"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"jjtoh"},"content":"     * Creates an Event object from the user\u0027s argument by identifying the description and timing.","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"jjtoh"},"content":"     * @return A new Event object based on the user\u0027s input.","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"jjtoh"},"content":"     * @throws DukeException If the user does not input the proper argument.","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"jjtoh"},"content":"    public Event handleEvent(String input) throws DukeException {","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"jjtoh"},"content":"        String[] splitCommand \u003d splitEventTime(input);","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"jjtoh"},"content":"        if (splitCommand.length !\u003d SPLIT_AMOUNT) {","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"jjtoh"},"content":"            throw new DukeException(\"Event is missing a timing.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":164,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":165,"author":{"gitId":"jjtoh"},"content":"        String description \u003d splitCommand[0];","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"jjtoh"},"content":"        String at \u003d splitCommand[1];","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"jjtoh"},"content":"        return new Event(description, at);","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"jjtoh"},"content":"     * Converts the user argument into an integer.","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"jjtoh"},"content":"     * @return An integer based on user\u0027s input.","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"jjtoh"},"content":"     * @throws DukeException If the user\u0027s argument cannot be converted into an integer.","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"jjtoh"},"content":"    public int readIndex(String input) throws DukeException {","lastModifiedDate":"2022-09-28"},{"lineNumber":178,"author":{"gitId":"jjtoh"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":179,"author":{"gitId":"jjtoh"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2022-09-28"},{"lineNumber":180,"author":{"gitId":"jjtoh"},"content":"            if (index \u003c 1 || index \u003e TaskList.getTaskCount()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"jjtoh"},"content":"                throw new DukeException(\"Index out of bound.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":183,"author":{"gitId":"jjtoh"},"content":"            return index;","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"jjtoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"jjtoh"},"content":"            throw new DukeException(\"A valid numeric number must be entered.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"jjtoh"},"content":"     * Splits the user\u0027s deadline argument into its description and time.","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"jjtoh"},"content":"     * @return An array of strings that contain the deadline\u0027s description and time respectively.","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"jjtoh"},"content":"    private String[] splitDeadlineTime(String input) {","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"jjtoh"},"content":"        return input.split(\" /by \", SPLIT_AMOUNT);","lastModifiedDate":"2022-09-28"},{"lineNumber":197,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"jjtoh"},"content":"     * Splits the user\u0027s event argument into its description and time.","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"jjtoh"},"content":"     * @param input The argument the user inputs.","lastModifiedDate":"2022-09-29"},{"lineNumber":203,"author":{"gitId":"jjtoh"},"content":"     * @return An array of strings that contain the event\u0027s description and time respectively.","lastModifiedDate":"2022-09-29"},{"lineNumber":204,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"jjtoh"},"content":"    private String[] splitEventTime(String input) {","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"jjtoh"},"content":"        return input.split(\" /at \", SPLIT_AMOUNT);","lastModifiedDate":"2022-09-28"},{"lineNumber":207,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":209}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"import java.io.File;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":" * A class that handles the writing and reading of files in the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"public class Storage {","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    private static Path taskDataPath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"tasks.txt\");","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    private static Path dataDirPath \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Adds a task to the file by appending to it.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     * @throws IOException If the file is missing.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"    public void writeToFile(Task task) throws IOException {","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"        FileWriter fw \u003d new FileWriter(taskDataPath.toString(), true);","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"        String textToAdd \u003d taskToText(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"        fw.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"     * Method that populates an ArrayList based on the tasks in the file.","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"     * This method will create the file and its directory if they are missing.","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"     * @return An ArrayList of tasks in the text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"    public ArrayList\u003cTask\u003e startReading() {","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"            makeMissingDirectory();","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"            readFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"            System.out.println(\"File cannot be found\");","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"            System.out.println(\"Some IO error has occurred\");","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"        return tasks;","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"     * Reads the file from start to finish and identifies the tasks in it.","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"    private void readFile() throws FileNotFoundException {","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"        String filePath \u003d taskDataPath.toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"            String[] input \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"            switch (input[0]) {","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"jjtoh"},"content":"            case (\"T\"):","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"jjtoh"},"content":"                insertTodo(input, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"jjtoh"},"content":"                break;","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"jjtoh"},"content":"            case (\"D\"):","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jjtoh"},"content":"                insertDeadline(input, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"jjtoh"},"content":"                break;","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"jjtoh"},"content":"            case (\"E\"):","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"jjtoh"},"content":"                insertEvent(input, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"jjtoh"},"content":"                break;","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"jjtoh"},"content":"     * Makes the directory if it is missing.","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"jjtoh"},"content":"     * @throws IOException if the path is not found.","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"jjtoh"},"content":"    private void makeMissingDirectory() throws IOException {","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"jjtoh"},"content":"        File dir \u003d new File(dataDirPath.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"jjtoh"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"jjtoh"},"content":"            dir.mkdir();","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"jjtoh"},"content":"            return;","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"jjtoh"},"content":"        FileWriter fw \u003d new FileWriter(taskDataPath.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"jjtoh"},"content":"     * Inserts a Todo object into the list of tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"jjtoh"},"content":"     * @param input The substrings a single line in the text file separated by |.","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"jjtoh"},"content":"     * @param tasks The list that contains all tasks in the text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"jjtoh"},"content":"    private void insertTodo(String[] input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"jjtoh"},"content":"        Todo todo \u003d new Todo(input[2]);","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"jjtoh"},"content":"        if (input[1].equals(\"1\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"jjtoh"},"content":"            todo.setDone(true);","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"jjtoh"},"content":"            todo.setDone(false);","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"jjtoh"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"jjtoh"},"content":"     * Inserts a Deadline object into the list of tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"jjtoh"},"content":"     * @param input The substrings a single line in the text file separated by |.","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"jjtoh"},"content":"     * @param tasks The list that contains all tasks in the text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"jjtoh"},"content":"    private void insertDeadline(String[] input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"jjtoh"},"content":"        Deadline deadline \u003d new Deadline(input[2], input[3]);","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"jjtoh"},"content":"        if (input[1].equals(\"1\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"jjtoh"},"content":"            deadline.setDone(true);","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"jjtoh"},"content":"            deadline.setDone(false);","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"jjtoh"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"jjtoh"},"content":"     * Inserts an Event object into the list of tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"jjtoh"},"content":"     * @param input The substrings a single line in the text file separated by |.","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"jjtoh"},"content":"     * @param tasks The list that contains all tasks in the text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"jjtoh"},"content":"    private void insertEvent(String[] input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"jjtoh"},"content":"        Event event \u003d new Event(input[2], input[3]);","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"jjtoh"},"content":"        if (input[1].equals(\"1\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"jjtoh"},"content":"            event.setDone(true);","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"jjtoh"},"content":"            event.setDone(false);","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"jjtoh"},"content":"        tasks.add(event);","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"jjtoh"},"content":"     * Converts a task into its text representation.","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"jjtoh"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"jjtoh"},"content":"     * @return The text representation of the task.","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"jjtoh"},"content":"    private String taskToText(Task task) {","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"jjtoh"},"content":"        if (task.getClass() \u003d\u003d Todo.class) {","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"jjtoh"},"content":"            return \"T | \" + task.getStatusInNumber() + \" | \" + task.getDescription() + \"\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"jjtoh"},"content":"        } else if (task.getClass() \u003d\u003d Deadline.class) {","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"jjtoh"},"content":"            return \"D | \" + task.getStatusInNumber() + \" | \"","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"jjtoh"},"content":"                    + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"jjtoh"},"content":"            return \"E | \" + task.getStatusInNumber() + \" | \"","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"jjtoh"},"content":"                    + task.getDescription() + \" | \" + ((Event) task).getAt() + \"\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":160,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"jjtoh"},"content":"     * Deletes everything in the text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"jjtoh"},"content":"     * @throws IOException If file is missing.","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"jjtoh"},"content":"    public void deleteContent() throws IOException {","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"jjtoh"},"content":"        new FileWriter(taskDataPath.toString()).close();","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":170,"author":{"gitId":"jjtoh"},"content":"     * Stores a task into the local text file.","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"jjtoh"},"content":"     * @param task    The task to be stored.","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"jjtoh"},"content":"    public void storeTask(Task task, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"jjtoh"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"jjtoh"},"content":"            storage.writeToFile(task);","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"jjtoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"jjtoh"},"content":"            System.out.println(\"File not found/missing directory.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"jjtoh"},"content":"     * Empties the text file and repopulates it with the updated tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"jjtoh"},"content":"    public void rewriteFile(Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"jjtoh"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"jjtoh"},"content":"            storage.deleteContent();","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"jjtoh"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"jjtoh"},"content":"                storage.writeToFile(task);","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"jjtoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"jjtoh"},"content":"            System.out.println(\"File is not found/missing directory.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"jjtoh":198}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":" * A class that represents a deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"    protected String by;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"     * @param description Description of this deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * @param by          Due date of this deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     * Gets the due date of this deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"     * @return Due date of this deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"    public String getBy() {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"        return by;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * Fixes how this deadline would look like if it were to be converted into a string","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     * based on its description and due date.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     * @return The string representation of this deadline.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + super.getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"jjtoh":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":" * A class representing an event.","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"    protected String at;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"     * Constructor for Event.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"     * @param description Description of this event.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * @param at          When this event is at.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     * Gets the date when the event is occurring.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"     * @return When the event is at.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"    public String getAt() {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"        return at;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * Fixes how this deadline would look like if it were to be converted into a string","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     * based on its description and occurring date","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     * @return The string representation of this event.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \" + super.getDescription() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"jjtoh":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":" * A class that represents the different forms of tasks in Duke.","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"public class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"    protected String description;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"     * Constructor for Task.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * @param description The task description.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     * Sets the done state of this task.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"     * @param isDone Whether this task is to be marked as done.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-20"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-20"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * Gets the done state of this task.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     * @return Whether this task is done.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"    public boolean getDone() {","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        return isDone;","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"     * Gets the status icon.","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"     * @return [X] if isDone, [] otherwise.","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2022-08-20"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"     * Gets the status in terms of 1 and 0.","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"     * @return 1 if isDone, 0 otherwise.","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"    public int getStatusInNumber() {","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"     * Gets task description","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"     * @return Description of this task.","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-20"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"        return description;","lastModifiedDate":"2022-08-20"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"jjtoh":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":" * A class that handles all the user\u0027s inputted tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"public class TaskList {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"        TaskList.tasks \u003d tasks;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"        TaskList.taskCount \u003d tasks.size();","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * @return The number of tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"        return taskCount;","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"     * @param task The task to be added.","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"        tasks.add(task);","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"        taskCount++;","lastModifiedDate":"2022-08-31"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"     * Marks a task on the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"     * @param target The index of the task to be marked.","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"    public void markTarget(int target) {","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"        tasks.get(target - 1).setDone(true);","lastModifiedDate":"2022-09-14"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"     * Unmarks a task on the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"     * @param target The index of the task to be unmarked.","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"    public void unmarkTarget(int target) {","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"        tasks.get(target - 1).setDone(false);","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"jjtoh"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2022-09-14"},{"lineNumber":67,"author":{"gitId":"jjtoh"},"content":"        taskCount--;","lastModifiedDate":"2022-09-14"},{"lineNumber":68,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":69,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"jjtoh"},"content":"     * Gets a copy of all the current tasks in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"jjtoh"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"jjtoh"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"jjtoh"},"content":"        return tasks;","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"jjtoh"},"content":"     * Gets the task of a specific index in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"jjtoh"},"content":"     * @param index The index of the task to get.","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"jjtoh"},"content":"     * @return The task of that index in the list.","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"jjtoh"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"jjtoh"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"jjtoh"},"content":"     * Searches through all the tasks in the list to find for tasks that have","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"jjtoh"},"content":"     * descriptions containing a certain target word.","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"jjtoh"},"content":"     * @param target The word to be searched for.","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"jjtoh"},"content":"     * @return The list of all tasks that have descriptions containing that word.","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"jjtoh"},"content":"    public ArrayList\u003cTask\u003e findInList(String target) {","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"jjtoh"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"jjtoh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"jjtoh"},"content":"            if (task.getDescription().contains(target)) {","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"jjtoh"},"content":"                found.add(task);","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"jjtoh"},"content":"        return found;","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"jjtoh":105}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":" * A clas representing a todo.","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-30"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"     * Constructor for Todo","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"     * @param description Description of this todo.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * Fixes how this Todo would look like if it were to be converted into a string","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     * based on its description.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"     * @return The string representation of this Todo.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + super.getDescription();","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-30"}],"authorContributionMap":{"jjtoh":26}},{"path":"src/main/java/duke/task/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * A class that represents a bye command","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * Executes this bye command by displaying the exit message","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     * when the user quits the program.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"        ui.byeMessage();","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":24}},{"path":"src/main/java/duke/task/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * An abstract class that can represent all other commands within Duke.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * An abstract method represents the execution of a command.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":20}},{"path":"src/main/java/duke/task/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" * A class that represents a deadline command.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     * @param deadline A deadline object.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     * Executes this deadline command by adding a deadline in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * and storing it in the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling user that the task has been added.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"        ui.addMessage(deadline, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"        storage.storeTask(deadline, storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":39}},{"path":"src/main/java/duke/task/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * A class that represents a delete command.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    private int index;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Executes this delete command by removing the task from the list","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     * and the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling user that the task has been deleted.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"        ui.deleteMessage(tasks, index);","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"        storage.rewriteFile(storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":38}},{"path":"src/main/java/duke/task/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" * A class that represents a event command.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    private Event event;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param event An event object","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Executes this event command by adding an event into the list","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     * and storing it in the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling user that the task has been added.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"        tasks.addTask(event);","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        ui.addMessage(event, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"        storage.storeTask(event, storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":38}},{"path":"src/main/java/duke/task/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":" * A class that represents a find command.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    private final String target;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"     * @param target String that user wants to find in list.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    public FindCommand(String target) {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"        this.target \u003d target;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     * Executes this find command by searching the list of tasks for any","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * occurence of the target string.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     * Displays the list of matching items or shows a message that no matching","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * items are found.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"        ArrayList\u003cTask\u003e found \u003d tasks.findInList(target);","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"        ui.printFound(found);","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"jjtoh":41}},{"path":"src/main/java/duke/task/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * A class that represents an invalid command.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"     * Executes this invalid command by displaying a message telling the user","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"     * that their command is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"        ui.invalidCommand();","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":23}},{"path":"src/main/java/duke/task/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":" * A class that represents a list command.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * Executes this list command by displaying the list of all tasks current","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * in the list, or tells user that the list is empty.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"        ArrayList\u003cTask\u003e list \u003d tasks.getTasks();","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"        ui.printList(list);","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":28}},{"path":"src/main/java/duke/task/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * A class that represents the mark command.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"    private int index;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     * Construstor for MarkCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param index Index of task to be marked.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"     * Executes this mark command by marking the tasks of the index.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling the user that the task has been marked.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"        tasks.markTarget(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"        ui.markMessage(tasks, index);","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"        storage.rewriteFile(storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":36}},{"path":"src/main/java/duke/task/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" * A class that represents the todo command.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    private Todo todo;","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     * @param todo A Todo object.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Executes this todo command by adding a task todo into the list","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     * and storing it in the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling user that the task has been added.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"        ui.addMessage(todo, tasks);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"        storage.storeTask(todo, storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":38}},{"path":"src/main/java/duke/task/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.task.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.ui.UI;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":" * A class representing an unmark command.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"    private int index;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"     * @param index Index of task to be unmarked.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"     * Executes this unmark command by unmarking the tasks of the index.","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"     * Displays a message telling the user that the task has been unmarked.","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"     * @param ui      Object that handles all user interaction.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"     * @param tasks   Object that handles and tracks all tasks that the user has added.","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"     * @param storage Object that handles saving the user\u0027s task into the local storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"        tasks.unmarkTarget(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"        ui.markMessage(tasks, index);","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"        storage.rewriteFile(storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jjtoh":36}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"package duke.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"public class UI {","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"    public final String LINE_DIVIDER \u003d \"-------------------------------------\\n\";","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"    public final String WELCOME_TEXT \u003d \"Hello I am Duke. Here are a list of command:\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"            + \"todo {task} : Creates a todo\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"            + \"deadline {deadline /by time} : Creates a deadline by time\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"            + \"event {event /at time} : Creates an event at time\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"            + \"mark/unmark {index} : Marks a task\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"            + \"delete {index} : Deletes a task\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"            + \"list : List all current tasks\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"            + \"bye : Exits the program\";","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"    public final String BYE_MESSAGE \u003d \"Goodbye, hope to see you again.\";","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"    public void welcomeUser() {","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"        formatMessage(WELCOME_TEXT);","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"    private void formatMessage(String message) {","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"        System.out.print(LINE_DIVIDER + message + \"\\n\" + LINE_DIVIDER);","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"    public void byeMessage() {","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"jjtoh"},"content":"        formatMessage(BYE_MESSAGE);","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"jjtoh"},"content":"    public void addMessage(Task task, TaskList tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"jjtoh"},"content":"        formatMessage(\"Got it. I have added this task:\\n\" + task","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"jjtoh"},"content":"                + \"\\nYou now have \" + TaskList.getTaskCount() + \" tasks.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"jjtoh"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"jjtoh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"jjtoh"},"content":"            formatMessage(\"You have no tasks currently.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"jjtoh"},"content":"            int size \u003d tasks.size();","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"jjtoh"},"content":"            String message \u003d \"Here is the list of your tasks: \\n\";","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"jjtoh"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"jjtoh"},"content":"                if (i \u003d\u003d size - 1) {","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"jjtoh"},"content":"                    message +\u003d (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"jjtoh"},"content":"                } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"jjtoh"},"content":"                    message +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"jjtoh"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"jjtoh"},"content":"            formatMessage(message);","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"jjtoh"},"content":"    public void markMessage(TaskList tasks, int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"jjtoh"},"content":"        Task task \u003d tasks.getTask(index - 1);","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"jjtoh"},"content":"        if (!task.getDone()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"jjtoh"},"content":"            formatMessage(\"Unmarked the following task:\\n \"","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"jjtoh"},"content":"                    + task);","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"jjtoh"},"content":"            formatMessage(\"Marked the following task:\\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"jjtoh"},"content":"                    + task);","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"jjtoh"},"content":"    public void invalidCommand() {","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"jjtoh"},"content":"        formatMessage(\"You have entered an invalid command.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"jjtoh"},"content":"    public void deleteMessage(TaskList tasks, int index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"jjtoh"},"content":"        Task deletedTask \u003d tasks.getTask(index - 1);","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"jjtoh"},"content":"        formatMessage(\"The following task has been deleted: \\n\"","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"jjtoh"},"content":"                + deletedTask + \"\\nYou now have \" + (TaskList.getTaskCount() - 1)","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"jjtoh"},"content":"                + \" tasks.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"jjtoh"},"content":"    public void printFound(ArrayList\u003cTask\u003e found) {","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"jjtoh"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"jjtoh"},"content":"        int size \u003d found.size();","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"jjtoh"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"jjtoh"},"content":"            message \u003d \"Found no matching tasks in your list.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"jjtoh"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"jjtoh"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"jjtoh"},"content":"                if (i \u003d\u003d size - 1) {","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"jjtoh"},"content":"                    message +\u003d (i + 1) + \". \" + found.get(i);","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"jjtoh"},"content":"                } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"jjtoh"},"content":"                    message +\u003d (i + 1) + \". \" + found.get(i) + \"\\n\";","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"jjtoh"},"content":"                }","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"jjtoh"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"jjtoh"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"jjtoh"},"content":"        formatMessage(message);","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"jjtoh"},"content":"    public void printErrorMessage(DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"jjtoh"},"content":"        formatMessage(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"jjtoh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"jjtoh"},"content":"    public String getInput() {","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"jjtoh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-31"},{"lineNumber":103,"author":{"gitId":"jjtoh"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2022-08-31"},{"lineNumber":104,"author":{"gitId":"jjtoh"},"content":"        return input.trim();","lastModifiedDate":"2022-08-31"},{"lineNumber":105,"author":{"gitId":"jjtoh"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":106,"author":{"gitId":"jjtoh"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"jjtoh":106}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jjtoh"},"content":"todo read book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"jjtoh"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"jjtoh"},"content":"unmark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"jjtoh"},"content":"deadline do dishes /by midnight","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"jjtoh"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"jjtoh"},"content":"unmark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"jjtoh"},"content":"event attend wedding /at Sunday 1900","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"jjtoh"},"content":"mark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"jjtoh"},"content":"unmark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"jjtoh"},"content":"this is an invalid command","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"jjtoh"},"content":"todo read book again","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"jjtoh"},"content":"deadline do dishes again /by morning","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"jjtoh"},"content":"event attend funeral /at 31st February","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"jjtoh"},"content":"mark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"jjtoh"},"content":"mark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"jjtoh"},"content":"mark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"jjtoh"},"content":"unmark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"jjtoh"},"content":"unmark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"jjtoh"},"content":"unmark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"jjtoh"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"jjtoh"},"content":"bye","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"jjtoh":32}}]
