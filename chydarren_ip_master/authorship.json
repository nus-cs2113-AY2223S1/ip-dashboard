[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"# Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"***Duke (Doraemon)*** is a personal robot cat assistant that helps a person such as Nobita to keep track of his todos, deadlines and events. It provides an interactive way for the tasks to be inputted via a command-line interface. The development is based on the Duke project template which can be found [here](https://github.com/nus-cs2113-AY2223S1/ip). ","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"## Preview","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    *******     *******   *******       **","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    /**////**   **/////** /**////**     ****","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    /**    /** **     //**/**   /**    **//**","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    /**    /**/**      /**/*******    **  //**","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    /**    /**/**      /**/**///**   **********","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    /**    ** //**     ** /**  //** /**//////**","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    /*******   //*******  /**   //**/**     /**","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    ///////     ///////   //     // //      //","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    Kon\u0027nichiwa! Doraemon desu. What can I do for you?","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"## User Guide","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"[Read the User Guide](https://chydarren.github.io/ip/)","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"## Acknowledgements ","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"- **Darren Chua** | [@chydarren](https://github.com/chydarren)","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"## Credits ","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"This program was developed as an assignment for the National University of Singapore, CS2113 Software Engineering and Object-Oriented Programming module. I have uploaded the source files publicly as part of the module\u0027s requirement. Please refrain from [plagiarising](https://www.comp.nus.edu.sg/cug/plagiarism/) or passing it off as your own work. ","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"Chua Han Yong Darren Â© 2022. Code released under the GNU Affero General Public License v3.0.","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"chydarren":31}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"# User Guide for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"Duke (Doraemon) is a personal robot cat assistant that helps a person such as Nobita","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"to keep track of his todos, deadlines and events. It provides an interactive way","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"for the tasks to be inputted via a command-line interface.","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"## Quick Start","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"1. Ensure you have Java 11 and above installed in your computer.","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"2. Download the latest `ip.jar` from [here](https://github.com/chydarren/ip/releases).","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"3. Copy the file to a folder that will be the home folder for Duke (Doraemon).","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"4. Launch a terminal and navigate to where the `ip.jar` file is located, e.g. `cd Desktop/Duke/ip.jar`.","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"5. Run `java -jar ip.jar`.","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"6. Have fun interacting with Doraemon! ","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"### Organise and keep track different types of tasks","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"Duke (Doraemon) enables you to keep track of different types of tasks including Todo, Deadlines and Events.","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"### Find specific tasks","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"With lots of tasks at hand, Duke (Doraemon) allows you to filter and find your tasks quickly.","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"### Mark tasks as done","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"You can mark tasks once you have finished them, so that you will have one less thing to do.","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"### Persistent data","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"The data in the Duke (Doraemon) are exportable and automatically saved into a text file.","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"Your data will be safely kept and not get lost.","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"### Own a Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"Yes, with Duke (Doraemon), you can be free from your worries because he will always be there to assist you.","lastModifiedDate":"2022-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"## Commands","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"### `todo` - Create a new Todo task","lastModifiedDate":"2022-09-24"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"Adds a task of type Todo.","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"Format: `todo \u003ctitle\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"- `todo buy a Dorayaki for Doraemon`","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"The Todo task that has been added and updated number of tasks will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"todo buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"    Nobita, wake up. Here\u0027s your new task:","lastModifiedDate":"2022-09-24"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"    [T][ ] buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"    Now you have 1 tasks in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"### `deadline` - Create a new Deadline task","lastModifiedDate":"2022-09-24"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"Adds a task of type Deadline which is due by a certain date.","lastModifiedDate":"2022-09-24"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"Formats (either one):","lastModifiedDate":"2022-09-24"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"- `deadline \u003ctitle\u003e /by \u003cdd/mm/yyyy\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"- `deadline \u003ctitle\u003e /by \u003chhmm\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"- `deadline \u003ctitle\u003e /by \u003cdd/mm/yyyy hhmm\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"- `deadline Nobita marry Shizuka /by 3/09/2022 1500`","lastModifiedDate":"2022-09-24"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"- `deadline Nobita buys Dorayakis /by 25/12/2022`","lastModifiedDate":"2022-09-24"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"The Deadline task that has been added and updated number of tasks will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":84,"author":{"gitId":"chydarren"},"content":"deadline Nobita marry Shizuka /by 3/09/2022 1500","lastModifiedDate":"2022-09-24"},{"lineNumber":85,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":86,"author":{"gitId":"chydarren"},"content":"    Nobita, wake up. Here\u0027s your new task:","lastModifiedDate":"2022-09-24"},{"lineNumber":87,"author":{"gitId":"chydarren"},"content":"    [D][ ] Nobita marry Shizuka (by: 3/09/2022 1500)","lastModifiedDate":"2022-09-24"},{"lineNumber":88,"author":{"gitId":"chydarren"},"content":"    Now you have 2 tasks in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":89,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":91,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"chydarren"},"content":"### `event` - Create a new Event task","lastModifiedDate":"2022-09-24"},{"lineNumber":93,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":94,"author":{"gitId":"chydarren"},"content":"Adds a task of type Event which takes place a certain time.","lastModifiedDate":"2022-09-24"},{"lineNumber":95,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"chydarren"},"content":"Format: `event \u003ctitle\u003e /at \u003ceventTime\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":97,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":98,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":99,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"chydarren"},"content":"- `event Singing concert by Gian /at 20/12/2030 1200 - 20/12/2030 1400`","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"chydarren"},"content":"- `event Baseball party at courtyard /at 4 February 2022`","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":104,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":105,"author":{"gitId":"chydarren"},"content":"The Event task that has been added and updated number of tasks will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":106,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":107,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":108,"author":{"gitId":"chydarren"},"content":"event Singing concert by Gian /at 20/12/2030 1200 - 20/12/2030 1400","lastModifiedDate":"2022-09-24"},{"lineNumber":109,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":110,"author":{"gitId":"chydarren"},"content":"    Nobita, wake up. Here\u0027s your new task:","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"chydarren"},"content":"    [E][ ] Singing concert by Gian (at: 20/12/2030 1200 - 20/12/2030 1400)","lastModifiedDate":"2022-09-24"},{"lineNumber":112,"author":{"gitId":"chydarren"},"content":"    Now you have 3 tasks in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":113,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":114,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":115,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":116,"author":{"gitId":"chydarren"},"content":"### `list` - View the task list","lastModifiedDate":"2022-09-24"},{"lineNumber":117,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":118,"author":{"gitId":"chydarren"},"content":"Shows all the tasks that are in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":119,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":120,"author":{"gitId":"chydarren"},"content":"Format: `list`","lastModifiedDate":"2022-09-24"},{"lineNumber":121,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":122,"author":{"gitId":"chydarren"},"content":"The list of all tasks will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":123,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":124,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":125,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":127,"author":{"gitId":"chydarren"},"content":"list","lastModifiedDate":"2022-09-24"},{"lineNumber":128,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"chydarren"},"content":"    Here are the tasks stored in Doraemon\u0027s 4D pocket:","lastModifiedDate":"2022-09-24"},{"lineNumber":130,"author":{"gitId":"chydarren"},"content":"    [T][ ] buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"    [D][ ] Nobita marry Shizuka (by: 3/09/2022 1500)","lastModifiedDate":"2022-09-24"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"    [E][ ] Singing concert by Gian (at: 20/12/2030 1200 - 20/12/2030 1400)","lastModifiedDate":"2022-09-24"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":136,"author":{"gitId":"chydarren"},"content":"### `find` - Find specific task(s) from the task list","lastModifiedDate":"2022-09-24"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":138,"author":{"gitId":"chydarren"},"content":"Shows all the tasks that match your search expression in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":139,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":140,"author":{"gitId":"chydarren"},"content":"Format: `find \u003ckeywords\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":141,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":142,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":143,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":144,"author":{"gitId":"chydarren"},"content":"`find Shizuka`","lastModifiedDate":"2022-09-24"},{"lineNumber":145,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":146,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":147,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":148,"author":{"gitId":"chydarren"},"content":"The list of all tasks relevant to the search expression will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":149,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":150,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":151,"author":{"gitId":"chydarren"},"content":"find Shizuka","lastModifiedDate":"2022-09-24"},{"lineNumber":152,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":153,"author":{"gitId":"chydarren"},"content":"    Here are the tasks that match your search expression in Doraemon\u0027s 4D pocket:","lastModifiedDate":"2022-09-24"},{"lineNumber":154,"author":{"gitId":"chydarren"},"content":"    [D][ ] Nobita marry Shizuka (by: 3/09/2022 1500)","lastModifiedDate":"2022-09-24"},{"lineNumber":155,"author":{"gitId":"chydarren"},"content":"    [T][ ] Shizuka to wear a pink blouse","lastModifiedDate":"2022-09-24"},{"lineNumber":156,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":157,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":158,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":159,"author":{"gitId":"chydarren"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2022-09-24"},{"lineNumber":160,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":161,"author":{"gitId":"chydarren"},"content":"Marks a specific task from the task list as done.","lastModifiedDate":"2022-09-24"},{"lineNumber":162,"author":{"gitId":"chydarren"},"content":"Take note that the task index must be a valid integer shown on the task list.","lastModifiedDate":"2022-09-24"},{"lineNumber":163,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":164,"author":{"gitId":"chydarren"},"content":"Format: `mark \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":165,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":167,"author":{"gitId":"chydarren"},"content":"- `mark 1`","lastModifiedDate":"2022-09-24"},{"lineNumber":168,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":169,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":170,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":171,"author":{"gitId":"chydarren"},"content":"The task that has been marked as done will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":172,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":173,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":174,"author":{"gitId":"chydarren"},"content":"mark 1","lastModifiedDate":"2022-09-24"},{"lineNumber":175,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":176,"author":{"gitId":"chydarren"},"content":"    Subarashi! Good job in completing your task, Nobita:","lastModifiedDate":"2022-09-24"},{"lineNumber":177,"author":{"gitId":"chydarren"},"content":"    [T][X] buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":178,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":179,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":180,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":181,"author":{"gitId":"chydarren"},"content":"### `unmark` - Mark a task as not done","lastModifiedDate":"2022-09-24"},{"lineNumber":182,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":183,"author":{"gitId":"chydarren"},"content":"Marks a specific task from the task list as not done.","lastModifiedDate":"2022-09-24"},{"lineNumber":184,"author":{"gitId":"chydarren"},"content":"Take note that the task index must be a valid integer shown on the task list.","lastModifiedDate":"2022-09-24"},{"lineNumber":185,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":186,"author":{"gitId":"chydarren"},"content":"Format: `unmark \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":187,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":188,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":189,"author":{"gitId":"chydarren"},"content":"- `unmark 1`","lastModifiedDate":"2022-09-24"},{"lineNumber":190,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":191,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":192,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":193,"author":{"gitId":"chydarren"},"content":"The task that has been unmarked as done will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":194,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":195,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":196,"author":{"gitId":"chydarren"},"content":"unmark 1","lastModifiedDate":"2022-09-24"},{"lineNumber":197,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":198,"author":{"gitId":"chydarren"},"content":"    Gambate Nobita, complete it soon! Don\u0027t procrastinate:","lastModifiedDate":"2022-09-24"},{"lineNumber":199,"author":{"gitId":"chydarren"},"content":"    [T][ ] buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":200,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":201,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":202,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":203,"author":{"gitId":"chydarren"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-09-24"},{"lineNumber":204,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":205,"author":{"gitId":"chydarren"},"content":"Deletes a specific task from the task list.","lastModifiedDate":"2022-09-24"},{"lineNumber":206,"author":{"gitId":"chydarren"},"content":"Take note that the task index must be a valid integer shown on the task list.","lastModifiedDate":"2022-09-24"},{"lineNumber":207,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":208,"author":{"gitId":"chydarren"},"content":"Format: `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2022-09-24"},{"lineNumber":209,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":210,"author":{"gitId":"chydarren"},"content":"Examples:","lastModifiedDate":"2022-09-24"},{"lineNumber":211,"author":{"gitId":"chydarren"},"content":"- `delete 1`","lastModifiedDate":"2022-09-24"},{"lineNumber":212,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":213,"author":{"gitId":"chydarren"},"content":"Expected outcome:","lastModifiedDate":"2022-09-24"},{"lineNumber":214,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":215,"author":{"gitId":"chydarren"},"content":"The task that has been deleted and updated number of tasks will be shown.","lastModifiedDate":"2022-09-24"},{"lineNumber":216,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":217,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":218,"author":{"gitId":"chydarren"},"content":"delete 1","lastModifiedDate":"2022-09-24"},{"lineNumber":219,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":220,"author":{"gitId":"chydarren"},"content":"    Nobita, sugoi! One task has been deleted from Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":221,"author":{"gitId":"chydarren"},"content":"    [T][ ] buy Dorayaki for Doraemon","lastModifiedDate":"2022-09-24"},{"lineNumber":222,"author":{"gitId":"chydarren"},"content":"    Now you have 3 tasks in Doraemon\u0027s 4D pocket.","lastModifiedDate":"2022-09-24"},{"lineNumber":223,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":224,"author":{"gitId":"chydarren"},"content":"```","lastModifiedDate":"2022-09-24"},{"lineNumber":225,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":226,"author":{"gitId":"chydarren"},"content":"### `bye` - Exit from Doraemon ","lastModifiedDate":"2022-09-24"},{"lineNumber":227,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":228,"author":{"gitId":"chydarren"},"content":"Wave goodbye to Doraemon and quit the application.","lastModifiedDate":"2022-09-24"},{"lineNumber":229,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":230,"author":{"gitId":"chydarren"},"content":"Format: `bye`","lastModifiedDate":"2022-09-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":233,"author":{"gitId":"chydarren"},"content":"bye","lastModifiedDate":"2022-09-24"},{"lineNumber":234,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":235,"author":{"gitId":"chydarren"},"content":"    Sayonara. Hope to see you again soon!","lastModifiedDate":"2022-09-24"},{"lineNumber":236,"author":{"gitId":"chydarren"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":23,"chydarren":214}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke;","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.commands.Command;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.common.InfoMessages;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import duke.data.exception.InvalidCommandException;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":" * Duke Doraemon is a personal chat robot cat assistant that helps","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":" * a person such as Nobita to keep track of his todos, events and deadlines.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    private TextUi ui;","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * Launches a runnable instance of Duke.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     * @param args A list of unused arguments at runtime.","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     * Initialises new storage, tasks and user interface classes","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     * in the current instance of Duke.","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    public void run() {","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            // Initialises tasks with saved input from an existing file","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"            tasks \u003d storage.readFromFile();","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(InfoMessages.MESSAGE_INFO_FILE_READ);","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_FILE_IO);","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"        ui.showWelcomeText();","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"        String input;","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"        do {","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"            input \u003d ui.getUserInput();","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"            try {","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"                // Parses the user input and creates a corresponding command object","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"                Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"                // Executes the functions of the command","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"                command.execute(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-11"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"                ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_COMMAND);","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"            // Loops and continue to requests for user input if user has not exited","lastModifiedDate":"2022-09-21"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"        } while (!Objects.equals(input, ByeCommand.COMMAND));","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"chydarren":64}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.exception.TodoNoTitleException;","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Represents a task command object that will be inherited by deadline, event and todo command objects.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    protected String description;","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the AddCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the title, deadline and/or time of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    public AddCommand(String description, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * Checks the format of todo task to ensure that it has a task title.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     * @throws TodoNoTitleException If todo task does not contain a title.","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    public void checkTodoFormat(String title) throws TodoNoTitleException {","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"            throw new TodoNoTitleException();","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {}","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":46}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.InfoMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Represents a bye command object that will execute the operations for Bye command.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"bye\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        ui.showCustomText(InfoMessages.MESSAGE_INFO_GOODBYE);","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":" * Represents an object that can be inherited by other command objects.","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * Writes each task from the task list into the file via the writeToFile function from storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public void writeToFile(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_FILE_IO);","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    public abstract void execute(TextUi ui, TaskList tasks, Storage storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":38}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" * Represents a deadline command object that will execute the operations for Deadline command.","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"public class DeadlineCommand extends AddCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" /by \";","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the DeadlineCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the title and deadline of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    public DeadlineCommand(String description, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            String[] descriptionSplits \u003d description.split(DELIMITER);","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            // Adds the deadline task into the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            Task task \u003d tasks.addDeadline(descriptionSplits[0], descriptionSplits[1], isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            // Shows information for the task that has been added into the program","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            ui.showAddTaskInfo(task.getTaskDetails(), tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"            // Writes each task from the updated task list into the file","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            writeToFile(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2022-09-21"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":49}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Represents a delete command object that will execute the operations for Delete command.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class DeleteCommand extends UpdateCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"delete\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the DeleteCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the index of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    public DeleteCommand(String description) {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"        super(description);","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"            // Checks the index of a task to ensure that the tasks exist in the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"            int taskIndex \u003d checkIndexIsValid(description, tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"            // Deletes the task from the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"            String taskDetails \u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"            // Shows information for the task that has been deleted from the program","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            ui.showDeleteTaskInfo(taskDetails, tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            // Writes each task from the updated task list into the file","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            writeToFile(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_DELETE_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_TASK_INDEX);","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":47}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" * Represents an event command object that will execute the operations for Event command.","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"public class EventCommand extends AddCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"event\";","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" /at \";","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the EventCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the title and event time of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public EventCommand(String description, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"            String[] descriptionSplits \u003d description.split(DELIMITER);","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"            // Adds the event task into the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            Task task \u003d tasks.addEvent(descriptionSplits[0], descriptionSplits[1], isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            // Shows information for the task that has been added into the program","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            ui.showAddTaskInfo(task.getTaskDetails(), tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            // Writes each task from the updated task list into the file","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            writeToFile(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_EVENT_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":47}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.common.InfoMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.data.exception.FindNoKeywordsException;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":" * Represents a find command object that will execute the operations for Find command.","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"find\";","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    protected String keywords;","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the FindCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     * @param keywords A string containing the keywords used in the search expression.","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    public FindCommand(String keywords) {","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     * Checks the format of find to ensure that it contains keywords used in the search expression.","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     * @param keywords A string containing the keywords used in the search expression.","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * @throws FindNoKeywordsException If a user does not enter a search expression for Find.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public void checkFindFormat(String keywords) throws FindNoKeywordsException {","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        if (keywords.isBlank()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"            throw new FindNoKeywordsException();","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"            // Checks the format of find to ensure that it contains keywords used in the search expression","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"            checkFindFormat(keywords);","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"            String tasksList \u003d tasks.findTasks(keywords);","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"            if (tasksList.equals(EMPTY_STRING)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"                ui.showCustomText(InfoMessages.MESSAGE_INFO_LIST_UNFILTERED);","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"                return;","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"            ui.showTaskList(tasksList, InfoMessages.MESSAGE_INFO_LIST_FILTERED);","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"        } catch (FindNoKeywordsException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_FIND_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":61}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.InfoMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Represents a list command object that will execute the operations for List command.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"list\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        String tasksList \u003d tasks.listTasks();","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"        if (tasksList.equals(EMPTY_STRING)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(InfoMessages.MESSAGE_INFO_LIST_EMPTY);","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"            return;","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"        ui.showTaskList(tasksList, InfoMessages.MESSAGE_INFO_LIST);","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":30}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Represents a mark command object that will execute the operations for Mark or Unmark command.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class MarkCommand extends UpdateCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    protected String command;","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the MarkCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     * @param command A string that indicates whether to mark or unmark a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the index of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    public MarkCommand(String command, String description) {","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"        super(description);","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            // Checks the index of a task to ensure that the tasks exist in the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            int taskIndex \u003d checkIndexIsValid(description, tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            // Sets boolean isDone variable to indicate whether the task is done or undone","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            boolean isDone \u003d command.equals(COMMAND_MARK);","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            // Marks or unmark the task in the list","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"            String taskDetails \u003d tasks.markTask(taskIndex, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            // Shows information for the task that has been marked or unmarked in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"            ui.showMarkTaskInfo(taskDetails, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"            // Writes each task from the updated task list into the file","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"            writeToFile(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_STATUS_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_TASK_INDEX);","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":54}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.ErrorMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.data.exception.TodoNoTitleException;","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":" * Represents a todo command object that will execute the operations for Todo command.","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"public class TodoCommand extends AddCommand {","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    public static final String COMMAND \u003d \"todo\";","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the TodoCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    public TodoCommand(String description, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        super(description, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"        try {","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"            // Checks the format of todo task to ensure that it has a task title","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"            checkTodoFormat(description);","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            // Adds the todo task into the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            Task task \u003d tasks.addTodo(description, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"            // Shows information for the task that has been added into the program","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            ui.showAddTaskInfo(task.getTaskDetails(), tasks.getTaskCount());","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            // Writes each task from the updated task list into the file","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"            writeToFile(ui, tasks, storage);","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"        } catch (TodoNoTitleException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"            ui.showCustomText(ErrorMessages.MESSAGE_ERROR_INVALID_TODO_FORMAT);","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":48}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.commands;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":" * Represents an update command object that will be inherited by delete and mark command objects.","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    protected String description;","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"     * Initialises the variables of the UpdateCommand class.","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the index of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    public UpdateCommand(String description) {","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"     * Checks the index of a task to ensure that the tasks exist in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     * @param description A string that represents the index of a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * @param taskCount An integer that states the current number of tasks in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * @return An integer that represents the index of a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     * @throws NumberFormatException If the task index is not within the range of available indexes.","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    public int checkIndexIsValid(String description, int taskCount) throws NumberFormatException {","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"        // Decrements the user input of index as the task list starts from 0","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"        int taskIndex \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"        // Checks that the task index is within the range of available indexes","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e taskCount) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"        return taskIndex;","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     * Executes the operations related to the command.","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"     * @param ui An instance of the TextUi class.","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"     * @param tasks An instance of the TaskList class.","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"     * @param storage An instance of the Storage class.","lastModifiedDate":"2022-09-21"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    public void execute(TextUi ui, TaskList tasks, Storage storage) {}","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":48}},{"path":"src/main/java/duke/common/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.common;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides enum variables for storing custom program error messages.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public enum ErrorMessages {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_COMMAND(\"Oh no, Doraemon didn\u0027t understand your command.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_TASK_INDEX(\"Nobita, the specified task does not exist in Doramon\u0027s 4D pocket.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_STATUS_FORMAT(\"Nobita, the format is: mark \u003ctaskIndex\u003e or unmark \u003ctaskIndex\u003e, e.g. mark 1.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_TODO_FORMAT(\"Nobita, the format is todo \u003cdescription\u003e, e.g. todo read books.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_DEADLINE_FORMAT(\"Nobita, the format is: deadline \u003cdescription\u003e /by \u003cd/MM/yyyy HHmm\u003e \" +","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"            \"(either date/time or both), e.g. deadline marry Shizuka /by 3/09/2022.\"),","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_EVENT_FORMAT(\"Nobita, the format is: event \u003cdescription\u003e /at \u003ceventTime\u003e, e.g. event marry Shizuka /at September 3rd 10-12pm.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_DELETE_FORMAT(\"Nobita, the format is: delete \u003ctaskIndex\u003e, e.g. delete 1.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_INVALID_FIND_FORMAT(\"Nobita, the format is: find \u003ckeywords\u003e, e.g. find Nobita marry Shizuka.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    MESSAGE_ERROR_FILE_IO(\"Doraemon encountered an issue when writing to Nobita\u0027s file:\");","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    public final String message;","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new error message when user initialises a new instance of this enum.","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"     * @param message A string containing the message.","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    ErrorMessages(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"     * Gets the error message as a string.","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the message.","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    public String toString() {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"        return message;","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":37}},{"path":"src/main/java/duke/common/InfoMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.common;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides enum variables for storing custom program information messages.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public enum InfoMessages {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_DIVIDER(\"____________________________________________________________\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_WELCOME(\"Kon\u0027nichiwa! Doraemon desu. What can I do for you?\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_FILE_READ(\"Nobita, entries have been loaded from the file and new entries will be stored too.\"),","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_LIST_EMPTY(\"Doraemon\u0027s 4D pocket is empty. Go take a rest, Nobita!\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_LIST(\"Here are the tasks stored in Doraemon\u0027s 4D pocket:\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_LIST_FILTERED(\"Here are the tasks that match your search expression in Doraemon\u0027s 4D pocket:\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_LIST_UNFILTERED(\"There are no tasks in Doraemon\u0027s 4D pocket that match your search expression.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_TASK_ADDED(\"Nobita, wake up. Here\u0027s your new task:\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_TASK_MARKED(\"Subarashi! Good job in completing your task, Nobita:\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_TASK_UNMARKED(\"Gambate Nobita, complete it soon! Don\u0027t procrastinate:\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_TASK_COUNT(\"Now you have %d tasks in Doraemon\u0027s 4D pocket.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_TASK_DELETED(\"Nobita, sugoi! One task has been deleted from Doraemon\u0027s 4D pocket.\"),","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    MESSAGE_INFO_GOODBYE(\"Sayonara. Hope to see you again soon!\");","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    public final String message;","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new information message when user initialises a new instance of this enum.","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * @param message A string containing the message.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    InfoMessages(String message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     * Gets the information message as a string.","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the message.","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    public String toString() {","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"        return message;","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":40}},{"path":"src/main/java/duke/common/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.common;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides a set of extra utilities such as a customised input split.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class Utils {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" \";","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    private static final int SPLIT_POSITION \u003d 2;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"     * Splits the user input into two parts, i.e. the command and the description.","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"     * @param input A line of input entered by the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * @return A string array of input tokens.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    public static String[] splitInput(String input) {","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"        String[] inputTokens \u003d input.split(DELIMITER, SPLIT_POSITION);","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"        if (!input.contains(DELIMITER)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"            inputTokens \u003d new String[]{input, EMPTY_STRING};","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"        return inputTokens;","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":24}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Event;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Todo;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" * Provides the management of a task list array such as adding tasks,","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":" * deleting tasks and listing tasks.","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"public class TaskList {","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    private static final int INDENT_COUNT \u003d 4;","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    private static final String INDENT_SPACE \u003d \"    \";","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \" | \";","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    private static final String DONE \u003d \"X\";","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    private static final String NUMERIC_DONE \u003d \"1\";","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    private static final String NUMERIC_NOT_DONE \u003d \"0\";","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_TODO \u003d \"T\";","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new task list when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"     * Gets a list of tasks stored in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     * @return A task list that the program has been working with.","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        return tasks;","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"     * Gets the number of tasks that has been stored in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"     * @return An integer that states the current number of tasks in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"        return tasks.size();","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"     * Adds a todo task into the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"     * @return A todo task.","lastModifiedDate":"2022-09-21"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"    public Task addTodo(String title, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"        Todo todo \u003d new Todo(title, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"        tasks.add(todo);","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"        return todo;","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"     * Adds a deadline task into the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"     * @param dueBy A string that represents the deadline of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"     * @return A deadline task.","lastModifiedDate":"2022-09-21"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"     * @throws DateTimeParseException If an error is caught in converting the string to datetime format.","lastModifiedDate":"2022-09-22"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"    public Task addDeadline(String title, String dueBy, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-09-21"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"        Deadline deadline \u003d new Deadline(title, dueBy, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"        tasks.add(deadline);","lastModifiedDate":"2022-09-20"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"        return deadline;","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":85,"author":{"gitId":"chydarren"},"content":"     * Adds an event task into the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":86,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":87,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":88,"author":{"gitId":"chydarren"},"content":"     * @param time A string that represents the time that the task will be held at.","lastModifiedDate":"2022-09-21"},{"lineNumber":89,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":90,"author":{"gitId":"chydarren"},"content":"     * @return An event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":91,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":92,"author":{"gitId":"chydarren"},"content":"    public Task addEvent(String title, String time, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":93,"author":{"gitId":"chydarren"},"content":"        Event event \u003d new Event(title, time, isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":94,"author":{"gitId":"chydarren"},"content":"        tasks.add(event);","lastModifiedDate":"2022-09-20"},{"lineNumber":95,"author":{"gitId":"chydarren"},"content":"        return event;","lastModifiedDate":"2022-09-20"},{"lineNumber":96,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":97,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":98,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":99,"author":{"gitId":"chydarren"},"content":"     * Marks or unmark a task in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":100,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":101,"author":{"gitId":"chydarren"},"content":"     * @param taskIndex An integer that indicates the index number of the task in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":102,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":103,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for the task that has been marked or unmarked.","lastModifiedDate":"2022-09-21"},{"lineNumber":104,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":105,"author":{"gitId":"chydarren"},"content":"    public String markTask(int taskIndex, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"chydarren"},"content":"        tasks.get(taskIndex).setStatus(isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":107,"author":{"gitId":"chydarren"},"content":"        String taskDetails \u003d tasks.get(taskIndex).getTaskDetails();","lastModifiedDate":"2022-09-20"},{"lineNumber":108,"author":{"gitId":"chydarren"},"content":"        return taskDetails;","lastModifiedDate":"2022-09-20"},{"lineNumber":109,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":110,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":111,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":112,"author":{"gitId":"chydarren"},"content":"     * Deletes a task in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":113,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":114,"author":{"gitId":"chydarren"},"content":"     * @param taskIndex An integer that indicates the index number of the task in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":115,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for the task that has been deleted.","lastModifiedDate":"2022-09-21"},{"lineNumber":116,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":117,"author":{"gitId":"chydarren"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2022-09-20"},{"lineNumber":118,"author":{"gitId":"chydarren"},"content":"        String taskDetails \u003d tasks.get(taskIndex).getTaskDetails();","lastModifiedDate":"2022-09-20"},{"lineNumber":119,"author":{"gitId":"chydarren"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2022-09-20"},{"lineNumber":120,"author":{"gitId":"chydarren"},"content":"        return taskDetails;","lastModifiedDate":"2022-09-20"},{"lineNumber":121,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":122,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":123,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":124,"author":{"gitId":"chydarren"},"content":"     * Formats a task into the required format for writing to file.","lastModifiedDate":"2022-09-21"},{"lineNumber":125,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":126,"author":{"gitId":"chydarren"},"content":"     * @param task A todo, deadline or event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":127,"author":{"gitId":"chydarren"},"content":"     * @return A string of the formatted task.","lastModifiedDate":"2022-09-21"},{"lineNumber":128,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":129,"author":{"gitId":"chydarren"},"content":"    public String getTaskFileEntry(Task task) {","lastModifiedDate":"2022-09-20"},{"lineNumber":130,"author":{"gitId":"chydarren"},"content":"        // Sets the task status as 1 or 0 based on the task completion status boolean indicated in isDone","lastModifiedDate":"2022-09-21"},{"lineNumber":131,"author":{"gitId":"chydarren"},"content":"        String taskStatus \u003d task.getStatusIcon().equals(DONE) ? NUMERIC_DONE : NUMERIC_NOT_DONE;","lastModifiedDate":"2022-09-20"},{"lineNumber":132,"author":{"gitId":"chydarren"},"content":"        String taskTitle \u003d task.getTitle();","lastModifiedDate":"2022-09-20"},{"lineNumber":133,"author":{"gitId":"chydarren"},"content":"        // Formats the task based on the task type: T, D or E","lastModifiedDate":"2022-09-21"},{"lineNumber":134,"author":{"gitId":"chydarren"},"content":"        String taskFileEntry \u003d TASK_TYPE_TODO + DELIMITER + taskStatus + DELIMITER + taskTitle;","lastModifiedDate":"2022-09-20"},{"lineNumber":135,"author":{"gitId":"chydarren"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-09-20"},{"lineNumber":136,"author":{"gitId":"chydarren"},"content":"            taskFileEntry \u003d TASK_TYPE_DEADLINE + DELIMITER + taskStatus + DELIMITER + taskTitle","lastModifiedDate":"2022-09-20"},{"lineNumber":137,"author":{"gitId":"chydarren"},"content":"                    + DELIMITER + task.getDueBy();","lastModifiedDate":"2022-09-20"},{"lineNumber":138,"author":{"gitId":"chydarren"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2022-09-20"},{"lineNumber":139,"author":{"gitId":"chydarren"},"content":"            taskFileEntry \u003d TASK_TYPE_EVENT + DELIMITER + taskStatus + DELIMITER + taskTitle","lastModifiedDate":"2022-09-20"},{"lineNumber":140,"author":{"gitId":"chydarren"},"content":"                    + DELIMITER + task.getTime();","lastModifiedDate":"2022-09-20"},{"lineNumber":141,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"chydarren"},"content":"        return taskFileEntry;","lastModifiedDate":"2022-09-20"},{"lineNumber":143,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":144,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":145,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":146,"author":{"gitId":"chydarren"},"content":"     * Formats a list of tasks stored in the program into a string.","lastModifiedDate":"2022-09-21"},{"lineNumber":147,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":148,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the formatted task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":149,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":150,"author":{"gitId":"chydarren"},"content":"    public String listTasks() {","lastModifiedDate":"2022-09-20"},{"lineNumber":151,"author":{"gitId":"chydarren"},"content":"        String tasksList \u003d EMPTY_STRING;","lastModifiedDate":"2022-09-20"},{"lineNumber":152,"author":{"gitId":"chydarren"},"content":"        // Loops each task from the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":153,"author":{"gitId":"chydarren"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-20"},{"lineNumber":154,"author":{"gitId":"chydarren"},"content":"            tasksList +\u003d INDENT_SPACE + task.getTaskDetails() + LINE_SEPARATOR;","lastModifiedDate":"2022-09-21"},{"lineNumber":155,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":156,"author":{"gitId":"chydarren"},"content":"        if (!tasksList.equals(EMPTY_STRING)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":157,"author":{"gitId":"chydarren"},"content":"            // Removes the space indent from the first task and line break from the last task","lastModifiedDate":"2022-09-21"},{"lineNumber":158,"author":{"gitId":"chydarren"},"content":"            tasksList \u003d tasksList.substring(INDENT_COUNT, tasksList.length() - 1);","lastModifiedDate":"2022-09-20"},{"lineNumber":159,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":160,"author":{"gitId":"chydarren"},"content":"        return tasksList;","lastModifiedDate":"2022-09-20"},{"lineNumber":161,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":162,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":163,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":164,"author":{"gitId":"chydarren"},"content":"     * Formats a filtered list of tasks stored in the program into a string.","lastModifiedDate":"2022-09-21"},{"lineNumber":165,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":166,"author":{"gitId":"chydarren"},"content":"     * @param keyword A string containing the keywords used in the search expression.","lastModifiedDate":"2022-09-21"},{"lineNumber":167,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the formatted task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":168,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":169,"author":{"gitId":"chydarren"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2022-09-20"},{"lineNumber":170,"author":{"gitId":"chydarren"},"content":"        String tasksList \u003d EMPTY_STRING;","lastModifiedDate":"2022-09-20"},{"lineNumber":171,"author":{"gitId":"chydarren"},"content":"        // Loops each task from the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":172,"author":{"gitId":"chydarren"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-20"},{"lineNumber":173,"author":{"gitId":"chydarren"},"content":"            // Include only tasks that contain the keywords used in the search expression","lastModifiedDate":"2022-09-21"},{"lineNumber":174,"author":{"gitId":"chydarren"},"content":"            if (task.getTaskDetails().contains(keyword)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":175,"author":{"gitId":"chydarren"},"content":"                tasksList +\u003d INDENT_SPACE + task.getTaskDetails() + LINE_SEPARATOR;","lastModifiedDate":"2022-09-21"},{"lineNumber":176,"author":{"gitId":"chydarren"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":177,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":178,"author":{"gitId":"chydarren"},"content":"        if (!tasksList.equals(EMPTY_STRING)) {","lastModifiedDate":"2022-09-20"},{"lineNumber":179,"author":{"gitId":"chydarren"},"content":"            // Removes the space indent from the first task and line break from the last task","lastModifiedDate":"2022-09-21"},{"lineNumber":180,"author":{"gitId":"chydarren"},"content":"            tasksList \u003d tasksList.substring(INDENT_COUNT, tasksList.length() - 1);","lastModifiedDate":"2022-09-20"},{"lineNumber":181,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":182,"author":{"gitId":"chydarren"},"content":"        return tasksList;","lastModifiedDate":"2022-09-20"},{"lineNumber":183,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":184,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":184}},{"path":"src/main/java/duke/data/exception/FindNoKeywordsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.exception;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Represents an exception when a user does not enter a search expression for Find.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class FindNoKeywordsException extends Throwable {","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":7}},{"path":"src/main/java/duke/data/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.exception;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Represents an exception when an invalid command has been entered.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class InvalidCommandException extends Throwable {","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-11"}],"authorContributionMap":{"chydarren":7}},{"path":"src/main/java/duke/data/exception/TodoNoTitleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.exception;","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Represents an exception when a todo task does not contain a title.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class TodoNoTitleException extends Throwable {","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"chydarren":7}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.task;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Provides the management of a deadline task with getters and setters.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE \u003d \"[D]\";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    private static final String TIME_PREFIX \u003d \" (by: \";","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    private static final String TIME_POSTFIX \u003d \")\";","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"    private static final String TIME_INFIX \u003d \", \";","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    private static final String EMPTY_SPACE \u003d \" \";","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER \u003d \"/\";","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    private static LocalDate dueByDate;","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    private static LocalTime dueByTime;","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    public static String dueBy;","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new deadline task when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * @param dueBy A string that represents the deadline of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    public Deadline(String title, String dueBy, boolean isDone) throws DateTimeParseException {","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"        super(title, isDone);","lastModifiedDate":"2022-09-11"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"        // Stores the deadline of task as LocalDate and LocalTime objects in the program.","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"        ConvertStringToDatetime(dueBy);","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"     * Stores the deadline of task as LocalDate and LocalTime objects in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     * @param dueBy A string that represents the deadline of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     * @throws DateTimeParseException If an error is caught in converting the string to datetime format.","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"    public static void ConvertStringToDatetime(String dueBy) throws DateTimeParseException {","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"        // Splits the deadline into two parts, i.e. date and/or time, whichever applicable","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"        if (dueBy.contains(EMPTY_SPACE)) {","lastModifiedDate":"2022-09-21"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"            String[] dueBySplits \u003d dueBy.split(EMPTY_SPACE);","lastModifiedDate":"2022-09-21"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"            dueByDate \u003d LocalDate.parse(dueBySplits[0], dateFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"            dueByTime \u003d LocalTime.parse(dueBySplits[1], timeFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"        } else if (dueBy.contains(DELIMITER)) {","lastModifiedDate":"2022-09-21"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"            dueByDate \u003d LocalDate.parse(dueBy, dateFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"        } else {","lastModifiedDate":"2022-09-21"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"            dueByTime \u003d LocalTime.parse(dueBy, timeFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-21"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"     * Converts the LocalDate and LocalTime objects into a meaningful deadline format.","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"     * @param dueByDate A LocalDate object that represents the date portion of the task deadline.","lastModifiedDate":"2022-09-21"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"     * @param dueByTime A LocalTime object that represents the time portion of the task deadline.","lastModifiedDate":"2022-09-21"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the deadline of the task in a meaningful format.","lastModifiedDate":"2022-09-21"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"    public String ConvertDatetimeToString(LocalDate dueByDate, LocalTime dueByTime) {","lastModifiedDate":"2022-09-21"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"        DateTimeFormatter datePrintFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy (E)\");","lastModifiedDate":"2022-09-21"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"        DateTimeFormatter timePrintFormatter \u003d DateTimeFormatter.ofPattern(\"h:mm a\");","lastModifiedDate":"2022-09-21"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"        String dueBy;","lastModifiedDate":"2022-09-21"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"        // Joins the two parts, i.e. date and/or time into a single deadline, whichever applicable","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"        if (dueByDate !\u003d null \u0026\u0026 dueByTime !\u003d null) {","lastModifiedDate":"2022-09-21"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"            dueBy \u003d dueByDate.format(datePrintFormatter) + TIME_INFIX +","lastModifiedDate":"2022-09-21"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"                    dueByTime.format(timePrintFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"        } else if (dueByTime !\u003d null) {","lastModifiedDate":"2022-09-21"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"            dueBy \u003d dueByTime.format(timePrintFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"        } else {","lastModifiedDate":"2022-09-21"},{"lineNumber":77,"author":{"gitId":"chydarren"},"content":"            dueBy \u003d dueByDate.format(datePrintFormatter);","lastModifiedDate":"2022-09-21"},{"lineNumber":78,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-21"},{"lineNumber":79,"author":{"gitId":"chydarren"},"content":"        return dueBy;","lastModifiedDate":"2022-09-21"},{"lineNumber":80,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-21"},{"lineNumber":81,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":83,"author":{"gitId":"chydarren"},"content":"     * Gets the deadline of a deadline task.","lastModifiedDate":"2022-09-21"},{"lineNumber":84,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":85,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the deadline of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":86,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":87,"author":{"gitId":"chydarren"},"content":"    public String getDueBy() {","lastModifiedDate":"2022-09-10"},{"lineNumber":88,"author":{"gitId":"chydarren"},"content":"        return dueBy;","lastModifiedDate":"2022-09-10"},{"lineNumber":89,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":90,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":91,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":92,"author":{"gitId":"chydarren"},"content":"     * Gets the completion status, title and deadline of a deadline task.","lastModifiedDate":"2022-09-21"},{"lineNumber":93,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":94,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for a deadline task.","lastModifiedDate":"2022-09-21"},{"lineNumber":95,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":96,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"chydarren"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"chydarren"},"content":"        return TASK_TYPE + super.getTaskDetails() + TIME_PREFIX +","lastModifiedDate":"2022-09-21"},{"lineNumber":99,"author":{"gitId":"chydarren"},"content":"                ConvertDatetimeToString(dueByDate, dueByTime) + TIME_POSTFIX;","lastModifiedDate":"2022-09-21"},{"lineNumber":100,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"chydarren":101}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.task;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides the management of an event task with getters and setters.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE \u003d \"[E]\";","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    private static final String TIME_PREFIX \u003d \" (at: \";","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    private static final String TIME_POSTFIX \u003d \")\";","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    private String time;","lastModifiedDate":"2022-09-10"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new event task when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * @param time A string that represents the time that the task will be held at.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    public Event(String title, String time, boolean isDone) {","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"        super(title, isDone);","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     * Gets the time of an event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the time that the task will be held at.","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-10"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"        return time;","lastModifiedDate":"2022-09-10"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     * Gets the completion status, title and event time of an event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for an event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"        return TASK_TYPE + super.getTaskDetails() + TIME_PREFIX + getTime() + TIME_POSTFIX;","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"chydarren":42}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.task;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides the management of a task with getters and setters.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    private String title;","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    private Boolean isDone;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"    private static final String DONE \u003d \"X\";","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"    private static final String NOT_DONE\u003d \" \";","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"    private static final String STATUS_ICON_PREFIX \u003d \"[\";","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    private static final String STATUS_ICON_POSTFIX \u003d \"] \";","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new task when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    public Task(String title, boolean isDone) {","lastModifiedDate":"2022-09-11"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-09-10"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-11"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    public void ConvertToDatetime(String dueBy) {}","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    public String getDueBy() {","lastModifiedDate":"2022-09-10"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"        return getDueBy();","lastModifiedDate":"2022-09-10"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"     * Gets the time of an event task.","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the time that the task will be held at.","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"    public String getTime() {","lastModifiedDate":"2022-09-10"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"        return getTime();","lastModifiedDate":"2022-09-10"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"     * Gets the title of a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"    public String getTitle() {","lastModifiedDate":"2022-09-10"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"        return title;","lastModifiedDate":"2022-09-10"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"     * Gets the task completion status of a task as an icon in string format.","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"     * @return A string that represents the task completion status as an icon.","lastModifiedDate":"2022-09-21"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-10"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"        return (isDone ? DONE : NOT_DONE);","lastModifiedDate":"2022-09-10"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"     * Gets the completion status and title of a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for a task.","lastModifiedDate":"2022-09-21"},{"lineNumber":62,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":63,"author":{"gitId":"chydarren"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-09-10"},{"lineNumber":64,"author":{"gitId":"chydarren"},"content":"        return STATUS_ICON_PREFIX + getStatusIcon() + STATUS_ICON_POSTFIX + title;","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":66,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":67,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":68,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"chydarren"},"content":"     * Marks a task as done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":70,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":72,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":73,"author":{"gitId":"chydarren"},"content":"    public void setStatus(Boolean isDone) {","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"chydarren"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-09-10"},{"lineNumber":75,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-10"},{"lineNumber":76,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"chydarren":76}},{"path":"src/main/java/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.data.task;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":" * Provides the management of a todo task with getters and setters.","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE \u003d \"[T]\";","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new todo task when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"     * @param title A string that represents the title of the task.","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    public Todo(String title, boolean isDone) {","lastModifiedDate":"2022-09-11"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"        super(title, isDone);","lastModifiedDate":"2022-09-11"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"     * Gets the completion status and title of a todo task.","lastModifiedDate":"2022-09-21"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"     * @return A string containing the information for a todo task.","lastModifiedDate":"2022-09-21"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"    public String getTaskDetails() {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"        return TASK_TYPE + super.getTaskDetails();","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"chydarren":27}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.parser;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.commands.*;","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.exception.InvalidCommandException;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import static duke.common.Utils.splitInput;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * Provides the creation of a command object based on the corresponding user input.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class Parser {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"     * Parses the user input and creates a corresponding command object.","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"     * @param input A line of input entered by the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"     * @return A command object that has been initialised to the relevant command class.","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * @throws InvalidCommandException If an invalid command is found in the user input.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    public static Command parseCommand(String input) throws InvalidCommandException {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"        // Splits the user input into two parts, i.e. the command and the description","lastModifiedDate":"2022-09-21"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"        String[] inputTokens \u003d splitInput(input);","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"        String inputCommand \u003d inputTokens[0];","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"        String inputDescription \u003d inputTokens[1];","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"        // Initialises command object based on the identified command request entered by the user","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"        switch (inputCommand) {","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"        case ByeCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"        case DeadlineCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"            command \u003d new DeadlineCommand(inputDescription, false);","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"        case DeleteCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"            command \u003d new DeleteCommand(inputDescription);","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"        case EventCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"            command \u003d new EventCommand(inputDescription, false);","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"        case FindCommand.COMMAND:","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"            command \u003d new FindCommand(inputDescription);","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"chydarren"},"content":"        case ListCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"chydarren"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"chydarren"},"content":"        case MarkCommand.COMMAND_MARK:","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"chydarren"},"content":"        case MarkCommand.COMMAND_UNMARK:","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"chydarren"},"content":"            command \u003d new MarkCommand(inputCommand, inputDescription);","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"chydarren"},"content":"        case TodoCommand.COMMAND:","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"chydarren"},"content":"            command \u003d new TodoCommand(inputDescription, false);","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"chydarren"},"content":"            break;","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"chydarren"},"content":"        default:","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"chydarren"},"content":"            // Throws an exception to indicate an invalid command has been entered","lastModifiedDate":"2022-09-21"},{"lineNumber":55,"author":{"gitId":"chydarren"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"chydarren"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"chydarren"},"content":"        return command;","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"chydarren"},"content":"    };","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"chydarren"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"chydarren":61}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.data.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"import duke.data.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"import java.io.File;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":" * Provides reading of file input into the program","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":" * and writing from program back into the file.","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"public class Storage {","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    private static final String DIRECTORY_PATH \u003d \"data\";","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"    private static final String NUMERIC_DONE \u003d \"1\";","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    private static final String DELIMITER_WITH_BACKSLASH \u003d \" \\\\| \";","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_TODO \u003d \"T\";","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_DEADLINE \u003d \"D\";","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    private static final String TASK_TYPE_EVENT \u003d \"E\";","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"     * Instantiates a new task list when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":29,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"chydarren"},"content":"    public Storage() {","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"chydarren"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":35,"author":{"gitId":"chydarren"},"content":"     * Checks if directory or file exists.","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"chydarren"},"content":"     * If either or both do not exist, program will create them.","lastModifiedDate":"2022-09-21"},{"lineNumber":37,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"chydarren"},"content":"     * @return The file that the program will be working with.","lastModifiedDate":"2022-09-21"},{"lineNumber":39,"author":{"gitId":"chydarren"},"content":"     * @throws IOException If an error is caught in the IO stream.","lastModifiedDate":"2022-09-21"},{"lineNumber":40,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"chydarren"},"content":"    public static File prepareFile() throws IOException {","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //@@author chydarren-reused","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Reused from https://stackoverflow.com/a/38985883","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        File directory \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Creates a new directory if the directory does not exist","lastModifiedDate":"2022-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if(!directory.exists()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            directory.mkdir();","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Creates a new file if the file does not exist","lastModifiedDate":"2022-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if(!file.exists()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            file.createNewFile();","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return file;","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Reads each line of file input and initialises the task list with those inputs.","lastModifiedDate":"2022-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return A task list that the program will be working with.","lastModifiedDate":"2022-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IOException If an error is caught in the IO stream.","lastModifiedDate":"2022-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public TaskList readFromFile() throws IOException {","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        File file \u003d prepareFile();","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(file);","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Loops each time there is a next line found in the file input","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        while (in.hasNext()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            // Splits each line in file based on the delimiter: |","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            String[] inputSplits \u003d in.nextLine().split(DELIMITER_WITH_BACKSLASH);","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            // Sets boolean isDone variable to indicate whether the task is done or undone","lastModifiedDate":"2022-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            boolean isDone \u003d inputSplits[1].equals(NUMERIC_DONE);","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            // Adds each task from the file input into the task list based on the task type: T, D or E","lastModifiedDate":"2022-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            switch (inputSplits[0]) {","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            case TASK_TYPE_TODO:","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                tasks.addTodo(inputSplits[2], isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            case TASK_TYPE_DEADLINE:","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                tasks.addDeadline(inputSplits[2], inputSplits[3], isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            case TASK_TYPE_EVENT:","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                tasks.addEvent(inputSplits[2], inputSplits[3], isDone);","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2022-09-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return tasks;","lastModifiedDate":"2022-09-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Writes each task from the task list into the file.","lastModifiedDate":"2022-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param tasks A task list that the program has been working with.","lastModifiedDate":"2022-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IOException If an error is caught in the IO stream.","lastModifiedDate":"2022-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2022-09-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Loops each task from the task list","lastModifiedDate":"2022-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            // Formats the task into the required format for writing to file","lastModifiedDate":"2022-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            String taskFileEntry \u003d tasks.getTaskFileEntry(task);","lastModifiedDate":"2022-09-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            fileWriter.write(taskFileEntry + LINE_SEPARATOR);","lastModifiedDate":"2022-09-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        fileWriter.close();","lastModifiedDate":"2022-09-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"-":67,"chydarren":41}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"package duke.ui;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"import duke.common.InfoMessages;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"/**","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":" * Provides reading of user input and printing of","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":" * customised messages and program outputs to the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":" */","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"public class TextUi {","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"    private static final String INDENT_SPACE \u003d \"    \";","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"    private static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"    private Scanner in;","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":17,"author":{"gitId":"chydarren"},"content":"     * Shows welcome text and provides input stream when user initialises a new instance of this class.","lastModifiedDate":"2022-09-21"},{"lineNumber":18,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":19,"author":{"gitId":"chydarren"},"content":"    public TextUi() {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"chydarren"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"chydarren"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"chydarren"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"chydarren"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":24,"author":{"gitId":"chydarren"},"content":"     * Prints each message from a variable messages string line by line into the output stream.","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"chydarren"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":26,"author":{"gitId":"chydarren"},"content":"     * @param messages A string of variable arguments.","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"chydarren"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":28,"author":{"gitId":"chydarren"},"content":"    public void printMessages(String... messages) {","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        //@@author chydarren-reused","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // Reused from https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        System.out.println(INDENT_SPACE + InfoMessages.MESSAGE_INFO_DIVIDER.toString());","lastModifiedDate":"2022-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // Prints the string of arguments line by line in a loop","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (String message : messages) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            System.out.println(INDENT_SPACE + message);","lastModifiedDate":"2022-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        System.out.println(INDENT_SPACE + InfoMessages.MESSAGE_INFO_DIVIDER.toString());","lastModifiedDate":"2022-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Reads a line of user input from the user via the input stream.","lastModifiedDate":"2022-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return A line of input entered by the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String getUserInput() {","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return input;","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows a welcome text to the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void showWelcomeText() {","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        printMessages(\"*******     *******   *******       **\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        + \"    /**////**   **/////** /**////**     ****\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        + \"    /**    /** **     //**/**   /**    **//**\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                        + \"    /**    /**/**      /**/*******    **  //**\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                        + \"    /**    /**/**      /**/**///**   **********\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        + \"    /**    ** //**     ** /**  //** /**//////**\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        + \"    /*******   //*******  /**   //**/**     /**\" + LINE_SEPARATOR","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        + \"    ///////     ///////   //     // //      //\",","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                InfoMessages.MESSAGE_INFO_WELCOME.toString()","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Shows custom program information or error messages to the user.","lastModifiedDate":"2022-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param message An enum variable that allows the parsing in of the custom information or error message.","lastModifiedDate":"2022-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void showCustomText(Enum message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        printMessages(","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                message.toString()","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows a task list stored in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param tasksList A string containing the formatted task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param message An enum variable that allows the parsing in of the custom information message.","lastModifiedDate":"2022-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void showTaskList(String tasksList, Enum message) {","lastModifiedDate":"2022-09-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        printMessages(","lastModifiedDate":"2022-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                message.toString(),","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                tasksList","lastModifiedDate":"2022-09-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Shows information for the task that has been added into the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param taskDetails A string containing the information for the task that has been added.","lastModifiedDate":"2022-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param taskSize An integer that states the current number of tasks in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void showAddTaskInfo(String taskDetails, int taskSize) {","lastModifiedDate":"2022-09-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        printMessages(","lastModifiedDate":"2022-09-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                InfoMessages.MESSAGE_INFO_TASK_ADDED.toString(),","lastModifiedDate":"2022-09-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                taskDetails,","lastModifiedDate":"2022-09-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                // Formats the information message dynamically based on the given taskSize.","lastModifiedDate":"2022-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                String.format(\"%s\", String.format(InfoMessages.MESSAGE_INFO_TASK_COUNT.toString(), taskSize))","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Shows information for the task that has been marked or unmarked in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param taskDetails A string containing the information for the task that has been marked or unmarked.","lastModifiedDate":"2022-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param isDone A boolean that indicates whether the task is done or undone.","lastModifiedDate":"2022-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void showMarkTaskInfo(String taskDetails, boolean isDone) {","lastModifiedDate":"2022-09-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Gets the information message dynamically based on the task completion status indicated in isDone.","lastModifiedDate":"2022-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Enum message \u003d (isDone ? InfoMessages.MESSAGE_INFO_TASK_MARKED : InfoMessages.MESSAGE_INFO_TASK_UNMARKED);","lastModifiedDate":"2022-09-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        printMessages(","lastModifiedDate":"2022-09-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                message.toString(),","lastModifiedDate":"2022-09-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                taskDetails","lastModifiedDate":"2022-09-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Shows information for the task that has been deleted in the program.","lastModifiedDate":"2022-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param taskDetails A string containing the information for the task that has been deleted.","lastModifiedDate":"2022-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @param taskCount An integer that states the current number of tasks in the task list.","lastModifiedDate":"2022-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void showDeleteTaskInfo(String taskDetails, int taskCount) {","lastModifiedDate":"2022-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // Prints the messages by calling the printMessages function","lastModifiedDate":"2022-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        printMessages(","lastModifiedDate":"2022-09-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                InfoMessages.MESSAGE_INFO_TASK_DELETED.toString(),","lastModifiedDate":"2022-09-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                taskDetails,","lastModifiedDate":"2022-09-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                // Formats the information message dynamically based on the given taskCount.","lastModifiedDate":"2022-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                String.format(\"%s\", String.format(InfoMessages.MESSAGE_INFO_TASK_COUNT.toString(), taskCount))","lastModifiedDate":"2022-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2022-09-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"-":113,"chydarren":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chydarren"},"content":"todo read book","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"chydarren"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"chydarren"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"chydarren"},"content":"todo join sports club","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"chydarren"},"content":"todo borrow book","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"chydarren"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"chydarren"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"chydarren"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"chydarren"},"content":"mark 4","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"chydarren"},"content":"mark 1","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"chydarren"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"chydarren"},"content":"unmark 1","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"chydarren"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"chydarren"},"content":"bye","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"chydarren":14}}]
