[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"     * Function checks if the user\u0027s 2nd word input is a numeral value whenever the 1st word input is \"mark\" or \"unmark\".","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     * @param str the 2nd word input by the user whenever the 1st word input is \"mark\" or \"unmark\"","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"     * @return boolean true if the string is a numeral, and false if it contains any other characters.","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"    public static boolean checkIsNumeric(String str) {","lastModifiedDate":"2022-08-24"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"        for (int i \u003d 0; i \u003c str.length(); i++) {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"            char c \u003d str.charAt(i);","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"                return false;","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"        return true;","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"    /**","lastModifiedDate":"2022-08-24"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"     * Returns the number of words within a string.","lastModifiedDate":"2022-08-24"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"     *","lastModifiedDate":"2022-08-24"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"     * @param input the string input from the user","lastModifiedDate":"2022-08-24"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"     * @return the number of words in the string","lastModifiedDate":"2022-08-24"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"    public static int getNumOfWords(String input) {","lastModifiedDate":"2022-08-24"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"        if (input \u003d\u003d null || input.isEmpty()) {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"            return 0;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"        String[] words \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"        return words.length;","lastModifiedDate":"2022-08-22"},{"lineNumber":34,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":35,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"chinhan99"},"content":"        /*","lastModifiedDate":"2022-08-24"},{"lineNumber":38,"author":{"gitId":"chinhan99"},"content":"         * array storing the Task objects.","lastModifiedDate":"2022-08-24"},{"lineNumber":39,"author":{"gitId":"chinhan99"},"content":"         */","lastModifiedDate":"2022-08-24"},{"lineNumber":40,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":41,"author":{"gitId":"chinhan99"},"content":"        Task[] tasks \u003d new Task[101];","lastModifiedDate":"2022-08-22"},{"lineNumber":42,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":43,"author":{"gitId":"chinhan99"},"content":"        /*","lastModifiedDate":"2022-08-24"},{"lineNumber":44,"author":{"gitId":"chinhan99"},"content":"         * stores the number of words in the user\u0027s string input.","lastModifiedDate":"2022-08-24"},{"lineNumber":45,"author":{"gitId":"chinhan99"},"content":"         */","lastModifiedDate":"2022-08-24"},{"lineNumber":46,"author":{"gitId":"chinhan99"},"content":"        int numOfWords \u003d 0;","lastModifiedDate":"2022-08-24"},{"lineNumber":47,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":48,"author":{"gitId":"chinhan99"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":49,"author":{"gitId":"chinhan99"},"content":"        String inData;","lastModifiedDate":"2022-08-22"},{"lineNumber":50,"author":{"gitId":"chinhan99"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-22"},{"lineNumber":51,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":52,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-08-22"},{"lineNumber":53,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":54,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":55,"author":{"gitId":"chinhan99"},"content":"        while (true) { /* continuously receive user input */","lastModifiedDate":"2022-08-24"},{"lineNumber":56,"author":{"gitId":"chinhan99"},"content":"            inData \u003d scan.nextLine();","lastModifiedDate":"2022-08-22"},{"lineNumber":57,"author":{"gitId":"chinhan99"},"content":"            numOfWords \u003d getNumOfWords(inData);","lastModifiedDate":"2022-08-24"},{"lineNumber":58,"author":{"gitId":"chinhan99"},"content":"            if (inData.equals(\"list\")) { /* print entire list if input is equal to \"list\" */","lastModifiedDate":"2022-08-24"},{"lineNumber":59,"author":{"gitId":"chinhan99"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":60,"author":{"gitId":"chinhan99"},"content":"                for (int i \u003d 1; i \u003c taskIndex; i +\u003d 1) {","lastModifiedDate":"2022-08-22"},{"lineNumber":61,"author":{"gitId":"chinhan99"},"content":"                    System.out.println(i + \". \" + \"[\" + tasks[i].getStatusIcon() + \"] \" + tasks[i].description);","lastModifiedDate":"2022-08-22"},{"lineNumber":62,"author":{"gitId":"chinhan99"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":63,"author":{"gitId":"chinhan99"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":64,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":65,"author":{"gitId":"chinhan99"},"content":"            } else if (numOfWords \u003d\u003d 2) { /* check if the user input has 2 words before checking for commands \"mark\" and \"unmark\" */","lastModifiedDate":"2022-08-24"},{"lineNumber":66,"author":{"gitId":"chinhan99"},"content":"                String[] arr \u003d inData.split(\" \");","lastModifiedDate":"2022-08-22"},{"lineNumber":67,"author":{"gitId":"chinhan99"},"content":"                if (arr[0].equals(\"unmark\")) { /* checks if user input has entered \"unmark\" as the first word */","lastModifiedDate":"2022-08-24"},{"lineNumber":68,"author":{"gitId":"chinhan99"},"content":"                    if (checkIsNumeric(arr[1])) { /* check if the 2nd word is indeed a numeric value , else the input would be stored as a tasking */","lastModifiedDate":"2022-08-24"},{"lineNumber":69,"author":{"gitId":"chinhan99"},"content":"                        int unmarkedIndex \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":70,"author":{"gitId":"chinhan99"},"content":"                        if ((unmarkedIndex \u003e 0) \u0026\u0026 (unmarkedIndex \u003c taskIndex)) { /* checks if the user input command is within the current bound of the tasks array. */","lastModifiedDate":"2022-08-24"},{"lineNumber":71,"author":{"gitId":"chinhan99"},"content":"                            tasks[unmarkedIndex].setDone(false);","lastModifiedDate":"2022-08-22"},{"lineNumber":72,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":73,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"[\" + tasks[unmarkedIndex].getStatusIcon() + \"] \" + tasks[unmarkedIndex].getDescription());","lastModifiedDate":"2022-08-22"},{"lineNumber":74,"author":{"gitId":"chinhan99"},"content":"                        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":75,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"Invalid unmark command\");","lastModifiedDate":"2022-08-22"},{"lineNumber":76,"author":{"gitId":"chinhan99"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":77,"author":{"gitId":"chinhan99"},"content":"                    } else { /* add a new tasking */","lastModifiedDate":"2022-08-24"},{"lineNumber":78,"author":{"gitId":"chinhan99"},"content":"                        if (taskIndex \u003c 101) {","lastModifiedDate":"2022-08-22"},{"lineNumber":79,"author":{"gitId":"chinhan99"},"content":"                            tasks[taskIndex] \u003d new Task(inData);","lastModifiedDate":"2022-08-22"},{"lineNumber":80,"author":{"gitId":"chinhan99"},"content":"                            taskIndex +\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":81,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":82,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"added: \" + tasks[taskIndex - 1].description);","lastModifiedDate":"2022-08-22"},{"lineNumber":83,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":84,"author":{"gitId":"chinhan99"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":85,"author":{"gitId":"chinhan99"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":86,"author":{"gitId":"chinhan99"},"content":"                } else if (arr[0].equals(\"mark\")) { /* checks if user input has entered \"mark\" as the first word. */","lastModifiedDate":"2022-08-24"},{"lineNumber":87,"author":{"gitId":"chinhan99"},"content":"                    if (checkIsNumeric(arr[1])) {","lastModifiedDate":"2022-08-24"},{"lineNumber":88,"author":{"gitId":"chinhan99"},"content":"                        int markedIndex \u003d Integer.parseInt(arr[1]);","lastModifiedDate":"2022-08-22"},{"lineNumber":89,"author":{"gitId":"chinhan99"},"content":"                        if ((markedIndex \u003e 0) \u0026\u0026 (markedIndex \u003c taskIndex)) { /* checks if the user input command is within the current bound of the tasks array. */","lastModifiedDate":"2022-08-24"},{"lineNumber":90,"author":{"gitId":"chinhan99"},"content":"                            tasks[markedIndex].setDone(true);","lastModifiedDate":"2022-08-22"},{"lineNumber":91,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-22"},{"lineNumber":92,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"[\" + tasks[markedIndex].getStatusIcon() + \"] \" + tasks[markedIndex].getDescription());","lastModifiedDate":"2022-08-22"},{"lineNumber":93,"author":{"gitId":"chinhan99"},"content":"                        } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":94,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"Invalid mark command\");","lastModifiedDate":"2022-08-22"},{"lineNumber":95,"author":{"gitId":"chinhan99"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":96,"author":{"gitId":"chinhan99"},"content":"                    } else { /* add a new tasking */","lastModifiedDate":"2022-08-24"},{"lineNumber":97,"author":{"gitId":"chinhan99"},"content":"                        if (taskIndex \u003c 101) { /* prevents the insertion of new tasks into the tasks array */","lastModifiedDate":"2022-08-24"},{"lineNumber":98,"author":{"gitId":"chinhan99"},"content":"                            tasks[taskIndex] \u003d new Task(inData);","lastModifiedDate":"2022-08-22"},{"lineNumber":99,"author":{"gitId":"chinhan99"},"content":"                            taskIndex +\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":100,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":101,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"added: \" + tasks[taskIndex - 1].description);","lastModifiedDate":"2022-08-22"},{"lineNumber":102,"author":{"gitId":"chinhan99"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":103,"author":{"gitId":"chinhan99"},"content":"                        }","lastModifiedDate":"2022-08-22"},{"lineNumber":104,"author":{"gitId":"chinhan99"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":105,"author":{"gitId":"chinhan99"},"content":"                } else { /* add a new tasking */","lastModifiedDate":"2022-08-24"},{"lineNumber":106,"author":{"gitId":"chinhan99"},"content":"                    if (taskIndex \u003c 101) { /* prevents the insertion of new tasks into the tasks array */","lastModifiedDate":"2022-08-24"},{"lineNumber":107,"author":{"gitId":"chinhan99"},"content":"                        tasks[taskIndex] \u003d new Task(inData);","lastModifiedDate":"2022-08-22"},{"lineNumber":108,"author":{"gitId":"chinhan99"},"content":"                        taskIndex +\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":109,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":110,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"added: \" + tasks[taskIndex - 1].description);","lastModifiedDate":"2022-08-22"},{"lineNumber":111,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":112,"author":{"gitId":"chinhan99"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":113,"author":{"gitId":"chinhan99"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":114,"author":{"gitId":"chinhan99"},"content":"            } else {","lastModifiedDate":"2022-08-22"},{"lineNumber":115,"author":{"gitId":"chinhan99"},"content":"                if (inData.equals(\"bye\")) { /* exits the while loop if the user inputs is equal to \"bye\" */","lastModifiedDate":"2022-08-24"},{"lineNumber":116,"author":{"gitId":"chinhan99"},"content":"                    break;","lastModifiedDate":"2022-08-22"},{"lineNumber":117,"author":{"gitId":"chinhan99"},"content":"                } else { /* add a new tasking */","lastModifiedDate":"2022-08-24"},{"lineNumber":118,"author":{"gitId":"chinhan99"},"content":"                    if (taskIndex \u003c 101) { /* prevents the insertion of new tasks into the tasks array */","lastModifiedDate":"2022-08-24"},{"lineNumber":119,"author":{"gitId":"chinhan99"},"content":"                        tasks[taskIndex] \u003d new Task(inData);","lastModifiedDate":"2022-08-22"},{"lineNumber":120,"author":{"gitId":"chinhan99"},"content":"                        taskIndex +\u003d 1;","lastModifiedDate":"2022-08-22"},{"lineNumber":121,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":122,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"added: \" + tasks[taskIndex - 1].description);","lastModifiedDate":"2022-08-22"},{"lineNumber":123,"author":{"gitId":"chinhan99"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":124,"author":{"gitId":"chinhan99"},"content":"                    }","lastModifiedDate":"2022-08-22"},{"lineNumber":125,"author":{"gitId":"chinhan99"},"content":"                }","lastModifiedDate":"2022-08-22"},{"lineNumber":126,"author":{"gitId":"chinhan99"},"content":"            }","lastModifiedDate":"2022-08-22"},{"lineNumber":127,"author":{"gitId":"chinhan99"},"content":"        }","lastModifiedDate":"2022-08-22"},{"lineNumber":128,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":129,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-22"},{"lineNumber":130,"author":{"gitId":"chinhan99"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-08-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chinhan99":129,"-":4}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chinhan99"},"content":"public class Task {","lastModifiedDate":"2022-08-22"},{"lineNumber":2,"author":{"gitId":"chinhan99"},"content":"    /*","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"chinhan99"},"content":"    * a string storing the user\u0027s tasking.","lastModifiedDate":"2022-08-24"},{"lineNumber":4,"author":{"gitId":"chinhan99"},"content":"    * */","lastModifiedDate":"2022-08-24"},{"lineNumber":5,"author":{"gitId":"chinhan99"},"content":"    protected String description;","lastModifiedDate":"2022-08-22"},{"lineNumber":6,"author":{"gitId":"chinhan99"},"content":"    /*","lastModifiedDate":"2022-08-24"},{"lineNumber":7,"author":{"gitId":"chinhan99"},"content":"     * a boolean variable tracking the completeness of the tasking.","lastModifiedDate":"2022-08-24"},{"lineNumber":8,"author":{"gitId":"chinhan99"},"content":"     */","lastModifiedDate":"2022-08-24"},{"lineNumber":9,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"chinhan99"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-22"},{"lineNumber":11,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":12,"author":{"gitId":"chinhan99"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-22"},{"lineNumber":13,"author":{"gitId":"chinhan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-22"},{"lineNumber":14,"author":{"gitId":"chinhan99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-22"},{"lineNumber":15,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":16,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":17,"author":{"gitId":"chinhan99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-22"},{"lineNumber":18,"author":{"gitId":"chinhan99"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-22"},{"lineNumber":19,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":20,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":21,"author":{"gitId":"chinhan99"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-22"},{"lineNumber":22,"author":{"gitId":"chinhan99"},"content":"        return description;","lastModifiedDate":"2022-08-22"},{"lineNumber":23,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":24,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":25,"author":{"gitId":"chinhan99"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-08-22"},{"lineNumber":26,"author":{"gitId":"chinhan99"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-22"},{"lineNumber":27,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":28,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":29,"author":{"gitId":"chinhan99"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-08-22"},{"lineNumber":30,"author":{"gitId":"chinhan99"},"content":"        isDone \u003d done;","lastModifiedDate":"2022-08-22"},{"lineNumber":31,"author":{"gitId":"chinhan99"},"content":"    }","lastModifiedDate":"2022-08-22"},{"lineNumber":32,"author":{"gitId":"chinhan99"},"content":"","lastModifiedDate":"2022-08-22"},{"lineNumber":33,"author":{"gitId":"chinhan99"},"content":"}","lastModifiedDate":"2022-08-22"}],"authorContributionMap":{"chinhan99":33}}]
