[{"path":"Data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"E | 1 | project meeting  |  Mon 2-4pm","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"E | 0 | group work  |  CLB","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"T | 0 | eat medicine","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow new book","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"E | 1 | borrow book | clb","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"E | 1 | dinner with mum | home","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"## Introduction","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"Duke is a personal task manager that helps you keep track of your tasks. It is optimized for use via a Command Line Interface (CLI). If you can type fast, Duke can help you manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"## Acknowledgement(s)","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"Certain parts of this project took reference from [Owen\u0027s repository](https://github.com/owenl131/ip).","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"## Setting up","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/deenliong/ip/releases/download/A-Release/Duke.jar)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"4. Copy the exact file path of the `duke.jar` file.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"5. Open a command line and pass in the following command to run the jar file: `java -jar \u003cfile path\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"6. If the setup is correct, you should see the welcome screen as shown below.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":" ____        _","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"|  _ \\ _   _| | _____","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"_____________________","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"Hello! I\u0027m Duke, your personal task manager!","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"What can I do for you?","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"_____________________","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"Here\u0027s a list of features available in Duke. Click on the links to jump to the relevant section.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"- [Getting help: `help`](#getting-help-help)","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"- [Adding a todo task: `todo \u003cname_of_todo\u003e`](#adding-a-todo-task-todo)","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"- [Adding a deadline task: `deadline \u003cname_of_deadline\u003e /by \u003cyyyy-mm-dd\u003e`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"- [Adding an event task: `name_of_event\u003e /at \u003clocation\u003e`](#adding-an-event-task-event)","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"- [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"- [Marking a task as done: `mark \u003cexisting_task_number\u003e`](#marking-a-task-as-done-done)","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"- [Unmarking a task as done: `unmark \u003cexisting_task_number\u003e`](#unmarking-a-task-as-done-unmark)","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"- [Deleting a task: `delete \u003cexisting_task_number\u003e`](#deleting-a-task-delete)","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"- [Finding a task: `find \u003ckeyword\u003e`](#finding-a-task-find)","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"- [Get total number of task: `total`](#getting-total-number-of-task)","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"- [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"### Getting help: `help`","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"List all available commands and their usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"Format: `help`","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"Format: `todo \u003cname_of_todo\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"`todo read book`","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"deenliong"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"deenliong"},"content":"Format: `deadline \u003cname_of_deadline\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"deenliong"},"content":"- The date must be in the format `yyyy-mm-dd`.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"deenliong"},"content":"`deadline return book /by 2020-09-15`","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"deenliong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"deenliong"},"content":"[D][ ] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"deenliong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"deenliong"},"content":"### Adding an event task: `event`","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"deenliong"},"content":"Adds an event task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"deenliong"},"content":"Format: `event \u003cname_of_event\u003e /at \u003clocation\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"deenliong"},"content":"- The location can be any string.","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"deenliong"},"content":"`event project meeting /at NUS`","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"deenliong"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"deenliong"},"content":"[E][ ] project meeting (at: NUS)","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"deenliong"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"deenliong"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"deenliong"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"deenliong"},"content":"Format: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"deenliong"},"content":"`list`","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"deenliong"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"deenliong"},"content":"1. [T][ ] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"deenliong"},"content":"2. [D][ ] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"deenliong"},"content":"3. [E][ ] project meeting (at: NUS)","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"deenliong"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"deenliong"},"content":"Marks a task as done.","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"deenliong"},"content":"Format: `mark \u003cexisting_task_number\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"deenliong"},"content":"- The task number must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"deenliong"},"content":"- The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"deenliong"},"content":"- The task number must be a valid task number in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"deenliong"},"content":"`mark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"deenliong"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"deenliong"},"content":"[D][X] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":153,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"deenliong"},"content":"### Unmarking a task as done: `unmark`","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"deenliong"},"content":"Unmarks a task as done.","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"deenliong"},"content":"Format: `unmark \u003cexisting_task_number\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"deenliong"},"content":"- The task number must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"deenliong"},"content":"- The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"deenliong"},"content":"- The task number must be a valid task number in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"deenliong"},"content":"`unmark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"deenliong"},"content":"Nice! I\u0027ve unmarked this task as done:","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"deenliong"},"content":"[D][ ] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"deenliong"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"deenliong"},"content":"Deletes a task from the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"deenliong"},"content":"Format: `delete \u003cexisting_task_number\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"deenliong"},"content":"- The task number must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"deenliong"},"content":"- The task number refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"deenliong"},"content":"- The task number must be a valid task number in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"deenliong"},"content":"`delete 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"deenliong"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"deenliong"},"content":"[D][ ] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"deenliong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"deenliong"},"content":"### Finding a task: `find`","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"deenliong"},"content":"Finds tasks whose names contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"deenliong"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"deenliong"},"content":"- The search is case-insensitive. e.g `book` will match `Book`","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"deenliong"},"content":"- The order of the keywords does not matter. e.g. `Book meeting` will match `meeting Book`","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"deenliong"},"content":"- Only the name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"deenliong"},"content":"- Only full words will be matched e.g. `Book` will not match `Books`","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"deenliong"},"content":"- Tasks matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"deenliong"},"content":"  e.g. `Book meeting` will return `project meeting` and `return book`","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":212,"author":{"gitId":"deenliong"},"content":"`find book`","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"deenliong"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"deenliong"},"content":"1. [T][ ] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"deenliong"},"content":"2. [D][ ] return book (by: Sep 15 2020)","lastModifiedDate":"2022-09-30"},{"lineNumber":220,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":221,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":222,"author":{"gitId":"deenliong"},"content":"### Getting total number of task","lastModifiedDate":"2022-09-30"},{"lineNumber":223,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":224,"author":{"gitId":"deenliong"},"content":"Gets the total number of tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":225,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":226,"author":{"gitId":"deenliong"},"content":"Format: `total`","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":228,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":229,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":230,"author":{"gitId":"deenliong"},"content":"`total`","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":233,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":235,"author":{"gitId":"deenliong"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":236,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":237,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":238,"author":{"gitId":"deenliong"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":239,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":240,"author":{"gitId":"deenliong"},"content":"Exits the program.","lastModifiedDate":"2022-09-30"},{"lineNumber":241,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":242,"author":{"gitId":"deenliong"},"content":"Format: `bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":243,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":244,"author":{"gitId":"deenliong"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":246,"author":{"gitId":"deenliong"},"content":"`bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":247,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":248,"author":{"gitId":"deenliong"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":249,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":250,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":251,"author":{"gitId":"deenliong"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-30"},{"lineNumber":252,"author":{"gitId":"deenliong"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":253,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":254,"author":{"gitId":"deenliong"},"content":"## Command summary","lastModifiedDate":"2022-09-30"},{"lineNumber":255,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":256,"author":{"gitId":"deenliong"},"content":"| Action       | Format                                         | Examples                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"deenliong"},"content":"|--------------|------------------------------------------------|---------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":258,"author":{"gitId":"deenliong"},"content":"| **Help**     | `help`                                         | `help`                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"deenliong"},"content":"| **Todo**     | `todo \u003cname_of_todo\u003e`                          | `todo read book`                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"deenliong"},"content":"| **Deadline** | `deadline \u003cname_of_deadline\u003e /by \u003cyyyy-mm-dd\u003e` | `deadline return book /by 2020-09-15` |","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"deenliong"},"content":"| **Event**    | `event \u003cname_of_event\u003e /at \u003clocation\u003e`         | `event project meeting /at NUS`       |","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"deenliong"},"content":"| **List**     | `list`                                         | `list`                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"deenliong"},"content":"| **Done**     | `done \u003cexisting_task_number\u003e`                  | `done 2`                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"deenliong"},"content":"| **Unmark**   | `unmark \u003cexisting_task_number\u003e`                | `unmark 2`                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":265,"author":{"gitId":"deenliong"},"content":"| **Delete**   | `delete \u003cexisting_task_number\u003e`                | `delete 2`                            |","lastModifiedDate":"2022-09-30"},{"lineNumber":266,"author":{"gitId":"deenliong"},"content":"| **Find**     | `find \u003ckeyword\u003e`                               | `find book`                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":267,"author":{"gitId":"deenliong"},"content":"| **Total**    | `total`                                        | `total`                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"deenliong"},"content":"| **Bye**      | `bye`                                          | `bye`                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":270,"author":{"gitId":"deenliong"},"content":"## Saving data","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"deenliong"},"content":"Duke data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"deenliong"},"content":"## FAQ","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":276,"author":{"gitId":"deenliong"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2022-09-30"},{"lineNumber":277,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"deenliong"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Duke home folder.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"-":34,"deenliong":244}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.parser.CommandParser;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"import static duke.Ui.printIntroMessage;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"public class Duke {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"     * Initialises the Duke object and loads the tasks from the default data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public Duke() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"     * Runs the Duke program until keyword \"bye\" is entered.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"    public void run() {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"        printIntroMessage(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"        String fullCommand;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"            fullCommand \u003d sc.nextLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"            try {","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"                Command keyword \u003d CommandParser.parseCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"                keyword.execute(tasks, storage, ui, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"                isExit \u003d keyword.isExit();","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"                Ui.printUnknownCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"            } ","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-14"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"        sc.close();","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-22"}],"authorContributionMap":{"deenliong":55}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"import java.io.File;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":" * Class contains methods to deal with any operations related to the storage of the tasks into a file.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"public class Storage {","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"     * Adds a Todo task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"     * @param task The Event task to be added.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"     * @throws DukeException If the task is not an Event task.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"    public static void addInputFileEvent(ArrayList\u003cTask\u003e tasks, String[] task) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"        Task t \u003d new Event(task[2], task[3]);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"        if (task[1].equals(\"1\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"            t.setDone(t.isDone);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"     * Adds a Deadline task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"     * @param task The Deadline task to be added.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"     * @throws DukeException If the task is not a Deadline task.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"    public static void addInputFileDeadline(ArrayList\u003cTask\u003e tasks, String[] task) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"        Task t \u003d new Deadline(task[2], task[3]);","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"        if (task[1].equals(\"1\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"            t.setDone(t.isDone);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"     * Adds a Todo task to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"     * @param task The Todo task to be added.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"     * @throws DukeException If the task is not a Todo task.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"    public static void addInputFileTodo(ArrayList\u003cTask\u003e tasks, String[] task) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"        Task t \u003d new Todo(task[2]);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"deenliong"},"content":"        tasks.add(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"        if (task[1].equals(\"1\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"deenliong"},"content":"            t.setDone(true);","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"     * Loads the tasks from the default input file and adds them to the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"     * If the file does not exist, it will create a new file.","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"     * If the tasks from the input file is invalid, it will throw DukeException and will not be added to task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"    public static void loadInputFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"            File f \u003d new File(FILE_PATH);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"deenliong"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"deenliong"},"content":"                String[] task \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"deenliong"},"content":"                switch (task[0]) {","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"deenliong"},"content":"                case \"T\":","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"deenliong"},"content":"                    addInputFileTodo(tasks, task);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"deenliong"},"content":"                    break;","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"deenliong"},"content":"                case \"D\":","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"deenliong"},"content":"                    addInputFileDeadline(tasks, task);","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"deenliong"},"content":"                    break;","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"deenliong"},"content":"                case \"E\":","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"deenliong"},"content":"                    addInputFileEvent(tasks, task);","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"deenliong"},"content":"                    break;","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"deenliong"},"content":"                default:","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"deenliong"},"content":"                    break;","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"deenliong"},"content":"            s.close();","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"deenliong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"deenliong"},"content":"            createNewFile();","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"deenliong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"Task not added\");","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"deenliong"},"content":"     * Creates a new file if the file does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"deenliong"},"content":"    public static void createNewFile() {","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"deenliong"},"content":"        File dir \u003d new File(\"data\");","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"deenliong"},"content":"        dir.mkdir();","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"deenliong"},"content":"        File f \u003d new File(FILE_PATH);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"deenliong"},"content":"            f.createNewFile();","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"deenliong"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"deenliong"},"content":"            e1.printStackTrace();","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"deenliong"},"content":"    public static void clearCurrentFile() {","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"deenliong"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"deenliong"},"content":"            fw.write(\"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"deenliong"},"content":"            fw.close();","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"deenliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"deenliong"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"deenliong"},"content":"    public static void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"deenliong"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\", true); // create a FileWriter in append mode","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"deenliong"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"deenliong"},"content":"        fw.close();","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"deenliong"},"content":"     * Saves the tasks in the task list to the default input file.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"deenliong"},"content":"     * @param tasks the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"deenliong"},"content":"    public static void saveNewList(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"deenliong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"deenliong"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"deenliong"},"content":"                String boolValue \u003d Task.getBoolValue(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"deenliong"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"deenliong"},"content":"                    appendToFile(\"T | \" + boolValue + \" | \" + task.description + System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"deenliong"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"deenliong"},"content":"                    appendToFile(\"D | \" + boolValue + \" | \" + task.description + \" | \" + ((Deadline) task).by + System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"deenliong"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"deenliong"},"content":"                    appendToFile(\"E | \" + boolValue + \" | \" + task.description + \" | \" + ((Event) task).at + System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"deenliong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"deenliong"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":151}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":" * Deals with interactions with the user. ","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":" * It contains methods to print messages to the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"public class Ui {","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    private static final String HORIZONTAL_RULE \u003d \"\\t_____________________\\n\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    private static final String DUKE_LOGO \u003d \"\\t ____        _        \\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"            + \"\\t|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"            + \"\\t| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"            + \"\\t| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"            + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    public static void printIntroMessage(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"        System.out.println(DUKE_LOGO);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"                + \"\\n\\tHello! I\u0027m Duke, your personal task manager!\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"                + \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"                + HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tHere are the current tasks in your list:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tYou have no tasks in your list. Try adding some!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tEnter \u003chelp\u003e if you need some!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"    public static void printSuccessfulAdd(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t\" + \"added: \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidTodoInputExceptionMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! The todo input is invalid. Please follow this format.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: todo \u003creturn book\u003e\");","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidDeadlineInputExceptionMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your deadline input is invalid. Please follow this format.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: deadline \u003creturn book\u003e /by \u003c2020-12-12\u003e\");","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidEventInputExceptionMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your event input is incomplete. Please follow this format.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: event \u003cborrow book\u003e /at \u003clibrary\u003e\");","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"    public static void printMark(TaskList tasks, int taskId) {","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"deenliong"},"content":"        if (tasks.get(taskId).isDone) {","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tThis task is already marked!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"deenliong"},"content":"            tasks.get(taskId).setDone(tasks.get(taskId).isDone);","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\t\" + tasks.get(taskId).getStatusIcon() + tasks.get(taskId).getDescription());","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"deenliong"},"content":"    public static void printUnmark(TaskList tasks, int taskId) {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"deenliong"},"content":"        if (!tasks.get(taskId).isDone) {","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tThis task is already unmarked!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tOK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"deenliong"},"content":"            tasks.get(taskId).setDone(tasks.get(taskId).isDone);","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\t\" + tasks.get(taskId).getStatusIcon() + tasks.get(taskId).getDescription());","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"deenliong"},"content":"            System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"deenliong"},"content":"    public static void printTaskList(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"deenliong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tThere is no task!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"deenliong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"deenliong"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"deenliong"},"content":"    public static void printTotalNumberOfItems(TaskList tasks, int taskSize) {","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"deenliong"},"content":"        if (taskSize \u003d\u003d 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tYou have 1 task\");","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tYou have \" + taskSize + \" tasks!!!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"deenliong"},"content":"    public static void printUnknownCommand() {","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tHere are the commands that you can use:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t1. todo \u003cname_of_todo\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t2. deadline \u003cname_of_deadline\u003e /by \u003cyyyy-mm-dd\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t3. event \u003cname_of_event\u003e /at \u003clocation\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t4. list\");","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t5. mark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t6. unmark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t7. delete \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t8. find \u003ckeyword\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t9. total\");","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t10. bye\");","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"deenliong"},"content":"    public static void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"deenliong"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tThere is no matching task!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"deenliong"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"deenliong"},"content":"                System.out.println(\"\\t\" + (i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidFindDescriptionExceptionMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your find input is incomplete. Please follow this format.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: find \u003ckeyword\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidDeleteInputExceptionMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your number input is invalid or not found. Please follow this format and make sure item is present in list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: delete \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidMarkTaskInputExceptionMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your number input is invalid or not found. Please follow this format and make sure item is present in list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: mark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"deenliong"},"content":"    public static void showInvalidUnmarkTaskInputExceptionMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your number input is invalid or not found. Please follow this format and make sure item is present in list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tExample: unmark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"deenliong"},"content":"    public static void printHelp() {","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tHere are the commands that you can use:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t1. todo \u003cname_of_todo\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t2. deadline \u003cname_of_deadline\u003e /by \u003cyyyy-mm-dd\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t3. event \u003cname_of_event\u003e /at \u003clocation\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t4. list\");","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t5. mark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t6. unmark \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t7. delete \u003cexisting_task_number\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t8. find \u003ckeyword\u003e\");","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t9. total\");","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\t10. bye\");","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"deenliong"},"content":"    public static void showEmptyInputExceptionMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"deenliong"},"content":"        System.out.println(\"\\tOOPS!!! Your input cannot be empty!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"deenliong"},"content":"        System.out.println(HORIZONTAL_RULE);","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":206}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"bye\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public ByeCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        Storage.clearCurrentFile();","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        Storage.saveNewList(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"        return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":27}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    private String input;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    Command(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"    public String getInput() {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"        return input;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    // Execute the command, store the result in the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    public abstract TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"    // Check if the command is an exit command","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidDeadlineInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"deadline\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws InvalidDeadlineInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.addDeadline(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"delete\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.deleteTask(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":26}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidEventInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"event\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws InvalidEventInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.addEvent(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidEventInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"find\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws InvalidEventInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.findMatchingTasks(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":26}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"help\";","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    public HelpCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"        Ui.printHelp();","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"list\";","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"        Ui.printTaskList(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":25}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"mark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.markTask(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":26}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"todo\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.addTodo(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":25}},{"path":"src/main/java/duke/command/TotalCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"public class TotalCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"total\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    public TotalCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        TaskList.totalTask(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":27}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.command;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    public static final String KEYWORD \u003d \"unmark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        super(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public TaskList execute(TaskList tasks, Storage storage, Ui ui, String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        TaskList.unmarkTask(tasks, fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":25}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"    //no other code needed","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":8}},{"path":"src/main/java/duke/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public EmptyInputException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/EmptyNumberInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class EmptyNumberInputException extends DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public EmptyNumberInputException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/InvalidDeadlineInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class InvalidDeadlineInputException extends DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public InvalidDeadlineInputException(String message) {","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/InvalidEventInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class InvalidEventInputException extends DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public InvalidEventInputException(String message) {","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/InvalidTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class InvalidTaskDescriptionException extends DukeException {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public InvalidTaskDescriptionException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/exception/InvalidTodoInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.exception;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class InvalidTodoInputException extends DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public InvalidTodoInputException(String message) {","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"        super(message);","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":7}},{"path":"src/main/java/duke/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.EmptyInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"public class CommandParser extends Parser {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"     * Parses the command and returns the corresponding Command object.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"     * If the command is invalid, an InvalidCommandException is thrown.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The full command entered by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"     * @return The corresponding Command object.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"     * @throws InvalidCommandException If the command is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"     * @throws EmptyInputException","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"    public static Command parseCommand(String fullCommand) throws InvalidCommandException, EmptyInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        String keyword \u003d Parser.getKeyword(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"        case ByeCommand.KEYWORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"            return new duke.command.ByeCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"        case \"list\":","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"            return new duke.command.ListCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"        case \"total\":","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"            return new duke.command.TotalCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"            return new duke.command.DeleteCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"            return new duke.command.MarkCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"            return new duke.command.UnmarkCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"            return new duke.command.TodoCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"            return new duke.command.DeadlineCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"        case \"event\":","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"            return new duke.command.EventCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"        case \"find\":","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"            return new duke.command.FindCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"        case \"help\":","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"            return new duke.command.HelpCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"        default:","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"            throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":48}},{"path":"src/main/java/duke/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"public class DateTimeParser {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"    public static final List\u003cString\u003e MONTHS_LIST \u003d List.of(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\",","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"            \"sep\", \"oct\", \"nov\", \"dec\");","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    public static final String MONTH_REGEX \u003d \"(\" + String.join(\"|\", MONTHS_LIST) + \")\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"    public static final String YEAR_REGEX \u003d \"\\\\b(2\\\\d{3})\\\\b\";","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    public static final String DAY_REGEX \u003d \"\\\\b(\\\\d{1,2})\\\\b\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    private static final String HOURS_REGEX \u003d \"\\\\b(\\\\d{1,2})\\\\b\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    private static final String MINUTES_REGEX \u003d \"\\\\b(\\\\d{1,2})\\\\b\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    private static final String AMPM_REGEX \u003d \"(am|pm)\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"     * Parses a date string into a LocalDate object. The date string must be in the format of \"dd MMM yyyy\".","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"     * @param input The date string to be parsed","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"     * @return A LocalDate object, or null if the date cannot be parsed","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"    public static LocalDate parseDate(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"        String[] dateParts \u003d input.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"        String day \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"        String month \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"        String year \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"        for (String part : dateParts) {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"            if (part.matches(DAY_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"                day \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"            } else if (part.matches(MONTH_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"                month \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"            } else if (part.matches(YEAR_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"                year \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"        if (day !\u003d null \u0026\u0026 month !\u003d null \u0026\u0026 year !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"            date \u003d LocalDate.parse(year + \"-\" + month + \"-\" + day);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"        } else if (day !\u003d null \u0026\u0026 month !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"            date \u003d LocalDate.parse(LocalDate.now().getYear() + \"-\" + month + \"-\" + day);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"        return date;","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"     * Parses a date time string to a LocalTime object. The time string must contain","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"     * a \u0027:\u0027 between the hours and minutes or specify am/pm/AM/PM.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"     * @param input The time string to be parsed","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"     * @return A LocalTime object or null if the time string cannot be parsed","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"    public static LocalTime parseTime(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"        String[] timeParts \u003d input.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"        String hours \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"deenliong"},"content":"        String minutes \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"        String ampm \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"deenliong"},"content":"        for (String part : timeParts) {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"            if (part.matches(HOURS_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"                hours \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"            } else if (part.matches(MINUTES_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"                minutes \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"            } else if (part.matches(AMPM_REGEX)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"                ampm \u003d part;","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"        if (hours !\u003d null \u0026\u0026 minutes !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"            if (ampm !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"                if (ampm.equals(\"pm\") || ampm.equals(\"PM\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"deenliong"},"content":"                    hours \u003d String.valueOf(Integer.parseInt(hours) + 12);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"deenliong"},"content":"            time \u003d LocalTime.parse(hours + \":\" + minutes);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"deenliong"},"content":"        return time;","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":80}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.exception.EmptyInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.exception.EmptyNumberInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidDeadlineInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidEventInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidTaskDescriptionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":" * Class contains methods to parse the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"public class Parser {","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    public static String getKeyword(String fullCommand) throws EmptyInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"        String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"            throw new EmptyInputException(\"Input cannot be empty!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"        return words[0];","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    public static String getDescription(String fullCommand) throws InvalidTaskDescriptionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"        String[] breakLine \u003d fullCommand.trim().split(\" \", 2);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"        if (breakLine.length \u003d\u003d 1 || breakLine[1].isBlank()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"            throw new InvalidTaskDescriptionException(\"Please enter a valid todo description\");","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"        return breakLine[1];","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"    // This is used only for Deadline and Event; to parse the description into name and the date/time.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"    public static String removeCommand(String input) {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"        return words[1];","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"     * Firstly, remove the keyword from the input.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"     * Then, split the description into two parts, the name and the date.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"     * If the name or date is of an invalid format, throw an exception.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input. ","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"     * @return Returns an array of the name and date of the deadline.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"     * @throws InvalidDeadlineInputException If the name or date is of an invalid format or empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"    public static String[] parseDeadlineDescription(String fullCommand) throws InvalidDeadlineInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"        String description \u003d removeCommand(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"        String[] split \u003d description.split(\" /by \");","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"        if (split.length !\u003d 2 || split[0].isBlank() || split[0].isEmpty() || split[1].isBlank() || split[1].isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"            throw new InvalidDeadlineInputException(\"Please enter a valid deadline\");","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"        return split;","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"     * Firstly, remove the keyword from the input.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"     * Then, split the description into two parts, the name and the event detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"     * If the name or event detail is of an invalid format, throw an exception.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"     * @return Returns an array of the name and date of the event.","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"     * @throws InvalidEventInputException If the name or event detail is of an invalid format or empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"    public static String[] parseEventDescription(String input) throws InvalidEventInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"deenliong"},"content":"        String description \u003d removeCommand(input);","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"        String[] split \u003d description.split(\" /at \");","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"        if (split.length !\u003d 2 || split[0].isBlank() || split[0].isEmpty() || split[1].isBlank() || split[1].isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"            throw new InvalidEventInputException(\"Please enter a valid event\");","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"        return split;","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"    // This is used only for Done and Delete; to parse the number of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"    public static int getTaskId(String input) throws EmptyNumberInputException {","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"        int inputId \u003d Integer.parseInt(input.trim().split(\" \")[1]);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"        return (inputId - 1);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":74}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.task;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"    public String by;","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"        super(description);","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    public String toString() {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.task;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"    public String at;","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"        super(description);","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    public String toString() {","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.task;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"    public String description;","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"    public boolean isDone;","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"        return isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"        return description;","lastModifiedDate":"2022-09-14"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-09-14"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"        this.isDone \u003d !done;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    // @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"    public String toString() {","lastModifiedDate":"2022-09-14"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2022-09-14"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-09-22"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"        return isDone;","lastModifiedDate":"2022-09-22"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-22"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"     * Returns the boolean value of the task being done.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"     * This value will be used to write to the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"     * @param task The task to be checked.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"     * @return Returns the value for the boolean value of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"    public static String getBoolValue(Task task) {","lastModifiedDate":"2022-09-22"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"        String boolValue;","lastModifiedDate":"2022-09-22"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"        if (task.isDone()) {","lastModifiedDate":"2022-09-22"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"            boolValue \u003d \"1\";","lastModifiedDate":"2022-09-22"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"        } else {","lastModifiedDate":"2022-09-22"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"            boolValue \u003d \"0\";","lastModifiedDate":"2022-09-22"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-22"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"        return boolValue;","lastModifiedDate":"2022-09-22"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-22"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"    public String getName() {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"        return description;","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":52}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.task;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"import duke.exception.EmptyNumberInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidDeadlineInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidEventInputException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"import duke.exception.InvalidTaskDescriptionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"import static duke.Ui.*;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":" * Class contains methods to deal with any operations related to the task list and contains the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"public class TaskList {","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"deenliong"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"deenliong"},"content":"     * Initialises the TaskList object.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"deenliong"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"deenliong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"deenliong"},"content":"        Storage.loadInputFile(this.tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"deenliong"},"content":"     * Adds a Todo task to the task list from the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"deenliong"},"content":"    public static void addTodo(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"deenliong"},"content":"            String description;","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"deenliong"},"content":"            description \u003d Parser.getDescription(fullCommand).trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"deenliong"},"content":"            Task t \u003d new Todo(description);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"deenliong"},"content":"            tasks.addTask(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"deenliong"},"content":"            printSuccessfulAdd(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"deenliong"},"content":"        } catch (InvalidTaskDescriptionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"deenliong"},"content":"            showInvalidTodoInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"deenliong"},"content":"     * Adds a Deadline task to the task list from the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"deenliong"},"content":"    public static void addDeadline(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"deenliong"},"content":"            String[] description \u003d Parser.parseDeadlineDescription(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"deenliong"},"content":"            String deadlineName \u003d description[0].trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"deenliong"},"content":"            String deadlineDetails \u003d description[1].trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"deenliong"},"content":"            Task t \u003d new Deadline(deadlineName, deadlineDetails);","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"deenliong"},"content":"            tasks.addTask(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"deenliong"},"content":"            printSuccessfulAdd(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"deenliong"},"content":"        } catch (InvalidDeadlineInputException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"deenliong"},"content":"            showInvalidDeadlineInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"deenliong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"deenliong"},"content":"            showInvalidDeadlineInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"deenliong"},"content":"     * Adds an Event task to the task list from the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"deenliong"},"content":"    public static void addEvent(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"deenliong"},"content":"            String[] description \u003d Parser.parseEventDescription(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"deenliong"},"content":"            String eventName \u003d description[0].trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"deenliong"},"content":"            String eventDetails \u003d description[1].trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"deenliong"},"content":"            Task t \u003d new Event(eventName, eventDetails);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"deenliong"},"content":"            tasks.addTask(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"deenliong"},"content":"            printSuccessfulAdd(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"deenliong"},"content":"        } catch (InvalidEventInputException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"deenliong"},"content":"            showInvalidEventInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"deenliong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"deenliong"},"content":"            showInvalidEventInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"deenliong"},"content":"     * Looks through the task list and prints out all the tasks that contain the keyword.","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"deenliong"},"content":"    public static void findMatchingTasks(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"deenliong"},"content":"            String description \u003d Parser.getDescription(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"deenliong"},"content":"            String[] keywords \u003d description.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"deenliong"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"deenliong"},"content":"            for (Task task : tasks.tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"deenliong"},"content":"                for (String keyword : keywords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"deenliong"},"content":"                    if (task.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"deenliong"},"content":"                        matchingTasks.add(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"deenliong"},"content":"                        break;","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"deenliong"},"content":"                    }","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"deenliong"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"deenliong"},"content":"            printMatchingTasks(matchingTasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"deenliong"},"content":"        } catch (InvalidTaskDescriptionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"deenliong"},"content":"            showInvalidFindDescriptionExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"deenliong"},"content":"     * Delete a task that is specified by the user. The task is specified by the index of the task in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"deenliong"},"content":"    public static void deleteTask(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"deenliong"},"content":"            int taskId \u003d Parser.getTaskId(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"deenliong"},"content":"            Task taskToBeDeleted \u003d tasks.get(taskId);","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"deenliong"},"content":"            int taskSize \u003d tasks.size() - 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\t_____________________\");","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\t  \" + taskToBeDeleted);","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"deenliong"},"content":"            if (taskSize \u003d\u003d 1 || taskSize \u003d\u003d 0) {","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"deenliong"},"content":"                System.out.println(\"\\tNow you have \" + taskSize + \" task in the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"deenliong"},"content":"            } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"deenliong"},"content":"                System.out.println(\"\\tNow you have \" + taskSize + \" tasks in the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"deenliong"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"deenliong"},"content":"            System.out.println(\"\\t_____________________\");","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"deenliong"},"content":"            tasks.removeTask(taskId);","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"deenliong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"deenliong"},"content":"            showInvalidDeleteInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"deenliong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"deenliong"},"content":"            showInvalidDeleteInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"deenliong"},"content":"        } catch (EmptyNumberInputException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"deenliong"},"content":"            showInvalidDeleteInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"deenliong"},"content":"     * Marks a task as done. The task is specified by the index of the task in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"deenliong"},"content":"    public static void markTask(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"deenliong"},"content":"            int taskId \u003d Parser.getTaskId(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"deenliong"},"content":"            printMark(tasks, taskId);","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"deenliong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"deenliong"},"content":"            showInvalidMarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"deenliong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"deenliong"},"content":"            showInvalidMarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"deenliong"},"content":"        } catch (EmptyNumberInputException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"deenliong"},"content":"            showInvalidMarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"deenliong"},"content":"     * Unmarks a task as undone. The task is specified by the index of the task in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"deenliong"},"content":"    public static void unmarkTask(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"deenliong"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"deenliong"},"content":"            int taskId \u003d Parser.getTaskId(fullCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"deenliong"},"content":"            printUnmark(tasks, taskId);","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"deenliong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"deenliong"},"content":"            showInvalidUnmarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"deenliong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"deenliong"},"content":"            showInvalidUnmarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"deenliong"},"content":"        } catch (EmptyNumberInputException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"deenliong"},"content":"            showInvalidUnmarkTaskInputExceptionMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"deenliong"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"deenliong"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"deenliong"},"content":"     * Prints out the total number of tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"deenliong"},"content":"     * @param tasks The task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"deenliong"},"content":"     * @param fullCommand The entire user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"deenliong"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"deenliong"},"content":"    public static void totalTask(TaskList tasks, String fullCommand) {","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"deenliong"},"content":"        int taskSize \u003d tasks.size();","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"deenliong"},"content":"        printTotalNumberOfItems(tasks, taskSize);","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"deenliong"},"content":"    // get size of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"deenliong"},"content":"    public int size() {","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"deenliong"},"content":"        return tasks.size();","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"deenliong"},"content":"    // get task from tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"deenliong"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"deenliong"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"deenliong"},"content":"    // add task to tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"deenliong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"deenliong"},"content":"        tasks.add(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"deenliong"},"content":"    // remove task from tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"deenliong"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"deenliong"},"content":"        tasks.remove(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"deenliong":205}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"package duke.task;","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"        super(description);","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"    public String toString() {","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":14}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-09-22"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"D | 0 | return book  |  Sunday","lastModifiedDate":"2022-09-22"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"E | 0 | project meeting  |  Mon 2-4pm","lastModifiedDate":"2022-09-22"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"D | 0 | do homework  |  no idea :-p","lastModifiedDate":"2022-09-22"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-09-22"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"D | 0 | return book  |  Sunday","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"E | 0 | project meeting  |  Mon 2-4pm","lastModifiedDate":"2022-09-22"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"D | 0 | do homework  |  no idea :-p","lastModifiedDate":"2022-09-22"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"D | 0 | do homework | no idea :-p","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"T | 0 | borrow book","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"D | 0 | return book | Sunday","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"D | 0 | do homework | no idea :-p","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"deenliong":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"deenliong"},"content":"todo borrow book","lastModifiedDate":"2022-09-14"},{"lineNumber":3,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"deenliong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"deenliong"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-14"},{"lineNumber":6,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":7,"author":{"gitId":"deenliong"},"content":"mark 1","lastModifiedDate":"2022-09-14"},{"lineNumber":8,"author":{"gitId":"deenliong"},"content":"mark 2","lastModifiedDate":"2022-09-14"},{"lineNumber":9,"author":{"gitId":"deenliong"},"content":"mark 3","lastModifiedDate":"2022-09-14"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"deenliong"},"content":"unmark 1","lastModifiedDate":"2022-09-14"},{"lineNumber":12,"author":{"gitId":"deenliong"},"content":"unmark 2","lastModifiedDate":"2022-09-14"},{"lineNumber":13,"author":{"gitId":"deenliong"},"content":"unmark 3","lastModifiedDate":"2022-09-14"},{"lineNumber":14,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":15,"author":{"gitId":"deenliong"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-09-14"},{"lineNumber":16,"author":{"gitId":"deenliong"},"content":"list","lastModifiedDate":"2022-09-14"},{"lineNumber":17,"author":{"gitId":"deenliong"},"content":"bye","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"deenliong":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"deenliong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java","lastModifiedDate":"2022-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"deenliong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"deenliong":2}}]
