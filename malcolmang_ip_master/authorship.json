[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"import UI.UserInterface;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"import tasks.tasktypes.DeadlineTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import tasks.tasktypes.EventTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"import tasks.tasktypes.ToDoTask;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"import tasks.TaskList;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-08-18"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":"    /** Command list to check against */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"    private static final String INPUT_TERMINATE \u003d \"bye\";","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"    private static final String INPUT_LIST \u003d \"list\";","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"    private static final String INPUT_MARK \u003d \"mark\";","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"    private static final String INPUT_UNMARK \u003d \"unmark\";","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    public static final String INPUT_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"    public static final String INPUT_EVENT \u003d \"event\";","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"    /** tasks.TaskList class that contains all items */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"    private static final TaskList TASK_LIST \u003d new TaskList();","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"        greet();","lastModifiedDate":"2022-08-21"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"        programBody();","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"        exit();","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"     * Body of the program. Runs in a loop until terminated.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"    public static void programBody() {","lastModifiedDate":"2022-08-21"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"        while (true) {","lastModifiedDate":"2022-08-21"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"            String input \u003d UserInterface.getInput();","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"            if (isTerminatingInput(input)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"                break;","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"            } else if (isListInput(input)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"                UserInterface.print(TASK_LIST.toString());","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"            } else if (isMarkInput(input)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"                UserInterface.print(\"Marked task \\\"\"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"                        + TASK_LIST.getTextOfItem(markItem(input) - 1)","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"                        + \"\\\" as done.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"            } else if (isUnmarkInput(input)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"                UserInterface.print(\"Marked task \\\"\"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"                        + TASK_LIST.getTextOfItem(unmarkItem(input) - 1)","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"                        + \"\\\" as not yet done.\");","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"malcolmang"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"malcolmang"},"content":"                UserInterface.print(\"Added \\\"\"","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"malcolmang"},"content":"                        + TASK_LIST.getTextOfItem(addItem(input))","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"malcolmang"},"content":"                        + \"\\\" to your list.\\nThere \"+ (TASK_LIST.getItemCount() \u003d\u003d 1 ? \"is\" : \"are\")","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"malcolmang"},"content":"                        + \" now \" + TASK_LIST.getItemCount() + \" task\"","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"malcolmang"},"content":"                        + (TASK_LIST.getItemCount() \u003d\u003d 1 ? \"\" : \"s\") + \".\");","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"malcolmang"},"content":"     * Add type of item, depending on command. Defaults to {@link ToDoTask} item type.","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to check for command words","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"malcolmang"},"content":"     * @return \u003cb\u003e0-based\u003c/b\u003e index of added item.","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"malcolmang"},"content":"    private static int addItem(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"malcolmang"},"content":"        if (stringContains(input, INPUT_DEADLINE)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"malcolmang"},"content":"            return TASK_LIST.addItem(new DeadlineTask(input.split(\" \", 2)[1]));","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"malcolmang"},"content":"        } else if (stringContains(input, INPUT_EVENT)) {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"malcolmang"},"content":"            return TASK_LIST.addItem(new EventTask(input.split(\" \", 2)[1]));","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"malcolmang"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"malcolmang"},"content":"            return TASK_LIST.addItem(new ToDoTask(input));","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"malcolmang"},"content":"     * Checks if the keyword {@link Duke#INPUT_TERMINATE} is present at front of input string","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to check","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"malcolmang"},"content":"     * @return boolean, true or false","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"malcolmang"},"content":"    private static boolean isTerminatingInput(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"malcolmang"},"content":"        return input.equalsIgnoreCase(INPUT_TERMINATE);","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"malcolmang"},"content":"     * Checks if the keyword {@link Duke#INPUT_LIST} is present at front of input string","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to check","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"malcolmang"},"content":"     * @return boolean, true or false","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"malcolmang"},"content":"    private static boolean isListInput(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"malcolmang"},"content":"        return input.equalsIgnoreCase(INPUT_LIST);","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"malcolmang"},"content":"     * Checks if the keyword {@link Duke#INPUT_MARK} is present at front of input string","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to check","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"malcolmang"},"content":"     * @return boolean, true or false","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"malcolmang"},"content":"    private static boolean isMarkInput(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"malcolmang"},"content":"        return stringContains(input, INPUT_MARK);","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"malcolmang"},"content":"     * Marks item in To-Do list as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"malcolmang"},"content":"     * \u003cb\u003eNOTE: Operates on 1-based indexing logic\u003c/b\u003e, but converts it","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"malcolmang"},"content":"     * to 0-based indexing for {@link TaskList} class","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to find index","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"malcolmang"},"content":"     * @return index of item \u003cb\u003e(1-based index)\u003c/b\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"malcolmang"},"content":"    private static int markItem(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"malcolmang"},"content":"        int itemIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":109,"author":{"gitId":"malcolmang"},"content":"        TASK_LIST.markItem(itemIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"malcolmang"},"content":"        return itemIndex + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":112,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"malcolmang"},"content":"     * Checks if the keyword {@link Duke#INPUT_UNMARK} is present at front of input string","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to check","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"malcolmang"},"content":"     * @return boolean, true or false","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"malcolmang"},"content":"    private static boolean isUnmarkInput(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"malcolmang"},"content":"        return stringContains(input, INPUT_UNMARK);","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":122,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"malcolmang"},"content":"     * Removes mark on item in To-Do list, marking it as undone.","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"malcolmang"},"content":"     * \u003cb\u003eNOTE: Operates on 1-based indexing logic\u003c/b\u003e, but converts it","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"malcolmang"},"content":"     * to 0-based indexing for {@link TaskList} class","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"malcolmang"},"content":"     * @param input input string to find index","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"malcolmang"},"content":"     * @return index of item \u003cb\u003e(1-based index)\u003c/b\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"malcolmang"},"content":"    private static int unmarkItem(String input) {","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"malcolmang"},"content":"        int itemIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"malcolmang"},"content":"        TASK_LIST.unmarkItem(itemIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"malcolmang"},"content":"        return itemIndex + 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":136,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":137,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"malcolmang"},"content":"     * Prints a greeting for when the program is run","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"malcolmang"},"content":"    private static void greet() {","lastModifiedDate":"2022-08-21"},{"lineNumber":141,"author":{"gitId":"malcolmang"},"content":"        UserInterface.print(\"Good morning!\\nWhat would you like to do today?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":143,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":144,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"malcolmang"},"content":"     * Prints a goodbye message for when the program is terminated via user commands","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"malcolmang"},"content":"    private static void exit() {","lastModifiedDate":"2022-08-21"},{"lineNumber":148,"author":{"gitId":"malcolmang"},"content":"        UserInterface.print(\"Alright, see you around then!\");","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":150,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":151,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"malcolmang"},"content":"     * Check if the given input contains a substring at the start","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"malcolmang"},"content":"     * @param input     input to be checked","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"malcolmang"},"content":"     * @param substring substring to be checked if it is contained in input","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"malcolmang"},"content":"     * @return boolean true or false","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"malcolmang"},"content":"    private static boolean stringContains(String input, String substring) {","lastModifiedDate":"2022-08-21"},{"lineNumber":159,"author":{"gitId":"malcolmang"},"content":"        return input.split(\" \")[0].equalsIgnoreCase(substring);","lastModifiedDate":"2022-08-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-08-15"}],"authorContributionMap":{"malcolmang":157,"-":4}},{"path":"src/main/java/UI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package UI;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" * UI.DialogBox class to indent and wrap a given snippet of text and enclose a box around it.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":" * Variable height depending on size of the given string of text.","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"public class DialogBox {","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"    /** Character to use for each indent */","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"    private static final char INDENT_CHARACTER \u003d \u0027 \u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"    /** Character to use for the top and bottom line in box */","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"    private static final char LINE_HORIZONTAL_CHARACTER \u003d \u0027\u003d\u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"    /** Character to use for the left and right wall of box */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"    private static final char LINE_VERTICAL_CHARACTER \u003d \u0027|\u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"    /** Spacing between text and horizontal walls of dialog box */","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"    private static final int HORIZONTAL_PADDING \u003d 3;","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"    /** Size of each indentation */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"    private static final int INDENT_SIZE \u003d 4;","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"    /** Maximum row width. Based on calculations done with desired console width, horizontal position and padding */","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"    private static int MAX_ROW_WIDTH;","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"    /** Text of the box expressed as a list of strings */","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"    private final List\u003cString\u003e textBoxRows;","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"    /** Height of the dialog box */","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"    private int height;","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"    /** Boolean used in switching logic for indentations between line breaks in text */","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"    private boolean isFirstLine \u003d true;","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"     * Constructor for UI.DialogBox class. Calculates the max possible width of the box","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"     * and formats text to be indented, wrapped and then boxed in with lines.","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"     * @param text                  text of the box to be formatted","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"malcolmang"},"content":"     * @param consoleWidth          maximum width of the console","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"malcolmang"},"content":"     * @param boxHorizontalPosition absolute horizontal position the left of the box should align with","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"malcolmang"},"content":"    public DialogBox(String text, int consoleWidth, int boxHorizontalPosition) {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"malcolmang"},"content":"        MAX_ROW_WIDTH \u003d consoleWidth - boxHorizontalPosition - HORIZONTAL_PADDING * 2 - 2;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"malcolmang"},"content":"        textBoxRows \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"malcolmang"},"content":"        makeBox(indentAndWrapText(text));","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"malcolmang"},"content":"     * Method for generating indents the size of a given integer.","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"malcolmang"},"content":"     * @param indentSize desired width of the indent","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"malcolmang"},"content":"     * @return an indent string of given size. Empty string if {@code indentSize} \u003d 0","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"malcolmang"},"content":"    public static String generateIndent(int indentSize, char indentCharacter) {","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"malcolmang"},"content":"        String indent \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"malcolmang"},"content":"        for (int i \u003d 0; i \u003c indentSize; i++) {","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"malcolmang"},"content":"            indent +\u003d indentCharacter;","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"malcolmang"},"content":"        return indent;","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"malcolmang"},"content":"     * Right-aligns text with reference to text box width by adding spaces","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"malcolmang"},"content":"     * to the front.","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"malcolmang"},"content":"     * @param text string of text to be aligned","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"malcolmang"},"content":"     * @return aligned string, or nothing if text is empty","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"malcolmang"},"content":"    public static String rightAlign(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"malcolmang"},"content":"        if (text.isEmpty()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"malcolmang"},"content":"            // Nothing to align if text is empty.","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"malcolmang"},"content":"            // Avoids an extra line break","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"malcolmang"},"content":"            return \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"malcolmang"},"content":"        } else if (text.length() \u003e\u003d MAX_ROW_WIDTH) {","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"malcolmang"},"content":"            // No need to align (or add a line break) if","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"malcolmang"},"content":"            //text is longer than the max width","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"malcolmang"},"content":"            return \" \" + text;","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"malcolmang"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"malcolmang"},"content":"            return \"\\n\" + generateIndent(MAX_ROW_WIDTH - text.length(), \u0027 \u0027)","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"malcolmang"},"content":"                    + text;","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"malcolmang"},"content":"     * Indents and wraps text to be less wide or equal to {@link DialogBox#MAX_ROW_WIDTH}","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"malcolmang"},"content":"     * @param text text to be indented","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"malcolmang"},"content":"     * @return indented and wrapped text expressed as a list of strings","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"malcolmang"},"content":"    private List\u003cString\u003e indentAndWrapText(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"malcolmang"},"content":"        List\u003cString\u003e textRows \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"malcolmang"},"content":"        for (String row : text.split(\"\\n\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"malcolmang"},"content":"            textRows.addAll(indentAndWrapItem(row));","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"malcolmang"},"content":"        return textRows;","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"malcolmang"},"content":"     * Indents and wraps each individual row of text to be less wide","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"malcolmang"},"content":"     * or equal to {@link DialogBox#MAX_ROW_WIDTH}","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"malcolmang"},"content":"     * @param item A string of text separated by line breaks","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"malcolmang"},"content":"     * @return indented and wrapped text for each item expressed as a list of strings","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"malcolmang"},"content":"    private List\u003cString\u003e indentAndWrapItem(String item) {","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"malcolmang"},"content":"        isFirstLine \u003d true;","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"malcolmang"},"content":"        List\u003cString\u003e textRowsIndividual \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"malcolmang"},"content":"        if (item.length() \u003c\u003d MAX_ROW_WIDTH) {","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"malcolmang"},"content":"            // if entire item is shorter or equal to max length,","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"malcolmang"},"content":"            // just return the entire row","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"malcolmang"},"content":"            textRowsIndividual.add(item);","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"malcolmang"},"content":"            return textRowsIndividual;","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"malcolmang"},"content":"        } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"malcolmang"},"content":"            int indentLength \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"malcolmang"},"content":"            int maxLength \u003d MAX_ROW_WIDTH;","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"malcolmang"},"content":"            String bufferString \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"malcolmang"},"content":"            // Add words to a single buffer string until the","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"malcolmang"},"content":"            // string is too long, then add entire buffer string","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"malcolmang"},"content":"            // as a row and repeat.","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"malcolmang"},"content":"            for (String word : item.split(\" \")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"malcolmang"},"content":"                if (word.length() \u003e maxLength) {","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"malcolmang"},"content":"                    // if word is longer than max length","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"malcolmang"},"content":"                    // split it into multiple chunks","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"malcolmang"},"content":"                    bufferString \u003d splitWord(word, textRowsIndividual, maxLength, bufferString);","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"malcolmang"},"content":"                    isFirstLine \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"malcolmang"},"content":"                    indentLength \u003d INDENT_SIZE;","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"malcolmang"},"content":"                    maxLength \u003d MAX_ROW_WIDTH - INDENT_SIZE;","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"malcolmang"},"content":"                    continue;","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"malcolmang"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"malcolmang"},"content":"                if (bufferString.length() + word.length() \u003e maxLength) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"malcolmang"},"content":"                    // if length of buffer string + new word exceeds max length","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"malcolmang"},"content":"                    // add buffer string as a new row and reset buffer string","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"malcolmang"},"content":"                    textRowsIndividual.add(generateIndent(indentLength, INDENT_CHARACTER) + bufferString.trim());","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"malcolmang"},"content":"                    bufferString \u003d \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"malcolmang"},"content":"                    isFirstLine \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"malcolmang"},"content":"                    indentLength \u003d INDENT_SIZE;","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"malcolmang"},"content":"                    maxLength \u003d MAX_ROW_WIDTH - INDENT_SIZE;","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"malcolmang"},"content":"                }","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"malcolmang"},"content":"                bufferString +\u003d word + \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"malcolmang"},"content":"            //append any remaining string as the last row","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"malcolmang"},"content":"            textRowsIndividual.add(generateIndent(indentLength, INDENT_CHARACTER) + bufferString.trim());","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"malcolmang"},"content":"        return textRowsIndividual;","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"malcolmang"},"content":"     * Splits a word that is too long for the maximum length into chunks that","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"malcolmang"},"content":"     * can be indented and then added to the {@code textRows} list as rows","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"malcolmang"},"content":"     * @param word         Text to be broken up into multiple rows","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"malcolmang"},"content":"     * @param textRows     List that the rows should be appended to","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"malcolmang"},"content":"     * @param maxLength    Maximum length that each row should wrap to","lastModifiedDate":"2022-08-27"},{"lineNumber":161,"author":{"gitId":"malcolmang"},"content":"     * @param bufferString The string to append the word to","lastModifiedDate":"2022-08-27"},{"lineNumber":162,"author":{"gitId":"malcolmang"},"content":"     * @return Any remaining string after the wrapping takes place","lastModifiedDate":"2022-08-27"},{"lineNumber":163,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":164,"author":{"gitId":"malcolmang"},"content":"    private String splitWord(String word, List\u003cString\u003e textRows, int maxLength, String bufferString) {","lastModifiedDate":"2022-08-27"},{"lineNumber":165,"author":{"gitId":"malcolmang"},"content":"        int index \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":166,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":167,"author":{"gitId":"malcolmang"},"content":"        // Add word to bufferString, so they get wrapped together as a single line of text","lastModifiedDate":"2022-08-27"},{"lineNumber":168,"author":{"gitId":"malcolmang"},"content":"        word \u003d bufferString + word;","lastModifiedDate":"2022-08-27"},{"lineNumber":169,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":170,"author":{"gitId":"malcolmang"},"content":"        if (isFirstLine) {","lastModifiedDate":"2022-08-27"},{"lineNumber":171,"author":{"gitId":"malcolmang"},"content":"            // if current line is the first in item, no indentation for the first row.","lastModifiedDate":"2022-08-27"},{"lineNumber":172,"author":{"gitId":"malcolmang"},"content":"            textRows.add(word.substring(index, maxLength));","lastModifiedDate":"2022-08-27"},{"lineNumber":173,"author":{"gitId":"malcolmang"},"content":"            index \u003d maxLength;","lastModifiedDate":"2022-08-27"},{"lineNumber":174,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":175,"author":{"gitId":"malcolmang"},"content":"            // all subsequent lines should have indentation","lastModifiedDate":"2022-08-27"},{"lineNumber":176,"author":{"gitId":"malcolmang"},"content":"            maxLength -\u003d INDENT_SIZE;","lastModifiedDate":"2022-08-27"},{"lineNumber":177,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":178,"author":{"gitId":"malcolmang"},"content":"        for (; index \u003c word.length(); index +\u003d maxLength) {","lastModifiedDate":"2022-08-27"},{"lineNumber":179,"author":{"gitId":"malcolmang"},"content":"            // break up word into indented chunks","lastModifiedDate":"2022-08-27"},{"lineNumber":180,"author":{"gitId":"malcolmang"},"content":"            if (index + maxLength \u003e word.length()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":181,"author":{"gitId":"malcolmang"},"content":"                return generateIndent(INDENT_SIZE, INDENT_CHARACTER) + word.substring(index) + \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":182,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":183,"author":{"gitId":"malcolmang"},"content":"            textRows.add(generateIndent(INDENT_SIZE, INDENT_CHARACTER) + word.substring(index, index + maxLength));","lastModifiedDate":"2022-08-27"},{"lineNumber":184,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":185,"author":{"gitId":"malcolmang"},"content":"        return word.substring(index);","lastModifiedDate":"2022-08-27"},{"lineNumber":186,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":187,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":188,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":189,"author":{"gitId":"malcolmang"},"content":"     * Make an ASCII box to enclose (indented, wrapped) text.","lastModifiedDate":"2022-08-27"},{"lineNumber":190,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":191,"author":{"gitId":"malcolmang"},"content":"     * @param textRows wrapped text to modify and add ASCII box to.","lastModifiedDate":"2022-08-27"},{"lineNumber":192,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":193,"author":{"gitId":"malcolmang"},"content":"    private void makeBox(List\u003cString\u003e textRows) {","lastModifiedDate":"2022-08-27"},{"lineNumber":194,"author":{"gitId":"malcolmang"},"content":"        int width \u003d MAX_ROW_WIDTH + HORIZONTAL_PADDING * 2;","lastModifiedDate":"2022-08-27"},{"lineNumber":195,"author":{"gitId":"malcolmang"},"content":"        height \u003d textRows.size() + 2;","lastModifiedDate":"2022-08-27"},{"lineNumber":196,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":197,"author":{"gitId":"malcolmang"},"content":"        // Vertical lines at the side of the text","lastModifiedDate":"2022-08-27"},{"lineNumber":198,"author":{"gitId":"malcolmang"},"content":"        for (String row : textRows) {","lastModifiedDate":"2022-08-27"},{"lineNumber":199,"author":{"gitId":"malcolmang"},"content":"            textBoxRows.add(\" \" + LINE_VERTICAL_CHARACTER + generateIndent(HORIZONTAL_PADDING, INDENT_CHARACTER)","lastModifiedDate":"2022-08-27"},{"lineNumber":200,"author":{"gitId":"malcolmang"},"content":"                    + row + generateIndent(width - row.length() - HORIZONTAL_PADDING, \u0027 \u0027) + LINE_VERTICAL_CHARACTER);","lastModifiedDate":"2022-08-27"},{"lineNumber":201,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":202,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":203,"author":{"gitId":"malcolmang"},"content":"        // Horizontal lines to close the box","lastModifiedDate":"2022-08-27"},{"lineNumber":204,"author":{"gitId":"malcolmang"},"content":"        textBoxRows.add(0, \"  \" + generateIndent(width, LINE_HORIZONTAL_CHARACTER));","lastModifiedDate":"2022-08-27"},{"lineNumber":205,"author":{"gitId":"malcolmang"},"content":"        textBoxRows.add(\"/ \" + generateIndent(width, LINE_HORIZONTAL_CHARACTER));","lastModifiedDate":"2022-08-27"},{"lineNumber":206,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":207,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":208,"author":{"gitId":"malcolmang"},"content":"    public int getHeight() {","lastModifiedDate":"2022-08-27"},{"lineNumber":209,"author":{"gitId":"malcolmang"},"content":"        return height;","lastModifiedDate":"2022-08-27"},{"lineNumber":210,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":211,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":212,"author":{"gitId":"malcolmang"},"content":"    public List\u003cString\u003e getTextBox() {","lastModifiedDate":"2022-08-27"},{"lineNumber":213,"author":{"gitId":"malcolmang"},"content":"        return textBoxRows;","lastModifiedDate":"2022-08-27"},{"lineNumber":214,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":215,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":215}},{"path":"src/main/java/UI/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package UI;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":" * Class to control the user interface (getting input from user, displaying prompts etc.","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":" * Displays a box of text overlaid on some ASCII art.","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"public class UserInterface {","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"     * Maximum width of the console the application will run in.","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"     * Default: 80","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"    private static final int MAX_WIDTH \u003d 80;","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"     * Horizontal position that the box of text will be positioned at.","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"     * (Left-align)","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"     * Default: 46","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"    private static final int TEXTBOX_HORIZONTAL_POSITION \u003d 46;","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"     * Vertical position that the box of text will be positioned at.","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"     * (Bottom-align)","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"     * Default: 20","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"    private static final int TEXTBOX_VERTICAL_POSITION \u003d 20;","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"    /** Scanner used to read input. */","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"    private static final Scanner READER \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"    private static final String ASCII_ART \u003d","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"            //@@author Chris Johnson-reused","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"            //ASCII Art reused from https://asciiart.website/index.php?art\u003dpeople/chris%20johnson","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"            //with minor modifications","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"            \"                   ,X#N#####;.                      \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"            \"                p####Q#@@@##8##s;                   \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"malcolmang"},"content":"            \"             p#         #   @ ####QNp@.,            \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"malcolmang"},"content":"            \"           ,#     88bb## # @     #####@@            \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"malcolmang"},"content":"            \"          p##@ @8\u0027      ` ^\\\"\\\"\\\"T\\\"T8b88###            \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"malcolmang"},"content":"            \"         b#  ##8*                      ##           \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"malcolmang"},"content":"            \"         ###@#8G                    .: b#@          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"malcolmang"},"content":"            \"         ###$vfG                    GG b##          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"malcolmang"},"content":"            \"        bN#@$Sl*                   ^GG:S##          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"malcolmang"},"content":"            \"        #NQGS\\\"                     GGGGN#G          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"malcolmang"},"content":"            \"        S##$!*  ppS####s;,         ^Gpll@Q          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"malcolmang"},"content":"            \"        ###9   `\u0027oG\\\\\\\"###89   pQ#####s.Gb#G          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"malcolmang"},"content":"            \"        G#QGo:* Tb7778bo\\\"*  p@5#@@Qs|#Gb@#          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"malcolmang"},"content":"            \"        |GG!       \u0027`  \u0027 *  bb#G ^b#@3{b#\\\\          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"malcolmang"},"content":"            \"        /pGG!:              G^       CG#@@          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"malcolmang"},"content":"            \"         ^GGG      v? ;     p9$,     pG#@           \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"malcolmang"},"content":"            \"          f: .  pl  GG+b#;pN#8lGG,  pS@G\u0027           \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"malcolmang"},"content":"            \"           GG * b\\\"##ss,  ^\\\"^GGQSGblGGl@             \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"malcolmang"},"content":"            \"           GG:C! .  Go., ^ ^D#57^7 #1               \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"malcolmang"},"content":"            \"            lG G)   ;     GGGQlG\\\"p#@                \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"malcolmang"},"content":"            \"          NGb#j    + ^G;GGpSS#3pN#@                 \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"malcolmang"},"content":"            \"  ,wmM####@GGb##;G       \u0027^GGGQ#@`                  \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"malcolmang"},"content":"            \"######### @GGCG###;;.      pS###@#s,                \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"malcolmang"},"content":"            \"######### @GGGGGGG#######N######   ####s,.          \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"malcolmang"},"content":"            \"##########@G GGGGG GGGG########     ##@####s,       \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"malcolmang"},"content":"            \"###########S.   GG  CGGS#######   #  # ########s,   \\n\" +","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"malcolmang"},"content":"            \"##### ######;G   ^\u0027\u0027 ~^GGSGGQ#   # #   ############,\";","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /** ASCII art from {@link UserInterface#ASCII_ART} expressed as a list of strings, where each row is a string */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final List\u003cString\u003e textRows \u003d Arrays.asList(ASCII_ART.split(\"\\n\"));","lastModifiedDate":"2022-08-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Function to clear the console. Does not work in the IDE.","lastModifiedDate":"2022-08-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //@@author Abishek Kashyap-reused","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //Code reused from https://stackoverflow.com/a/38365871","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static void clearScreen() {","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        //Clears Screen in java","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-08-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (System.getProperty(\"os.name\").contains(\"Windows\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new ProcessBuilder(\"cmd\", \"/c\", \"cls\").inheritIO().start().waitFor();","lastModifiedDate":"2022-08-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Runtime.getRuntime().exec(\"clear\");","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (IOException | InterruptedException ignored) {","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":93,"author":{"gitId":"malcolmang"},"content":"     * Prints text, formatted with ASCII art and a text box, to console.","lastModifiedDate":"2022-08-27"},{"lineNumber":94,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":95,"author":{"gitId":"malcolmang"},"content":"     * @param text text to be printed","lastModifiedDate":"2022-08-27"},{"lineNumber":96,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"malcolmang"},"content":"    public static void print(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":98,"author":{"gitId":"malcolmang"},"content":"        DialogBox textBox \u003d new DialogBox(text, MAX_WIDTH, TEXTBOX_HORIZONTAL_POSITION);","lastModifiedDate":"2022-08-27"},{"lineNumber":99,"author":{"gitId":"malcolmang"},"content":"        int rowIndex \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":100,"author":{"gitId":"malcolmang"},"content":"        int textBoxIndex \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"malcolmang"},"content":"        // Vertical range that the text box should overlay onto","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"malcolmang"},"content":"        int textBoxUpperBounds \u003d TEXTBOX_VERTICAL_POSITION - textBox.getHeight();","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"malcolmang"},"content":"        int textBoxLowerBounds \u003d TEXTBOX_VERTICAL_POSITION;","lastModifiedDate":"2022-08-27"},{"lineNumber":105,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":106,"author":{"gitId":"malcolmang"},"content":"        // Makes sure ASCII art can fit entire text box","lastModifiedDate":"2022-08-27"},{"lineNumber":107,"author":{"gitId":"malcolmang"},"content":"        List\u003cString\u003e outputTextRows \u003d extendScreen(textBoxUpperBounds);","lastModifiedDate":"2022-08-27"},{"lineNumber":108,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":109,"author":{"gitId":"malcolmang"},"content":"        // If screen was extended, adjust upper and lower bounds to fit the box","lastModifiedDate":"2022-08-27"},{"lineNumber":110,"author":{"gitId":"malcolmang"},"content":"        if (outputTextRows.size() !\u003d textRows.size()) {","lastModifiedDate":"2022-08-27"},{"lineNumber":111,"author":{"gitId":"malcolmang"},"content":"            textBoxLowerBounds -\u003d textBoxUpperBounds - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":112,"author":{"gitId":"malcolmang"},"content":"            textBoxUpperBounds \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":113,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":114,"author":{"gitId":"malcolmang"},"content":"        clearScreen();","lastModifiedDate":"2022-08-27"},{"lineNumber":115,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":116,"author":{"gitId":"malcolmang"},"content":"        // replace text at bounds with text box at specified position","lastModifiedDate":"2022-08-27"},{"lineNumber":117,"author":{"gitId":"malcolmang"},"content":"        for (String row : outputTextRows) {","lastModifiedDate":"2022-08-27"},{"lineNumber":118,"author":{"gitId":"malcolmang"},"content":"            rowIndex++;","lastModifiedDate":"2022-08-27"},{"lineNumber":119,"author":{"gitId":"malcolmang"},"content":"            if (rowIndex \u003c textBoxLowerBounds \u0026\u0026 rowIndex \u003e\u003d textBoxUpperBounds) {","lastModifiedDate":"2022-08-27"},{"lineNumber":120,"author":{"gitId":"malcolmang"},"content":"                row \u003d row.substring(0, TEXTBOX_HORIZONTAL_POSITION)","lastModifiedDate":"2022-08-27"},{"lineNumber":121,"author":{"gitId":"malcolmang"},"content":"                        + textBox.getTextBox().get(textBoxIndex);","lastModifiedDate":"2022-08-27"},{"lineNumber":122,"author":{"gitId":"malcolmang"},"content":"                textBoxIndex++;","lastModifiedDate":"2022-08-27"},{"lineNumber":123,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":124,"author":{"gitId":"malcolmang"},"content":"            System.out.println(row);","lastModifiedDate":"2022-08-27"},{"lineNumber":125,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":126,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":127,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":129,"author":{"gitId":"malcolmang"},"content":"     * Extends {@link UserInterface#textRows} to fit text box if needed","lastModifiedDate":"2022-08-27"},{"lineNumber":130,"author":{"gitId":"malcolmang"},"content":"     * (in case of vertical overflow)","lastModifiedDate":"2022-08-27"},{"lineNumber":131,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":132,"author":{"gitId":"malcolmang"},"content":"     * @param difference difference in height that must be accounted for (negative implies overflow)","lastModifiedDate":"2022-08-27"},{"lineNumber":133,"author":{"gitId":"malcolmang"},"content":"     * @return list of string tthat may have been extended","lastModifiedDate":"2022-08-27"},{"lineNumber":134,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":135,"author":{"gitId":"malcolmang"},"content":"    public static List\u003cString\u003e extendScreen(int difference) {","lastModifiedDate":"2022-08-27"},{"lineNumber":136,"author":{"gitId":"malcolmang"},"content":"        List\u003cString\u003e outputRows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":137,"author":{"gitId":"malcolmang"},"content":"        if (difference \u003c\u003d 0) {","lastModifiedDate":"2022-08-27"},{"lineNumber":138,"author":{"gitId":"malcolmang"},"content":"            // If there is overflow (difference is negative or 0)","lastModifiedDate":"2022-08-27"},{"lineNumber":139,"author":{"gitId":"malcolmang"},"content":"            // Add (-difference) number of empty rows to outputRows","lastModifiedDate":"2022-08-27"},{"lineNumber":140,"author":{"gitId":"malcolmang"},"content":"            for (int i \u003d 0; i \u003e\u003d difference; i--) {","lastModifiedDate":"2022-08-27"},{"lineNumber":141,"author":{"gitId":"malcolmang"},"content":"                outputRows.add(0, DialogBox.generateIndent(MAX_WIDTH, \u0027 \u0027));","lastModifiedDate":"2022-08-27"},{"lineNumber":142,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":143,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":144,"author":{"gitId":"malcolmang"},"content":"        // Add the ASCII art","lastModifiedDate":"2022-08-27"},{"lineNumber":145,"author":{"gitId":"malcolmang"},"content":"        outputRows.addAll(textRows);","lastModifiedDate":"2022-08-27"},{"lineNumber":146,"author":{"gitId":"malcolmang"},"content":"        return outputRows;","lastModifiedDate":"2022-08-27"},{"lineNumber":147,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":148,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":149,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":150,"author":{"gitId":"malcolmang"},"content":"     * Gets input from the user","lastModifiedDate":"2022-08-27"},{"lineNumber":151,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":152,"author":{"gitId":"malcolmang"},"content":"     * @return input string from user","lastModifiedDate":"2022-08-27"},{"lineNumber":153,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":154,"author":{"gitId":"malcolmang"},"content":"    public static String getInput() {","lastModifiedDate":"2022-08-27"},{"lineNumber":155,"author":{"gitId":"malcolmang"},"content":"        System.out.println();","lastModifiedDate":"2022-08-27"},{"lineNumber":156,"author":{"gitId":"malcolmang"},"content":"        System.out.println(\"What would you like to do?\");","lastModifiedDate":"2022-08-27"},{"lineNumber":157,"author":{"gitId":"malcolmang"},"content":"        System.out.print(\"INPUT:    \");","lastModifiedDate":"2022-08-27"},{"lineNumber":158,"author":{"gitId":"malcolmang"},"content":"        return READER.nextLine().trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":159,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":160,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":137,"-":23}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import UI.DialogBox;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":" * Abstract superclass that list items inherit from. \u003cbr\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" * \u003cb\u003eSubclasses: \u003c/b\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":" * \u003cul\u003e\u003cli\u003e{@link tasks.tasktypes.ToDoTask}\u003c/li\u003e \u003cli\u003e{@link tasks.tasktypes.DeadlineTask}\u003c/li\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":" * \u003cli\u003e{@link tasks.tasktypes.EventTask}\u003c/li\u003e\u003c/ul\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"public abstract class Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"    /** Text that each item contains */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    private final String TEXT;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"    /** Field that tracks if task is marked as done or not */","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"     * Constructor that initializes {@link Task#TEXT} and","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"     * {@link Task#isDone} field.","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"     * @param text text of the item","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"    public Task(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"        TEXT \u003d text.trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"     * Parses Task item as string. \u003cbr\u003eExample: \u003ccode\u003e[ ][T] go grocery shopping\u003c/code\u003e","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"     * @return item expressed as a string","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \"[\" + getTypeIcon() + \"] \" + TEXT","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"                + DialogBox.rightAlign(getPostFix());","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"malcolmang"},"content":"    public String getText() {","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"malcolmang"},"content":"        return TEXT;","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"malcolmang"},"content":"     * Should always be overridden. Returns the type icon based on item type.","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"malcolmang"},"content":"     * @return the type icon that represents the item type","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":52,"author":{"gitId":"malcolmang"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"malcolmang"},"content":"        return \"???\";","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":56,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":57,"author":{"gitId":"malcolmang"},"content":"     * Overridden in the case of certain methods that attach","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"malcolmang"},"content":"     * other comments to the back of tasks.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"malcolmang"},"content":"     * @return string to be postfixed at the end","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"malcolmang"},"content":"    protected String getPostFix() {","lastModifiedDate":"2022-08-27"},{"lineNumber":63,"author":{"gitId":"malcolmang"},"content":"        return \"\";","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":65,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":66,"author":{"gitId":"malcolmang"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"malcolmang"},"content":"        return isDone ? \"■\" : \" \";","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":69}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package tasks;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-21"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"import java.util.List;","lastModifiedDate":"2022-08-21"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" * Class that keeps track of each To-Do item added to the program.","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"public class TaskList {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"    /** list containing item */","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"    private final List\u003cTask\u003e items;","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    /** count of number of items in list */","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"    private int itemCount \u003d 0;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"     * Constructor that initializes list of task items.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"    public TaskList() {","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"        items \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"     * Adds item to list of items. Increments item count by 1.","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"     * @param item item to be added","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"     * @return returns the \u003cb\u003e0-based\u003c/b\u003e index of the added item","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"    public int addItem(Task item) {","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"        items.add(item);","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"        return ++itemCount - 1;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"     * Converts list to a string representation.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"     * @return string representation of the To-Do list","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"    public String toString() {","lastModifiedDate":"2022-08-21"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"        StringBuilder outputString \u003d new StringBuilder();","lastModifiedDate":"2022-08-21"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"        // 1-based index","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"        int itemCounter \u003d 1;","lastModifiedDate":"2022-08-21"},{"lineNumber":43,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"malcolmang"},"content":"        // append each item to string (with attached prefix and line break)","lastModifiedDate":"2022-08-27"},{"lineNumber":45,"author":{"gitId":"malcolmang"},"content":"        for (Task item : items) {","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"malcolmang"},"content":"            String prefix \u003d itemCounter++ + \". \";","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"malcolmang"},"content":"            if (Integer.toString(itemCounter - 1).length() \u003d\u003d 1) {","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"malcolmang"},"content":"                outputString.append(\"0\");","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"malcolmang"},"content":"            }","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"malcolmang"},"content":"            outputString.append(prefix).append(item).append(\"\\n\");","lastModifiedDate":"2022-08-21"},{"lineNumber":51,"author":{"gitId":"malcolmang"},"content":"        }","lastModifiedDate":"2022-08-21"},{"lineNumber":52,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"malcolmang"},"content":"        // remove trailing linebreak","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"malcolmang"},"content":"        return outputString.substring(0, outputString.length() - 1);","lastModifiedDate":"2022-08-27"},{"lineNumber":55,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":56,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":57,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":58,"author":{"gitId":"malcolmang"},"content":"     * Mark item as done.","lastModifiedDate":"2022-08-27"},{"lineNumber":59,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"malcolmang"},"content":"     * @param index \u003cb\u003e0-based\u003c/b\u003e index of desired item","lastModifiedDate":"2022-08-27"},{"lineNumber":61,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"malcolmang"},"content":"    public void markItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":63,"author":{"gitId":"malcolmang"},"content":"        items.get(index).setDone(true);","lastModifiedDate":"2022-08-21"},{"lineNumber":64,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":65,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":66,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":67,"author":{"gitId":"malcolmang"},"content":"     * Mark item as not yet done.","lastModifiedDate":"2022-08-27"},{"lineNumber":68,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":69,"author":{"gitId":"malcolmang"},"content":"     * @param index \u003cb\u003e0-based\u003c/b\u003e index of desired item","lastModifiedDate":"2022-08-27"},{"lineNumber":70,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":71,"author":{"gitId":"malcolmang"},"content":"    public void unmarkItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":72,"author":{"gitId":"malcolmang"},"content":"        items.get(index).setDone(false);","lastModifiedDate":"2022-08-21"},{"lineNumber":73,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":74,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-21"},{"lineNumber":75,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":76,"author":{"gitId":"malcolmang"},"content":"     * Returns the text content of each item (without done, deadline tracker etc.)","lastModifiedDate":"2022-08-27"},{"lineNumber":77,"author":{"gitId":"malcolmang"},"content":"     *","lastModifiedDate":"2022-08-27"},{"lineNumber":78,"author":{"gitId":"malcolmang"},"content":"     * @param index \u003cb\u003e0-based\u003c/b\u003e index of desired item","lastModifiedDate":"2022-08-27"},{"lineNumber":79,"author":{"gitId":"malcolmang"},"content":"     * @return text content of desired item","lastModifiedDate":"2022-08-27"},{"lineNumber":80,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":81,"author":{"gitId":"malcolmang"},"content":"    public String getTextOfItem(int index) {","lastModifiedDate":"2022-08-21"},{"lineNumber":82,"author":{"gitId":"malcolmang"},"content":"        return items.get(index).getText();","lastModifiedDate":"2022-08-21"},{"lineNumber":83,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-21"},{"lineNumber":84,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":85,"author":{"gitId":"malcolmang"},"content":"    public int getItemCount() {","lastModifiedDate":"2022-08-27"},{"lineNumber":86,"author":{"gitId":"malcolmang"},"content":"        return itemCount;","lastModifiedDate":"2022-08-27"},{"lineNumber":87,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":89,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-21"}],"authorContributionMap":{"malcolmang":89}},{"path":"src/main/java/tasks/tasktypes/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package tasks.tasktypes;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":" * Deadline item that keeps track of when an item has to be completed.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"    /** Keyword to mark when a task needs to be done by */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"    public static final String COMMAND_BY \u003d \"/by\";","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"    /** Contains text following the {@link DeadlineTask#COMMAND_BY} command. */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    private final String DEADLINE;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"     * Splits the text into two and initializes both {@link DeadlineTask#TEXT} and","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"     * {@link DeadlineTask#DEADLINE} strings.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"     * @param text input text to be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"    public DeadlineTask(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"        super(text.split(COMMAND_BY)[0]);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"        DEADLINE \u003d text.split(COMMAND_BY)[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"     * Provides type icon to be used in string formatting.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"     * @return Type icon \"D\" for \"Deadline\".","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"        return \"D\";","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"     * Add a postfix that denotes a deadline.","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"     * (e.g. \u003ccode\u003e(by 4:00 pm)\u003c/code\u003e )","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"     * @return postfix string","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"    protected String getPostFix() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"        return \"(by: \" + DEADLINE + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":42}},{"path":"src/main/java/tasks/tasktypes/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package tasks.tasktypes;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":" * Event item that keeps track of when an item is slated to happen.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"    /** Keyword to mark when an event is supposed to happen */","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"    public static final String COMMAND_AT \u003d \"/at\";","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"    /** Contains text following the {@link EventTask#COMMAND_AT} command. */","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    private final String EVENT;","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"     * Splits the text into two and initializes both {@link EventTask#TEXT} and","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"     * {@link EventTask#EVENT} strings.","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"     * @param text input text to be parsed","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"    public EventTask(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"        super(text.split(COMMAND_AT)[0]);","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"malcolmang"},"content":"        EVENT \u003d text.split(COMMAND_AT)[1].trim();","lastModifiedDate":"2022-08-27"},{"lineNumber":23,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":25,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":26,"author":{"gitId":"malcolmang"},"content":"     * Provides type icon to be used in string formatting.","lastModifiedDate":"2022-08-27"},{"lineNumber":27,"author":{"gitId":"malcolmang"},"content":"     * @return Type icon \"E\" for \"Event\".","lastModifiedDate":"2022-08-27"},{"lineNumber":28,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"malcolmang"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"malcolmang"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":31,"author":{"gitId":"malcolmang"},"content":"        return \"E\";","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":34,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"malcolmang"},"content":"     * Add a postfix that denotes when something happens","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"malcolmang"},"content":"     * (e.g. \u003ccode\u003e(at 3:00 pm)\u003c/code\u003e )","lastModifiedDate":"2022-08-27"},{"lineNumber":37,"author":{"gitId":"malcolmang"},"content":"     * @return postfix string","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"malcolmang"},"content":"    protected String getPostFix() {","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"malcolmang"},"content":"        return \"(at: \" + EVENT + \")\";","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":42}},{"path":"src/main/java/tasks/tasktypes/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"malcolmang"},"content":"package tasks.tasktypes;","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"malcolmang"},"content":"import tasks.Task;","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":5,"author":{"gitId":"malcolmang"},"content":"/**","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"malcolmang"},"content":" * Vanilla tasks. Task item without any extra functionality.","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"malcolmang"},"content":" */","lastModifiedDate":"2022-08-27"},{"lineNumber":8,"author":{"gitId":"malcolmang"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":9,"author":{"gitId":"malcolmang"},"content":"    public ToDoTask(String text) {","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"malcolmang"},"content":"        super(text);","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":12,"author":{"gitId":"malcolmang"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"malcolmang"},"content":"    /**","lastModifiedDate":"2022-08-27"},{"lineNumber":14,"author":{"gitId":"malcolmang"},"content":"     * Provides type icon to be used in string formatting.","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"malcolmang"},"content":"     * @return Type icon \"T\" for \"ToDo\".","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"malcolmang"},"content":"     */","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"malcolmang"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"malcolmang"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"malcolmang"},"content":"        return \"T\";","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"malcolmang"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"malcolmang"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"malcolmang":21}}]
