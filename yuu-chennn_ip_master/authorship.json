[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"# duke.Duke project template","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"You will use this as a baseline for the individual project, as well as the team project later in the semester.","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuu-chennn":2,"-":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"import duke.command.TaskManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.FileManager.fileReader;","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.tasks;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"                        + \"What can I do for you?\\n\";","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"        // Load the data from the hard disk when Duke starts up.","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"        fileReader();","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"        while (true) {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"                try {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"                    TaskManager.stringProcessor(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"                } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println();","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"        String farewell \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(farewell);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"yuu-chennn":32,"-":4}},{"path":"src/main/java/duke/command/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import java.io.*;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.tasks;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"public class FileManager {","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileReader() {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"            fileReader(FILE_PATH, FILE_DIRECTORY);","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"â˜¹ OOPS!!! This file does not exist :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileReader(String filePath, String fileDirectory) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"        File fileDir \u003d new File(fileDirectory);","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"        if (fileDir.mkdir()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"File created: \" + fileDir.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"        ArrayList\u003cTask\u003e reader \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"            String currentLine;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"            while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"                TaskManager.stringProcessor(currentLine, reader);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"â˜¹ OOPS!!! Something went wrong :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileUpdate() {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"            fileUpdate(FILE_PATH, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"â˜¹ OOPS!!! Something went wrong :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileUpdate(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"        Writer w \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"            w.write(\"\\t\" + task.toString() + \"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"        w.close();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"yuu-chennn":58}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"public class TaskManager {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    public static void stringProcessor(String input, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"        String command;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"            command \u003d input.substring(0, input.indexOf(\" \"));","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"            String removeCommand \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"            removeCommand.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"            handleUserInput(removeCommand, command);","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.contains(\"\\t\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"            command \u003d input.substring(1, input.indexOf(\" \"));","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"            String removeCommand \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"            removeCommand.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"            handleFileData(removeCommand, command);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.equals(\"list\")){","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"            list(tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"â˜¹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"    public static void handleUserInput(String input, String command) {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"        switch(command) {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"            case \"mark\":","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"                markAsDone(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"            case \"unmark\":","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"                markAsNotDone(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"            case \"todo\":","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"                addTodo(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"            case \"deadline\":","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"                addDeadline(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"            case \"event\":","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"                addEvent(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"            case \"delete\":","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"                deleteTask(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"    public static void handleFileData(String input, String command) {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"        switch(command) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"            case \"[T]\":","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"                addTodo(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"yuu-chennn"},"content":"            case \"[D]\":","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"                addDeadline(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"            case \"[E]\":","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"yuu-chennn"},"content":"                addEvent(input, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"yuu-chennn"},"content":"    public static void addTodo(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"yuu-chennn"},"content":"        if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input.substring(4));","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input.substring(4));","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input);","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + t);","lastModifiedDate":"2022-10-01"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Now you have \" + t.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"        // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"yuu-chennn"},"content":"        FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"yuu-chennn"},"content":"    public static void addDeadline(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"            if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\"(by: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"yuu-chennn"},"content":"                Deadline d \u003d new Deadline(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 5));","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\"(by: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"yuu-chennn"},"content":"                Deadline d \u003d new Deadline(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 5));","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"yuu-chennn"},"content":"                int indexSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"yuu-chennn"},"content":"                if (indexSlash \u003d\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(\"â˜¹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"yuu-chennn"},"content":"                    return;","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"yuu-chennn"},"content":"                } Deadline d \u003d new Deadline(input.substring(0, indexSlash), input.substring(indexSlash + 1));","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + d);","lastModifiedDate":"2022-10-01"},{"lineNumber":118,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Now you have \" + d.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"yuu-chennn"},"content":"            FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"yuu-chennn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Error: Array Index Out Of Bounds\");","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"yuu-chennn"},"content":"    public static void addEvent(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"yuu-chennn"},"content":"            if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\"(at: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"yuu-chennn"},"content":"                Event e \u003d new Event(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 5));","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\"(at: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"yuu-chennn"},"content":"                Event e \u003d new Event(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 5));","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"yuu-chennn"},"content":"                int indexSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"yuu-chennn"},"content":"                if (indexSlash \u003d\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(\"â˜¹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"yuu-chennn"},"content":"                    return;","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"yuu-chennn"},"content":"                } Event e \u003d new Event(input.substring(0, indexSlash), input.substring(indexSlash + 1));","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + e);","lastModifiedDate":"2022-10-01"},{"lineNumber":152,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Now you have \" + e.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"yuu-chennn"},"content":"            FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"yuu-chennn"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Error: Array Index Out Of Bounds\");","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"yuu-chennn"},"content":"    public static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"yuu-chennn"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"yuu-chennn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"yuu-chennn"},"content":"            i++;","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"yuu-chennn"},"content":"            System.out.print(i + \". \" + task + \"\\n\");","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"yuu-chennn"},"content":"        FileManager.fileUpdate();","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":171,"author":{"gitId":"yuu-chennn"},"content":"    public static void markAsDone(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"yuu-chennn"},"content":"        int markNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"yuu-chennn"},"content":"        if (markNum \u003c 0 || markNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"yuu-chennn"},"content":"        else if (!tasks.get(markNum).isDone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"yuu-chennn"},"content":"            tasks.get(markNum).isDone \u003d true;","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"yuu-chennn"},"content":"            FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":181,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Oops! This task is already marked as done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"yuu-chennn"},"content":"    public static void markAsNotDone(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"yuu-chennn"},"content":"        int markNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"yuu-chennn"},"content":"        if (markNum \u003c 0 || markNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"yuu-chennn"},"content":"        else if (tasks.get(markNum).isDone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"yuu-chennn"},"content":"            tasks.get(markNum).isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"yuu-chennn"},"content":"            FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":195,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"â˜¹ OOPS!!! This task is already marked as not done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-04"},{"lineNumber":197,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"yuu-chennn"},"content":"    public static void deleteTask(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"yuu-chennn"},"content":"        int taskNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"yuu-chennn"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":205,"author":{"gitId":"yuu-chennn"},"content":"            tasks.remove(taskNum);","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"yuu-chennn"},"content":"            // Reassign task numbers","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"yuu-chennn"},"content":"            for (int i \u003d taskNum + 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"yuu-chennn"},"content":"                tasks.get(i).num \u003d i - 1;","lastModifiedDate":"2022-10-04"},{"lineNumber":209,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":210,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"yuu-chennn"},"content":"            FileManager.fileUpdate();","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":215}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public String due;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public Deadline(String name, String due) {","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + due + \")\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":15}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    protected String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"yuu-chennn":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public String name;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"    public int num;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public boolean isDone;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"    public Task(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"    public String getStatus() {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"            return \"X\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"            return \" \";","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"        return \"[\" + getStatus() + \"] \" + name;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yuu-chennn":24}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"        return \"[T] \" + super.toString() + \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"java -classpath ..\\bin duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuu-chennn":1,"-":20}}]
