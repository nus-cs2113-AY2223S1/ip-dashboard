[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"# User Guide","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"## Quick-start","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"Setting up your application in Intellij.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"- Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"- Open Intellij (if you are not in the welcome screen, click File \u003e Close Project to close the existing project first)","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"- Open the project into Intellij as follows:","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"  - Click Open.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"  - Select the project directory, and click OK.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"  - If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"- Configure the project to use JDK 11 (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"- In the same dialog, set the Project language level field to the SDK default option.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"- After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"  Hello! I\u0027m Duke","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"  What can I do for you?","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"  ________________________________________________________________________________________________________________________","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"  █     █░▓█████  ██▓     ▄████▄   ▒█████   ███▄ ▄███▓▓█████    ▄▄▄█████▓ ▒█████     ▓█████▄  █    ██  ██ ▄█▀▓█████","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"  ▓█░ █ ░█░▓█   ▀ ▓██▒    ▒██▀ ▀█  ▒██▒  ██▒▓██▒▀█▀ ██▒▓█   ▀    ▓  ██▒ ▓▒▒██▒  ██▒   ▒██▀ ██▌ ██  ▓██▒ ██▄█▒ ▓█   ▀","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"  ▒█░ █ ░█ ▒███   ▒██░    ▒▓█    ▄ ▒██░  ██▒▓██    ▓██░▒███      ▒ ▓██░ ▒░▒██░  ██▒   ░██   █▌▓██  ▒██░▓███▄░ ▒███","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"  ░█░ █ ░█ ▒▓█  ▄ ▒██░    ▒▓▓▄ ▄██▒▒██   ██░▒██    ▒██ ▒▓█  ▄    ░ ▓██▓ ░ ▒██   ██░   ░▓█▄   ▌▓▓█  ░██░▓██ █▄ ▒▓█  ▄","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"  ░░██▒██▓ ░▒████▒░██████▒▒ ▓███▀ ░░ ████▓▒░▒██▒   ░██▒░▒████▒     ▒██▒ ░ ░ ████▓▒░   ░▒████▓ ▒▒█████▓ ▒██▒ █▄░▒████▒","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"  ░ ▓░▒ ▒  ░░ ▒░ ░░ ▒░▓  ░░ ░▒ ▒  ░░ ▒░▒░▒░ ░ ▒░   ░  ░░░ ▒░ ░     ▒ ░░   ░ ▒░▒░▒░     ▒▒▓  ▒ ░▒▓▒ ▒ ▒ ▒ ▒▒ ▓▒░░ ▒░ ░","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"  ▒ ░ ░   ░ ░  ░░ ░ ▒  ░  ░  ▒     ░ ▒ ▒░ ░  ░      ░ ░ ░  ░       ░      ░ ▒ ▒░     ░ ▒  ▒ ░░▒░ ░ ░ ░ ░▒ ▒░ ░ ░  ░","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"  ░   ░     ░     ░ ░   ░        ░ ░ ░ ▒  ░      ░      ░        ░      ░ ░ ░ ▒      ░ ░  ░  ░░░ ░ ░ ░ ░░ ░    ░","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"  ________________________________________________________________________________________________________________________","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"- Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"  Some example commands you can try:","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"  - `todo watch lecture` : Adds a todo `watch lecture` to the Task List. ","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"  - `deadline cs2113t assignment/friday 2359` : Adds a deadline `cs2113t assignment` due by `friday 2359` to the Task List.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"  - `event mom\u0027s birthday/tuesday 6pm` : Adds an event `mom\u0027s birthday` at `tuesday 6pm` to the Task List.","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"  - `list` : Lists all tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"  - `find lecture` : Searches for all tasks in Task List with keyword `lecture`.","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"  - `delete 1` : Deletes the 1st task shown in the current list. ","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"  - `mark 2` : Marks the 2nd task shown in the current list as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"  - `unmark 2` : Marks the 2nd task shown in the current list as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"  - `bye` : Exits the app.","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"- Refer to the Features below for details of each command.","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"## Features","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"### `todo TASKNAME` : Add a todo","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"Add a todo to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"`todo watch lecture`","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"Add \"watch lecture\" to the Task List as a todo.","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"\t[T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"### `deadline TASKNAME/DUE` : Add a deadline","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"yuu-chennn"},"content":"Add a deadline to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"yuu-chennn"},"content":"`deadline cs2113t assignment/friday 2359`","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"yuu-chennn"},"content":"Add cs2113t assignment to the Task List as a deadline due by friday 2359.","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"\t[D] [ ] cs2113t assignment (by: friday 2359)","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"yuu-chennn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"### `event TASKNAME/TIME` : Add an event","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"yuu-chennn"},"content":"Add an event to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"yuu-chennn"},"content":"`event mom\u0027s birthday/tuesday 6pm`","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"yuu-chennn"},"content":"Add mom\u0027s birthday to the Task List as an event at 6pm on Tuesday.","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"yuu-chennn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"yuu-chennn"},"content":"### `list` : List all tasks","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"yuu-chennn"},"content":"Generates a list of all tasks currently saved in the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"yuu-chennn"},"content":"`list`","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"yuu-chennn"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"yuu-chennn"},"content":"1. [T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"yuu-chennn"},"content":"2. [D] [ ] cs2113t assignment (by: friday 2359)","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"yuu-chennn"},"content":"3. [E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"yuu-chennn"},"content":"### `find KEYWORD` : find a task","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"yuu-chennn"},"content":"Find a task by searching for a keyword","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"yuu-chennn"},"content":"`find lecture`","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"yuu-chennn"},"content":"Generates all tasks in Task List with keyword `lecture`.","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"yuu-chennn"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"yuu-chennn"},"content":"1. [T] [ ] watch lecture","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"yuu-chennn"},"content":"### `delete INDEX` : Delete a task","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"yuu-chennn"},"content":"Delete a task from the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"yuu-chennn"},"content":"- Deletes the task at the specified INDEX.","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"yuu-chennn"},"content":"`delete 1`","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"yuu-chennn"},"content":"Deletes \"watch lecture\" from the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"yuu-chennn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"yuu-chennn"},"content":"\t[T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"yuu-chennn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"yuu-chennn"},"content":"### `mark INDEX` : Marks a task as done","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"yuu-chennn"},"content":"Mark a task from the Task List as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"yuu-chennn"},"content":"- Marks the person at the specified INDEX as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"yuu-chennn"},"content":"`mark 2`","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"yuu-chennn"},"content":"Marks \"mom\u0027s birthday\" from the Task List as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"yuu-chennn"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [X] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"yuu-chennn"},"content":"### `unmark INDEX` : Marks a task as not done","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"yuu-chennn"},"content":"Mark a task from the Task List as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"yuu-chennn"},"content":"- Marks the person at the specified INDEX as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"yuu-chennn"},"content":"`unmark 2`","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"yuu-chennn"},"content":"Marks \"mom\u0027s birthday\" from the Task List as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"yuu-chennn"},"content":"OK, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"yuu-chennn"},"content":"### `bye` : Exits the app","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"yuu-chennn"},"content":"Exits the program.","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"yuu-chennn"},"content":"### Saving the data","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"yuu-chennn"},"content":"Duke\u0027s task data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"yuu-chennn"},"content":"### Editing the data file","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"yuu-chennn"},"content":"Duke\u0027s task data are saved as a TXT file `[JAR file location]/data/duke.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yuu-chennn":192,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"Duke is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"## Quick-start","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"Setting up your application in Intellij.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"- Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"- Open Intellij (if you are not in the welcome screen, click File \u003e Close Project to close the existing project first)","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"- Open the project into Intellij as follows:","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"  - Click Open.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"  - Select the project directory, and click OK.","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"  - If there are any further prompts, accept the defaults.","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"- Configure the project to use JDK 11 (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"- In the same dialog, set the Project language level field to the SDK default option.","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"- After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"  Hello! I\u0027m Duke","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"  What can I do for you?","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"  ________________________________________________________________________________________________________________________","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"  █     █░▓█████  ██▓     ▄████▄   ▒█████   ███▄ ▄███▓▓█████    ▄▄▄█████▓ ▒█████     ▓█████▄  █    ██  ██ ▄█▀▓█████","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"  ▓█░ █ ░█░▓█   ▀ ▓██▒    ▒██▀ ▀█  ▒██▒  ██▒▓██▒▀█▀ ██▒▓█   ▀    ▓  ██▒ ▓▒▒██▒  ██▒   ▒██▀ ██▌ ██  ▓██▒ ██▄█▒ ▓█   ▀","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"  ▒█░ █ ░█ ▒███   ▒██░    ▒▓█    ▄ ▒██░  ██▒▓██    ▓██░▒███      ▒ ▓██░ ▒░▒██░  ██▒   ░██   █▌▓██  ▒██░▓███▄░ ▒███","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"  ░█░ █ ░█ ▒▓█  ▄ ▒██░    ▒▓▓▄ ▄██▒▒██   ██░▒██    ▒██ ▒▓█  ▄    ░ ▓██▓ ░ ▒██   ██░   ░▓█▄   ▌▓▓█  ░██░▓██ █▄ ▒▓█  ▄","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"  ░░██▒██▓ ░▒████▒░██████▒▒ ▓███▀ ░░ ████▓▒░▒██▒   ░██▒░▒████▒     ▒██▒ ░ ░ ████▓▒░   ░▒████▓ ▒▒█████▓ ▒██▒ █▄░▒████▒","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"  ░ ▓░▒ ▒  ░░ ▒░ ░░ ▒░▓  ░░ ░▒ ▒  ░░ ▒░▒░▒░ ░ ▒░   ░  ░░░ ▒░ ░     ▒ ░░   ░ ▒░▒░▒░     ▒▒▓  ▒ ░▒▓▒ ▒ ▒ ▒ ▒▒ ▓▒░░ ▒░ ░","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"  ▒ ░ ░   ░ ░  ░░ ░ ▒  ░  ░  ▒     ░ ▒ ▒░ ░  ░      ░ ░ ░  ░       ░      ░ ▒ ▒░     ░ ▒  ▒ ░░▒░ ░ ░ ░ ░▒ ▒░ ░ ░  ░","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"  ░   ░     ░     ░ ░   ░        ░ ░ ░ ▒  ░      ░      ░        ░      ░ ░ ░ ▒      ░ ░  ░  ░░░ ░ ░ ░ ░░ ░    ░","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"  ________________________________________________________________________________________________________________________","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"- Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"  Some example commands you can try:","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"  - `todo watch lecture` : Adds a todo \"watch lecture\" to the Task List. ","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"  - `deadline cs2113t assignment/friday 2359` : Adds a deadline \"cs2113t assignment\" due by \"friday 2359\" to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"  - `event mom\u0027s birthday/tuesday 6pm` : Adds an event \"mom\u0027s birthday\" at \"tuesday 6pm\" to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"  - `list` : Lists all tasks.","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"  - `delete 1` : Deletes the 1st task shown in the current list. ","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"  - `mark 2` : Marks the 2nd task shown in the current list as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"  - `unmark 2` : Marks the 2nd task shown in the current list as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"  - `bye` : Exits the app.","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"- Refer to the Features below for details of each command.","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"### `todo TASKNAME` : Add a todo","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"Add a todo to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"`todo watch lecture`","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"Add \"watch lecture\" to the Task List as a todo.","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"\t[T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"### `deadline TASKNAME/DUE` : Add a deadline","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"Add a deadline to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"`deadline cs2113t assignment/friday 2359`","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"Add cs2113t assignment to the Task List as a deadline due by friday 2359.","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"\t[D] [ ] cs2113t assignment (by: friday 2359)","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"### `event TASKNAME/TIME` : Add an event","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"Add an event to the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"`event mom\u0027s birthday/tuesday 6pm`","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"Add mom\u0027s birthday to the Task List as an event at 6pm on Tuesday.","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"yuu-chennn"},"content":"### `list` - List all tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"yuu-chennn"},"content":"Generates a list of all tasks currently saved in the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"yuu-chennn"},"content":"`list`","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"yuu-chennn"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"yuu-chennn"},"content":"1. [T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"yuu-chennn"},"content":"2. [D] [ ] cs2113t assignment (by: friday 2359)","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"yuu-chennn"},"content":"3. [E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"yuu-chennn"},"content":"### `delete INDEX` : Delete a task","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"yuu-chennn"},"content":"Delete a task from the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"yuu-chennn"},"content":"- Deletes the task at the specified INDEX.","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"yuu-chennn"},"content":"`delete 1`","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"yuu-chennn"},"content":"Deletes \"watch lecture\" from the Task List.","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"yuu-chennn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"yuu-chennn"},"content":"\t[T] [ ] watch lecture","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"yuu-chennn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"yuu-chennn"},"content":"### `mark INDEX` : Marks a task as done","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"yuu-chennn"},"content":"Mark a task from the Task List as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"yuu-chennn"},"content":"- Marks the person at the specified INDEX as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"yuu-chennn"},"content":"`mark 2`","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"yuu-chennn"},"content":"Marks \"mom\u0027s birthday\" from the Task List as done.","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"yuu-chennn"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-10-05"},{"lineNumber":152,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [X] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"yuu-chennn"},"content":"### `unmark INDEX` : Marks a task as not done","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"yuu-chennn"},"content":"Mark a task from the Task List as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"yuu-chennn"},"content":"- Marks the person at the specified INDEX as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"yuu-chennn"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"yuu-chennn"},"content":"- The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"yuu-chennn"},"content":"Example of usage:","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"yuu-chennn"},"content":"`unmark 2`","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"yuu-chennn"},"content":"Expected outcome:","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"yuu-chennn"},"content":"Marks \"mom\u0027s birthday\" from the Task List as not done.","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"yuu-chennn"},"content":"OK, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"yuu-chennn"},"content":"\t[E] [ ] mom\u0027s birthday (at: tuesday 6pm)","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"yuu-chennn"},"content":"```","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"yuu-chennn"},"content":"### `bye` : Exits the app","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"yuu-chennn"},"content":"Exits the program.","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"yuu-chennn"},"content":"### Saving the data","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"yuu-chennn"},"content":"Duke\u0027s task data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"yuu-chennn"},"content":"### Editing the data file","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"yuu-chennn"},"content":"Duke\u0027s task data are saved as a TXT file `[JAR file location]/data/duke.txt`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yuu-chennn":152,"-":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"import duke.command.Ui;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"import duke.exception.ParserException;","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.Parser.stringProcessor;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.Storage.fileReader;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.tasks;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"     * Method to run the main loop of the program","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"     * Accepts user input and carries out relevant command until user says \"bye\"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"        Ui.greeting();","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"        // Load the data from the hard disk when Duke starts up.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"        fileReader();","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"        while (true) {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"                try {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"                    stringProcessor(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"                } catch (ParserException.StringProcessorException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"        Ui.goodbye();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"yuu-chennn":34,"-":4}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"import duke.exception.ParserException;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.tasks;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.addTodo;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.addDeadline;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.addEvent;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.list;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.markAsDone;","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.markAsNotDone;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.deleteTask;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.findTask;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":" * Class that handles user inputs and carries out the appropriate action","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":" * Throws relevant errors","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"public class Parser {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"    // private static final boolean hasSpace \u003d input.contains(\" \");","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"     * Method to handle the user input. Splits \"input\" into the command.","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"     * @param input user input","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"    public static void stringProcessor(String input, ArrayList\u003cTask\u003e tasks) throws ParserException.StringProcessorException {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"        String command;","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"        if (input.contains(\"\\t\")) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"            try {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"                command \u003d input.substring(1, input.indexOf(\" \"));","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"                String removeCommand \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"                removeCommand.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"                handleFileData(removeCommand, command);","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"            } catch (ParserException.FileNotSavedException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.contains(\" \")) {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"            try {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"                command \u003d input.substring(0, input.indexOf(\" \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"                String removeCommand \u003d input.substring(input.indexOf(\" \") + 1);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"                removeCommand.trim();","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"                handleUserInput(removeCommand, command);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"            } catch (ParserException.InvalidInputException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Please provide a valid integer argument.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.equals(\"list\")){","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"            list(tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"            throw new ParserException.StringProcessorException();","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"     * Method to handle the user input.","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"yuu-chennn"},"content":"     * @param input user input","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"     * @param command the command from the user","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"yuu-chennn"},"content":"    public static void handleUserInput(String input, String command) throws NumberFormatException, ParserException.InvalidInputException {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuu-chennn"},"content":"        switch(command) {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"yuu-chennn"},"content":"            case \"mark\":","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"                markAsDone(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"yuu-chennn"},"content":"            case \"unmark\":","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"yuu-chennn"},"content":"                markAsNotDone(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"yuu-chennn"},"content":"            case \"todo\":","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"yuu-chennn"},"content":"                addTodo(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"            case \"deadline\":","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"                addDeadline(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"yuu-chennn"},"content":"            case \"event\":","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"                addEvent(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"yuu-chennn"},"content":"            case \"delete\":","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"                deleteTask(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"            case \"find\":","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"yuu-chennn"},"content":"                findTask(input, tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"yuu-chennn"},"content":"            default:","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"                throw new ParserException.InvalidInputException();","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"     * Method to handle data read in from file and carry out the relevant method","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"     * @param input input data from file","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"yuu-chennn"},"content":"     * @param taskType type of task read from file","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"yuu-chennn"},"content":"    public static void handleFileData(String input, String taskType) throws ParserException.FileNotSavedException {","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"yuu-chennn"},"content":"        switch(taskType) {","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"yuu-chennn"},"content":"            case \"[T]\":","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"yuu-chennn"},"content":"                addTodo(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"yuu-chennn"},"content":"            case \"[D]\":","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"yuu-chennn"},"content":"                addDeadline(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"yuu-chennn"},"content":"            case \"[E]\":","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"yuu-chennn"},"content":"                addEvent(input, tasks);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"yuu-chennn"},"content":"                break;","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"yuu-chennn"},"content":"            default:","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"yuu-chennn"},"content":"                throw new ParserException.FileNotSavedException();","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yuu-chennn":114}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import duke.exception.ParserException;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import java.io.*;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.Parser.stringProcessor;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.list;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.TaskManager.tasks;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":" * Class that handles data file and carries out the appropriate action as instructed by parser","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"public class Storage {","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"     * Method to read a file","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"     * Saves data from file into task list","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"     * Catches relevant exceptions","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileReader() {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"            fileReader(FILE_PATH, FILE_DIRECTORY);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"     * Method to read a file","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"     * Saves data from file into task list","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"     * Throws relevant exceptions","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"     * @param filePath the path of the targeted data file","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"     * @param fileDirectory the directory of the targeted data file","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileReader(String filePath, String fileDirectory) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"        File fileDir \u003d new File(fileDirectory);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"        if (fileDir.mkdir()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Directory created: \" + fileDir.getName());","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Loaded saved data from existing file.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"            loadFile(filePath);","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"    public static void loadFile(String filePath) throws IOException {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"        ArrayList\u003cTask\u003e reader \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"yuu-chennn"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"yuu-chennn"},"content":"        String currentLine;","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"            try {","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"                stringProcessor(currentLine, reader);","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"yuu-chennn"},"content":"            } catch (ParserException.StringProcessorException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"yuu-chennn"},"content":"        list(tasks);","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"yuu-chennn"},"content":"     * Method to update a file with new data","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"yuu-chennn"},"content":"     * Saves data from task list into file","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"     * Catches relevant exceptions","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileUpdate() {","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"            fileUpdate(FILE_PATH, tasks);","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"yuu-chennn"},"content":"     * Method to update a file with new data","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"     * Saves data from task list into file","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"yuu-chennn"},"content":"     * Throws relevant exceptions","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"     * @param filePath the path of the targeted data file","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks the directory of the targeted data file","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"yuu-chennn"},"content":"    public static void fileUpdate(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"        Writer w \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"yuu-chennn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"yuu-chennn"},"content":"            w.write(\"\\t\" + task.toString() + \"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"        w.close();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"yuu-chennn":97}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Event;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Task;","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":" * Class that handles tasks and carries out the appropriate action as instructed by parser","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"public class TaskManager {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"     * Method to add a todo from user input or saved file data","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"     * Saves new data into file","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"     * @param input user input or saved file date without command","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"    public static void addTodo(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"        if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"            return;","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input.substring(4));","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"        } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input.substring(4));","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"            Todo t \u003d new Todo(input);","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"            tasks.add(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"            t.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"            t.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + t);","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Now you have \" + t.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"yuu-chennn"},"content":"        // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"yuu-chennn"},"content":"        Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"yuu-chennn"},"content":"     * Method to add a deadline from user input or saved file data","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"yuu-chennn"},"content":"     * Saves new data into file","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"yuu-chennn"},"content":"     * @param input user input or saved file date without command","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"yuu-chennn"},"content":"    public static void addDeadline(String input, ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"yuu-chennn"},"content":"            if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"yuu-chennn"},"content":"                return;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\" (by: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"yuu-chennn"},"content":"                Deadline d \u003d new Deadline(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 6, input.lastIndexOf(\")\") - 1));","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\" (by: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"yuu-chennn"},"content":"                Deadline d \u003d new Deadline(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 6, input.lastIndexOf(\")\") - 1));","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"yuu-chennn"},"content":"                int indexSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"yuu-chennn"},"content":"                if (indexSlash \u003d\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"yuu-chennn"},"content":"                    return;","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"yuu-chennn"},"content":"                } Deadline d \u003d new Deadline(input.substring(0, indexSlash), input.substring(indexSlash + 1));","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(d);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"yuu-chennn"},"content":"                d.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"yuu-chennn"},"content":"                d.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + d);","lastModifiedDate":"2022-10-01"},{"lineNumber":80,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Now you have \" + d.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"yuu-chennn"},"content":"            Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"yuu-chennn"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"yuu-chennn"},"content":"     * Method to add a event from user input or saved file data","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"yuu-chennn"},"content":"     * Saves new data into file","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"yuu-chennn"},"content":"     * @param input user input or saved file date without command","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"yuu-chennn"},"content":"    public static void addEvent(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"yuu-chennn"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"yuu-chennn"},"content":"            if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"yuu-chennn"},"content":"                return;","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[ ]\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\" (at: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"yuu-chennn"},"content":"                Event e \u003d new Event(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 6, input.lastIndexOf(\")\") - 1));","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d false;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"yuu-chennn"},"content":"            } else if (input.startsWith(\"[X]\")) {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"yuu-chennn"},"content":"                int indexDelimiter \u003d input.indexOf(\" (at: \");","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"yuu-chennn"},"content":"                Event e \u003d new Event(input.substring(4, indexDelimiter), input.substring(indexDelimiter + 6, input.lastIndexOf(\")\") - 1));","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"yuu-chennn"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"yuu-chennn"},"content":"                int indexSlash \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"yuu-chennn"},"content":"                if (indexSlash \u003d\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"yuu-chennn"},"content":"                    System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"yuu-chennn"},"content":"                    return;","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"yuu-chennn"},"content":"                } Event e \u003d new Event(input.substring(0, indexSlash), input.substring(indexSlash + 1));","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"yuu-chennn"},"content":"                tasks.add(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"yuu-chennn"},"content":"                e.num \u003d tasks.size();","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"yuu-chennn"},"content":"                e.isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\" + e);","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"yuu-chennn"},"content":"                System.out.println(\"Now you have \" + e.num + \" tasks in the list.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"yuu-chennn"},"content":"            Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"yuu-chennn"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"yuu-chennn"},"content":"     * Method to print a list from saved file data","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"yuu-chennn"},"content":"    public static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"yuu-chennn"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"yuu-chennn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"yuu-chennn"},"content":"            i++;","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"yuu-chennn"},"content":"            System.out.print(i + \". \" + task + \"\\n\");","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"yuu-chennn"},"content":"     * Method to mark a task in the task list as instructed by the mark command","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"yuu-chennn"},"content":"     * @param input task number to be marked, from user input","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":145,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":146,"author":{"gitId":"yuu-chennn"},"content":"    public static void markAsDone(String input, ArrayList\u003cTask\u003e tasks) throws NumberFormatException {","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"yuu-chennn"},"content":"        if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":148,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"yuu-chennn"},"content":"            return;","lastModifiedDate":"2022-10-05"},{"lineNumber":150,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"yuu-chennn"},"content":"        int markNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"yuu-chennn"},"content":"        if (markNum \u003c 0 || markNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"yuu-chennn"},"content":"        else if (!tasks.get(markNum).isDone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"yuu-chennn"},"content":"            tasks.get(markNum).isDone \u003d true;","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"yuu-chennn"},"content":"            Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Oops! This task is already marked as done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"yuu-chennn"},"content":"     * Method to unmark a task in the task list as instructed by the unmark command","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"yuu-chennn"},"content":"     * @param input task number to be unmarked, from user input","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"yuu-chennn"},"content":"    public static void markAsNotDone(String input, ArrayList\u003cTask\u003e tasks) throws NumberFormatException {","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"yuu-chennn"},"content":"        if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"yuu-chennn"},"content":"            return;","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"yuu-chennn"},"content":"        int markNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"yuu-chennn"},"content":"        if (markNum \u003c 0 || markNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"yuu-chennn"},"content":"        else if (tasks.get(markNum).isDone) {","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"yuu-chennn"},"content":"            tasks.get(markNum).isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"yuu-chennn"},"content":"            Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":183,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! This task is already marked as not done: \\n\\t\" + tasks.get(markNum));","lastModifiedDate":"2022-10-04"},{"lineNumber":185,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"yuu-chennn"},"content":"     * Method to delete a task in the task list as instructed by the delete command","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"yuu-chennn"},"content":"     * @param input task number to be deleted, from user input","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"yuu-chennn"},"content":"    public static void deleteTask(String input, ArrayList\u003cTask\u003e tasks) throws NumberFormatException {","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"yuu-chennn"},"content":"        if (Objects.equals(input, \"\") || Objects.equals(input, \" \") || Objects.equals(input, \"\\t\")) {","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! Please use the correct format :-(\");","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"yuu-chennn"},"content":"            return;","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"yuu-chennn"},"content":"        int taskNum \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"yuu-chennn"},"content":"        if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Please enter an existing task number.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + tasks.get(taskNum));","lastModifiedDate":"2022-10-01"},{"lineNumber":202,"author":{"gitId":"yuu-chennn"},"content":"            tasks.remove(taskNum);","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"yuu-chennn"},"content":"            // Reassign task numbers","lastModifiedDate":"2022-10-04"},{"lineNumber":204,"author":{"gitId":"yuu-chennn"},"content":"            for (int i \u003d taskNum + 1; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-10-04"},{"lineNumber":205,"author":{"gitId":"yuu-chennn"},"content":"                tasks.get(i).num \u003d i - 1;","lastModifiedDate":"2022-10-04"},{"lineNumber":206,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":207,"author":{"gitId":"yuu-chennn"},"content":"            // Save the tasks in the hard disk automatically whenever the task list changes.","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"yuu-chennn"},"content":"            Storage.fileUpdate();","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":212,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"yuu-chennn"},"content":"     * Method to find a task in the task list by searching for a key word as instructed by the find command","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"yuu-chennn"},"content":"     * @param input key word to be searched for, from user input","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"yuu-chennn"},"content":"     * @param tasks task list containing the tasks","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"yuu-chennn"},"content":"    public static void findTask(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-04"},{"lineNumber":219,"author":{"gitId":"yuu-chennn"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"yuu-chennn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-04"},{"lineNumber":221,"author":{"gitId":"yuu-chennn"},"content":"            if (task.name.contains(input)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":222,"author":{"gitId":"yuu-chennn"},"content":"                found.add(task);","lastModifiedDate":"2022-10-04"},{"lineNumber":223,"author":{"gitId":"yuu-chennn"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":224,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":225,"author":{"gitId":"yuu-chennn"},"content":"        if(found.size() !\u003d 0) {","lastModifiedDate":"2022-10-04"},{"lineNumber":226,"author":{"gitId":"yuu-chennn"},"content":"            list(found);","lastModifiedDate":"2022-10-04"},{"lineNumber":227,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":228,"author":{"gitId":"yuu-chennn"},"content":"            System.out.println(\"☹ OOPS!!! No tasks matched the keyword :-(\");","lastModifiedDate":"2022-10-04"},{"lineNumber":229,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":230,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":231,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":231}},{"path":"src/main/java/duke/command/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.command;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Ui {","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"    private static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"            \" █     █░▓█████  ██▓     ▄████▄   ▒█████   ███▄ ▄███▓▓█████    ▄▄▄█████▓ ▒█████     ▓█████▄  █    ██  ██ ▄█▀▓█████\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"            \"▓█░ █ ░█░▓█   ▀ ▓██▒    ▒██▀ ▀█  ▒██▒  ██▒▓██▒▀█▀ ██▒▓█   ▀    ▓  ██▒ ▓▒▒██▒  ██▒   ▒██▀ ██▌ ██  ▓██▒ ██▄█▒ ▓█   ▀\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"            \"▒█░ █ ░█ ▒███   ▒██░    ▒▓█    ▄ ▒██░  ██▒▓██    ▓██░▒███      ▒ ▓██░ ▒░▒██░  ██▒   ░██   █▌▓██  ▒██░▓███▄░ ▒███\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"            \"░█░ █ ░█ ▒▓█  ▄ ▒██░    ▒▓▓▄ ▄██▒▒██   ██░▒██    ▒██ ▒▓█  ▄    ░ ▓██▓ ░ ▒██   ██░   ░▓█▄   ▌▓▓█  ░██░▓██ █▄ ▒▓█  ▄\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"            \"░░██▒██▓ ░▒████▒░██████▒▒ ▓███▀ ░░ ████▓▒░▒██▒   ░██▒░▒████▒     ▒██▒ ░ ░ ████▓▒░   ░▒████▓ ▒▒█████▓ ▒██▒ █▄░▒████▒\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"            \"░ ▓░▒ ▒  ░░ ▒░ ░░ ▒░▓  ░░ ░▒ ▒  ░░ ▒░▒░▒░ ░ ▒░   ░  ░░░ ▒░ ░     ▒ ░░   ░ ▒░▒░▒░     ▒▒▓  ▒ ░▒▓▒ ▒ ▒ ▒ ▒▒ ▓▒░░ ▒░ ░\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"            \"▒ ░ ░   ░ ░  ░░ ░ ▒  ░  ░  ▒     ░ ▒ ▒░ ░  ░      ░ ░ ░  ░       ░      ░ ▒ ▒░     ░ ▒  ▒ ░░▒░ ░ ░ ░ ░▒ ▒░ ░ ░  ░\\n\" +","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"            \"░   ░     ░     ░ ░   ░        ░ ░ ░ ▒  ░      ░      ░        ░      ░ ░ ░ ▒      ░ ░  ░  ░░░ ░ ░ ░ ░░ ░    ░\";","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"    public static final String DASH \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"            \"________________________________________________________________________________________________________________________\\n\";","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"    public static final String MESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"     * Method to greet user","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"    public static void greeting() {","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(DASH);","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(DASH);","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"     * Method to bid user goodbye","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"    public static void goodbye() {","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"        System.out.println(DASH);","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"yuu-chennn":37}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.exception;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"import static duke.command.Ui.MESSAGE;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    private String message \u003d MESSAGE;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"     * Initializes a new exception.","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    public DukeException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"     * Initializes a new exception with a message.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"        this.message \u003d message;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"     * Method to get error message","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"     * @return string containing error message","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"    public String getMessage() {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"        return message;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuu-chennn":29}},{"path":"src/main/java/duke/exception/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.exception;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class ParserException {","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"     * Thrown when string fails to process.","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"    public static class StringProcessorException extends DukeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"        public StringProcessorException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"        public StringProcessorException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"            super(message);","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"     * Thrown when input is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"    public static class InvalidInputException extends DukeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"        public InvalidInputException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"        public InvalidInputException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"            super(message);","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"     * Thrown when file is not saved.","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"    public static class FileNotSavedException extends DukeException {","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"yuu-chennn"},"content":"        public FileNotSavedException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"yuu-chennn"},"content":"        public FileNotSavedException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"yuu-chennn"},"content":"            super(message);","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"yuu-chennn":40}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public String due;","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public Deadline(String name, String due) {","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"        this.due \u003d due;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"     * Method to print deadline","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"     * @return deadline in print format","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + due + \")\";","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":18}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    protected String time;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"     * Method to print event","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"     * @return event in print format","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"yuu-chennn":19}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public String name;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"    public int num;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    public boolean isDone;","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"    public Task(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"     * Method to get status of completion of task","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"     * @return status of completion of task in print format","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"yuu-chennn"},"content":"    public String getStatus() {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"yuu-chennn"},"content":"            return \"X\";","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"yuu-chennn"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"yuu-chennn"},"content":"            return \" \";","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"yuu-chennn"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"yuu-chennn"},"content":"     * Method to print task","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"yuu-chennn"},"content":"     * @return task in print format","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"yuu-chennn"},"content":"        return \"[\" + getStatus() + \"] \" + name;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"yuu-chennn":31}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuu-chennn"},"content":"package duke.task;","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"yuu-chennn"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"yuu-chennn"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"yuu-chennn"},"content":"    public Todo(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"yuu-chennn"},"content":"        super(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"yuu-chennn"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"yuu-chennn"},"content":"     * Method to print todo","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"yuu-chennn"},"content":"     * @return todo in print format","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"yuu-chennn"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"yuu-chennn"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"yuu-chennn"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"yuu-chennn"},"content":"        return \"[T] \" + super.toString() + \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"yuu-chennn"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"yuu-chennn"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"yuu-chennn":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuu-chennn"},"content":"java -classpath ..\\bin duke.duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuu-chennn":1,"-":20}}]
