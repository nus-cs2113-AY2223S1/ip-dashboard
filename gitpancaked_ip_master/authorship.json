[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"Duke is a Personal Assistant Chatbot that helps a person to keep track of various tasks (Todos, Deadlines and Events). It operates via Command Line Interface (CLI) and is designed for the fast typists. ","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"### Feature-Task Management","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"Tasks of types Todo, Deadline and Event can be added into duke with their description. For","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"deadlines and events, their time can also be entered. Tasks can be listed with their","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"details. Their completion status can be changed. They can be deleted from Duke. They can also be searched for based","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"on their descriptions.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"### Feature-Storage","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"Any action on tasks in Duke is automatically saved to a .txt file. Upon starting the program, tasks are loaded from the save file.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"## Summary","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"Command words are lower case. *Italicized text* in the Format Column indicate where the parameters should be entered. ","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"Description can contain spaces. Position is the 1-based index of the task in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"| Command  | Format                            | Description                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"|----------|-----------------------------------|----------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"| todo     | todo *description*                | add a todo                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"| deadline | deadline *description* /by *time* | add a deadline                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"| event    | event *description* /at *time*    | add an event                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"| list     | list                              | list all tasks                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"| mark     | mark *position*                   | mark a task as done              |","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"| unmark   | unmark *position*                 | mark a task as not done          |","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"| delete   | delete *position*                 | delete a task                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"| find     | find *text*                       | find all task that contains text |","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"| bye      | bye                               | exits program                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"### `todo` - add a todo","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"Adds a todo task with its description into the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"`todo move an immovable rock`","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"The todo is added to the tasks list. Its task type, done status and the total number of tasks is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"gitpancaked"},"content":"I have added this task!","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"gitpancaked"},"content":"[T][ ] move an immovable rock","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"gitpancaked"},"content":"Okay loser! You now have 1 in the list. Get to work!","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"gitpancaked"},"content":"### `deadline` - add a deadline","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"gitpancaked"},"content":"Adds a deadline task with its description and time into the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"gitpancaked"},"content":"`deadline take a poop /by 5`","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"gitpancaked"},"content":"The deadline is added to the tasks list. Its task type, done status, time and the total number of tasks is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"gitpancaked"},"content":"I have added this task!","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"gitpancaked"},"content":"[D][ ] take a poop (by: 5)","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"gitpancaked"},"content":"Okay loser! You now have 2 in the list. Get to work!","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"gitpancaked"},"content":"### `event` - add an event","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"gitpancaked"},"content":"Adds an event task with its description and time into the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"gitpancaked"},"content":"`event the end of all things /at 6`","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"gitpancaked"},"content":"The event is added to the tasks list. Its task type, done status, time and the total number of tasks is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"gitpancaked"},"content":"I have added this task!","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"gitpancaked"},"content":"[E][ ] the end of all things (at: 6)","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"gitpancaked"},"content":"Okay loser! You now have 3 in the list. Get to work!","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"gitpancaked"},"content":"### `list` - list all tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"gitpancaked"},"content":"Lists all the tasks in the tasks list.","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"gitpancaked"},"content":"`list`","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"gitpancaked"},"content":"A list of all the tasks in 1-based indexing and their details.","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"gitpancaked"},"content":"It just keeps piling up","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"gitpancaked"},"content":"1.[T][ ] move an immovable rock","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"gitpancaked"},"content":"2.[D][ ] take a poop (by: 5)","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"gitpancaked"},"content":"3.[E][ ] the end of all things (at: 6)","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"gitpancaked"},"content":"### `mark` - mark a task as done","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"gitpancaked"},"content":"Sets the status of a task to done at the position in the list specified (1-based indexing).","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"gitpancaked"},"content":"`mark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"gitpancaked"},"content":"The task and its details along with its new status is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"gitpancaked"},"content":"I\u0027ve marked this task as done, now go do something else!:","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"gitpancaked"},"content":"[D][X] take a poop (by: 5)","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"gitpancaked"},"content":"### `unmark` - mark a task as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"gitpancaked"},"content":"Sets the status of a task to not done at the position in the list specified (1-based indexing).","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"gitpancaked"},"content":"`unmark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"gitpancaked"},"content":"The task and its details along with its new status is displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"gitpancaked"},"content":"I\u0027ve marked this task as not done, get working!:","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"gitpancaked"},"content":"[D][ ] take a poop (by: 5)","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"gitpancaked"},"content":"### `delete` - delete a task","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"gitpancaked"},"content":"Deletes a task at the specified position (1-based indexing).","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"gitpancaked"},"content":"`delete 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":151,"author":{"gitId":"gitpancaked"},"content":"I\u0027ve deleted this task, lucky!:","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"gitpancaked"},"content":"[T][ ] move an immovable rock","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"gitpancaked"},"content":"You now have 2 tasks left. Yay!","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"gitpancaked"},"content":"### `find` - find a task","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"gitpancaked"},"content":"Finds tasks whose description contains the specified text.","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"gitpancaked"},"content":"`find poop`","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"gitpancaked"},"content":"A list of all tasks that contains the text","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"gitpancaked"},"content":"Look what I found:","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"gitpancaked"},"content":"1.[D][ ] take a poop (by: 5)","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"gitpancaked"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"gitpancaked"},"content":"### `bye` - exit program","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"gitpancaked"},"content":"Exits the program with a goodbye message","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"gitpancaked"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"gitpancaked"},"content":"`bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"gitpancaked"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"gitpancaked"},"content":"Bye. Hope to see you again soon! Groovy!","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"gitpancaked":163,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"import duke.data.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"    static TaskManager Manager \u003d new TaskManager();","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"     * Prints the User Interface associated with the start of the program","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"    static void startSession() {","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"        UI.printLogo();","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"Hello! I\u0027m Duke Nukem\");","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"What can I do for you today? Let\u0027s rock!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"     * Prints the User Interface associated with the end of the program","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"    static void endSession() {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"Bye. Hope to see you again soon! Groovy!\");","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     * Initializes the program","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"        startSession();","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"        String line;","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-25"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"        while (!Parser.checkBye(line)) {","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"            Parser.parse(Manager, line);","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"        endSession();","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gitpancaked":48,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":" * The class Parser has methods to handle the parsing of input strings from the user","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"public class Parser {","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"     * @param line Input string from user","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"     * @return a boolean value true if the string contains \"bye\", false if it does not","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"    static boolean checkBye(String line) {","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"        return line.equals(\"bye\");","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"     * @param line Input string from user","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"     * @return the command from the user","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"    static String getAction(String line) {","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"        return line.split(\" \")[0];","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"     * @param Manager The initialized TaskManager object that handles and contains the task objects","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"     * @param line    Input string from user","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"     * @throws DukeException An exception thrown when the command from the user does not match any","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"     *                       acceptable commands","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"     * @throws IOException   An exception thrown when there is an error during the read and write to","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"     *                       file during the handling of commands from user","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"    static void parse(TaskManager Manager, String line) {","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"        String action \u003d getAction(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"            switch (action) {","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"                Manager.markTasks(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"                Manager.unmarkTasks(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"            case \"list\":","lastModifiedDate":"2022-09-23"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"                Manager.printTasks();","lastModifiedDate":"2022-09-23"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"                Manager.storeTodo(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"gitpancaked"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"gitpancaked"},"content":"                Manager.storeDeadline(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":53,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"gitpancaked"},"content":"            case \"event\":","lastModifiedDate":"2022-09-23"},{"lineNumber":55,"author":{"gitId":"gitpancaked"},"content":"                Manager.storeEvent(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":56,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":57,"author":{"gitId":"gitpancaked"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-23"},{"lineNumber":58,"author":{"gitId":"gitpancaked"},"content":"                Manager.deleteTasks(line);","lastModifiedDate":"2022-09-23"},{"lineNumber":59,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-23"},{"lineNumber":60,"author":{"gitId":"gitpancaked"},"content":"            case \"find\":","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"gitpancaked"},"content":"                Manager.findTasks(line);","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"gitpancaked"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"gitpancaked"},"content":"            default:","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"gitpancaked"},"content":"                throw new DukeException();","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"gitpancaked"},"content":"            }","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"gitpancaked"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Nothing makes any sense\");","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"gitpancaked"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Save file corrupted! Abort mission!\");","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get description of todo","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the todo","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"gitpancaked"},"content":"    public static String parseTodo(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\" \",2);","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-24"},{"lineNumber":81,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":82,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get description of deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"gitpancaked"},"content":"    public static String parseDeadline(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/by \");","lastModifiedDate":"2022-09-24"},{"lineNumber":90,"author":{"gitId":"gitpancaked"},"content":"        return result[0].substring(9);","lastModifiedDate":"2022-09-24"},{"lineNumber":91,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":92,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":93,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get time of deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"gitpancaked"},"content":"     * @return the time of the deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"gitpancaked"},"content":"    public static String parseDeadlineDate(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/by \");","lastModifiedDate":"2022-09-24"},{"lineNumber":100,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-24"},{"lineNumber":101,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":102,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":103,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get description of event","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the event","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"gitpancaked"},"content":"    public static String parseEvent(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/at \");","lastModifiedDate":"2022-09-24"},{"lineNumber":110,"author":{"gitId":"gitpancaked"},"content":"        return result[0].substring(6);","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":112,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":113,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get time of event","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"gitpancaked"},"content":"     * @return the time of the event","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"gitpancaked"},"content":"    public static String parseEventDate(String line) {","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/at \");","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get position of task to be marked","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"gitpancaked"},"content":"     * @return the position","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"gitpancaked"},"content":"    public static String parseMark(String line) {","lastModifiedDate":"2022-09-27"},{"lineNumber":129,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\" \");","lastModifiedDate":"2022-09-27"},{"lineNumber":130,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-27"},{"lineNumber":131,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":132,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":133,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get position of task to be unmarked","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"gitpancaked"},"content":"     * @return the position","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"gitpancaked"},"content":"    public static String parseUnmark(String line) {","lastModifiedDate":"2022-09-27"},{"lineNumber":139,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\" \");","lastModifiedDate":"2022-09-27"},{"lineNumber":140,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-27"},{"lineNumber":141,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":142,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":143,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get position of task to be deleted","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"gitpancaked"},"content":"     * @return the position","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"gitpancaked"},"content":"    public static String parseDelete(String line) {","lastModifiedDate":"2022-09-27"},{"lineNumber":149,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\" \");","lastModifiedDate":"2022-09-27"},{"lineNumber":150,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-27"},{"lineNumber":151,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":153,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"gitpancaked"},"content":"     * parses user input line to get text that the user wants to search among the existing tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"gitpancaked"},"content":"     * @param line the user inputted","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"gitpancaked"},"content":"     * @return the search text","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"gitpancaked"},"content":"    public static String parseFind(String line) {","lastModifiedDate":"2022-09-27"},{"lineNumber":159,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\" \");","lastModifiedDate":"2022-09-27"},{"lineNumber":160,"author":{"gitId":"gitpancaked"},"content":"        return result[1];","lastModifiedDate":"2022-09-27"},{"lineNumber":161,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":162,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":164,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"gitpancaked"},"content":"     * parses line in save file to get description of deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"gitpancaked"},"content":"     * @param line the saved line","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"gitpancaked"},"content":"    public static String parseSaveDeadline(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":170,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/by \");","lastModifiedDate":"2022-09-25"},{"lineNumber":171,"author":{"gitId":"gitpancaked"},"content":"        return result[0].substring(7);","lastModifiedDate":"2022-09-25"},{"lineNumber":172,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":173,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":174,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"gitpancaked"},"content":"     * parses line in save file to get description of event","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"gitpancaked"},"content":"     * @param line the saved line","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the event","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"gitpancaked"},"content":"    public static String parseSaveEvent(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":180,"author":{"gitId":"gitpancaked"},"content":"        String[] result \u003d line.split(\"/at \");","lastModifiedDate":"2022-09-25"},{"lineNumber":181,"author":{"gitId":"gitpancaked"},"content":"        return result[0].substring(7);","lastModifiedDate":"2022-09-25"},{"lineNumber":182,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":183,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":184,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"gitpancaked"},"content":"     * parses line in save file to get description of todo","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"gitpancaked"},"content":"     * @param line the saved line","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"gitpancaked"},"content":"     * @return the description of the todo","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"gitpancaked"},"content":"    public static String parseSaveTodo(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":190,"author":{"gitId":"gitpancaked"},"content":"        String taskDescription \u003d line.substring(7);","lastModifiedDate":"2022-09-25"},{"lineNumber":191,"author":{"gitId":"gitpancaked"},"content":"        return taskDescription;","lastModifiedDate":"2022-09-25"},{"lineNumber":192,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":193,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":194,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"gitpancaked"},"content":"     * parses line in save file to get type of saved task","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"gitpancaked"},"content":"     * @param line the saved line","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"gitpancaked"},"content":"     * @return the task type of the task","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"gitpancaked"},"content":"    public static String parseSaveTaskType(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":200,"author":{"gitId":"gitpancaked"},"content":"        String taskType \u003d line.substring(0, 2);","lastModifiedDate":"2022-09-25"},{"lineNumber":201,"author":{"gitId":"gitpancaked"},"content":"        taskType \u003d taskType.replace(\"[\", \"\");","lastModifiedDate":"2022-09-25"},{"lineNumber":202,"author":{"gitId":"gitpancaked"},"content":"        taskType \u003d taskType.replace(\"]\", \"\");","lastModifiedDate":"2022-09-25"},{"lineNumber":203,"author":{"gitId":"gitpancaked"},"content":"        return taskType;","lastModifiedDate":"2022-09-25"},{"lineNumber":204,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":205,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":206,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":207,"author":{"gitId":"gitpancaked"},"content":"     * parses line in save file to get status of saved task","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"gitpancaked"},"content":"     * @param line the saved line","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"gitpancaked"},"content":"     * @return the status of the task","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"gitpancaked"},"content":"    public static Boolean parseSaveTaskStatus(String line) {","lastModifiedDate":"2022-09-25"},{"lineNumber":212,"author":{"gitId":"gitpancaked"},"content":"        String taskStatus \u003d line.substring(3, 5);","lastModifiedDate":"2022-09-25"},{"lineNumber":213,"author":{"gitId":"gitpancaked"},"content":"        taskStatus \u003d taskStatus.replace(\"[\", \"\");","lastModifiedDate":"2022-09-25"},{"lineNumber":214,"author":{"gitId":"gitpancaked"},"content":"        taskStatus \u003d taskStatus.replace(\"]\", \"\");","lastModifiedDate":"2022-09-25"},{"lineNumber":215,"author":{"gitId":"gitpancaked"},"content":"        if (taskStatus.equals(\"X\"))","lastModifiedDate":"2022-09-25"},{"lineNumber":216,"author":{"gitId":"gitpancaked"},"content":"            return true;","lastModifiedDate":"2022-09-25"},{"lineNumber":217,"author":{"gitId":"gitpancaked"},"content":"        else","lastModifiedDate":"2022-09-25"},{"lineNumber":218,"author":{"gitId":"gitpancaked"},"content":"            return false;","lastModifiedDate":"2022-09-25"},{"lineNumber":219,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":220,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":221,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"gitpancaked":221}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"import duke.data.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-23"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":" * A class that contains an ArrayList of tasks and that contains methods to handle","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":" * operations of the different task and the list","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"public class TaskManager {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    public static ArrayList\u003cTask\u003e Tasks;","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"     * Initializes the TaskManager class which has an ArrayList of tasks and","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"     * also calls the method from Storage class to load tasks saved to the","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"     * save file onto the current list","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    public TaskManager() {","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"        this.Tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"        Storage.loadTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"     * Prints out texts, other UI and the task to signify that the task has been","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"     * successfully added","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     * @param task the task to be signified to the user that it has been successfully","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"     *             added","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"    public void printCompletion(Task task) {","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"I have added this task!\");","lastModifiedDate":"2022-09-23"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(task);","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"Okay loser! You now have \" + Tasks.size() + \" in the list. Get to work!\");","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"     * stores the task represented in the text into the Tasks list","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"     * @param text the text that contains a string which names the task to","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"     *             be stored in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"gitpancaked"},"content":"    public void storeTodo(String text) {","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"gitpancaked"},"content":"            Todo newTodo \u003d new Todo(Parser.parseTodo(text));","lastModifiedDate":"2022-09-24"},{"lineNumber":54,"author":{"gitId":"gitpancaked"},"content":"            Tasks.add(newTodo);","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"gitpancaked"},"content":"            Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"gitpancaked"},"content":"            printCompletion(newTodo);","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Much ado about nothing\");","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"gitpancaked"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"gitpancaked"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"gitpancaked"},"content":"     * stores the deadline represented in the text into the Tasks list","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"gitpancaked"},"content":"     * @param text the text that contains a string which names the deadline to","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"gitpancaked"},"content":"     *             be stored in the list and the deadline time associated with it","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"gitpancaked"},"content":"    public void storeDeadline(String text) {","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":72,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"gitpancaked"},"content":"            Deadline newDeadline \u003d new Deadline(Parser.parseDeadline(text), Parser.parseDeadlineDate(text));","lastModifiedDate":"2022-09-24"},{"lineNumber":74,"author":{"gitId":"gitpancaked"},"content":"            Tasks.add(newDeadline);","lastModifiedDate":"2022-09-24"},{"lineNumber":75,"author":{"gitId":"gitpancaked"},"content":"            Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"gitpancaked"},"content":"            printCompletion(newDeadline);","lastModifiedDate":"2022-09-24"},{"lineNumber":77,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Deadlines, that\u0027s all life\u0027s about, but you gotta tell me which!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"gitpancaked"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"gitpancaked"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":83,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":85,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"gitpancaked"},"content":"     * stores the Event represented in the text into the Tasks list","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"gitpancaked"},"content":"     * @param text the text that contains a string which names the event to","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"gitpancaked"},"content":"     *             be stored in the list and the event time associated with it","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"gitpancaked"},"content":"    public void storeEvent(String text) {","lastModifiedDate":"2022-09-23"},{"lineNumber":92,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":93,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"gitpancaked"},"content":"            Event newEvent \u003d new Event(Parser.parseEvent(text), Parser.parseEventDate(text));","lastModifiedDate":"2022-09-24"},{"lineNumber":95,"author":{"gitId":"gitpancaked"},"content":"            Tasks.add(newEvent);","lastModifiedDate":"2022-09-24"},{"lineNumber":96,"author":{"gitId":"gitpancaked"},"content":"            Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"gitpancaked"},"content":"            printCompletion(newEvent);","lastModifiedDate":"2022-09-24"},{"lineNumber":98,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Which event? An uneventful life is the key to longevity!\");","lastModifiedDate":"2022-09-23"},{"lineNumber":100,"author":{"gitId":"gitpancaked"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"gitpancaked"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-09-25"},{"lineNumber":102,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"gitpancaked"},"content":"     * Prints the task currently contained in the Tasks list, numbered with","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"gitpancaked"},"content":"     * 1 based indexing","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"gitpancaked"},"content":"    public void printTasks() {","lastModifiedDate":"2022-09-09"},{"lineNumber":110,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":111,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"It just keeps piling up\");","lastModifiedDate":"2022-09-09"},{"lineNumber":112,"author":{"gitId":"gitpancaked"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":113,"author":{"gitId":"gitpancaked"},"content":"        for (Task task : Tasks) {","lastModifiedDate":"2022-09-27"},{"lineNumber":114,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(count + \".\" + task);","lastModifiedDate":"2022-09-27"},{"lineNumber":115,"author":{"gitId":"gitpancaked"},"content":"            count++;","lastModifiedDate":"2022-09-09"},{"lineNumber":116,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":117,"author":{"gitId":"gitpancaked"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Maybe find something else to do?\");","lastModifiedDate":"2022-09-27"},{"lineNumber":119,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":120,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":121,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":122,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":123,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"gitpancaked"},"content":"     * Gets the Task at the position(1 based indexing) in the Tasks list","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"gitpancaked"},"content":"     * @param position the index (1 based indexing) of the task in the Tasks list","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"gitpancaked"},"content":"     * @return the task specified at the position","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"gitpancaked"},"content":"    public Task getTask(String position) {","lastModifiedDate":"2022-09-27"},{"lineNumber":130,"author":{"gitId":"gitpancaked"},"content":"        return Tasks.get(Integer.valueOf(position) - 1);","lastModifiedDate":"2022-09-27"},{"lineNumber":131,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":132,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":133,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"gitpancaked"},"content":"     * Marks the task specified at the position in the list as done","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"gitpancaked"},"content":"     * @param text contains the command mark and the position of the task to be marked","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"gitpancaked"},"content":"     * @throws IOException if there is an error during the read/write processes to the save file","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"gitpancaked"},"content":"    public void markTasks(String text) throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":140,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":142,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Mark?!! Mark what?!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":147,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":148,"author":{"gitId":"gitpancaked"},"content":"            Integer.parseInt(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":149,"author":{"gitId":"gitpancaked"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":151,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(position + \"?! You know I only take numbers!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":152,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":154,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":155,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":156,"author":{"gitId":"gitpancaked"},"content":"            Task task \u003d getTask(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":157,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":159,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"You got no task at \" + position + \" you bozo!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":160,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":161,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":162,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":163,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"I\u0027ve marked this task as done, now go do something else!:\");","lastModifiedDate":"2022-09-09"},{"lineNumber":164,"author":{"gitId":"gitpancaked"},"content":"        String position \u003d Parser.parseMark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":165,"author":{"gitId":"gitpancaked"},"content":"        getTask(position).setDone();","lastModifiedDate":"2022-09-27"},{"lineNumber":166,"author":{"gitId":"gitpancaked"},"content":"        Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":167,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(getTask(position));","lastModifiedDate":"2022-09-27"},{"lineNumber":168,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":169,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":170,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":171,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"gitpancaked"},"content":"     * Unmarks the task specified at the position in the list as done","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"gitpancaked"},"content":"     * @param text contains the command unmark and the position of the task to be marked","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"gitpancaked"},"content":"     * @throws IOException if there is an error during the read/write processes to the save file","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"gitpancaked"},"content":"    public void unmarkTasks(String text) throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":178,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":179,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":180,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Unmark?!! Unark what?!\");","lastModifiedDate":"2022-09-09"},{"lineNumber":182,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":183,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":184,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":185,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":186,"author":{"gitId":"gitpancaked"},"content":"            Integer.parseInt(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":187,"author":{"gitId":"gitpancaked"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":189,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(position + \"?! You know I only take numbers!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":190,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":192,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":193,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":194,"author":{"gitId":"gitpancaked"},"content":"            Task task \u003d getTask(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":195,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":196,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":197,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"You got no task at \" + position + \" you bozo!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":198,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-09"},{"lineNumber":199,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":200,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":201,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":202,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"I\u0027ve marked this task as not done, get working!:\");","lastModifiedDate":"2022-09-09"},{"lineNumber":203,"author":{"gitId":"gitpancaked"},"content":"        String position \u003d Parser.parseUnmark(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":204,"author":{"gitId":"gitpancaked"},"content":"        getTask(position).setNotDone();","lastModifiedDate":"2022-09-27"},{"lineNumber":205,"author":{"gitId":"gitpancaked"},"content":"        Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":206,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(getTask(position));","lastModifiedDate":"2022-09-27"},{"lineNumber":207,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":208,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":209,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":210,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"gitpancaked"},"content":"     * Deletes the task specified at the position in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":213,"author":{"gitId":"gitpancaked"},"content":"     * @param text contains the command delete and the position of the task","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"gitpancaked"},"content":"     * @throws IOException if there is an error during the read/write processes to the save file","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"gitpancaked"},"content":"    public void deleteTasks(String text) throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":218,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-23"},{"lineNumber":219,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":220,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":221,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Delete?!! Delete what?!\");","lastModifiedDate":"2022-09-24"},{"lineNumber":222,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-24"},{"lineNumber":223,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":224,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-24"},{"lineNumber":225,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":226,"author":{"gitId":"gitpancaked"},"content":"            Integer.parseInt(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":227,"author":{"gitId":"gitpancaked"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":229,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(position + \"?! You know I only take numbers!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":230,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-24"},{"lineNumber":231,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":232,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-24"},{"lineNumber":233,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":234,"author":{"gitId":"gitpancaked"},"content":"            Task task \u003d getTask(position);","lastModifiedDate":"2022-09-27"},{"lineNumber":235,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":236,"author":{"gitId":"gitpancaked"},"content":"            String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":237,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"You got no task at \" + position + \" you bozo!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":238,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-23"},{"lineNumber":239,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":240,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":241,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":242,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"I\u0027ve deleted this task, lucky!:\");","lastModifiedDate":"2022-09-24"},{"lineNumber":243,"author":{"gitId":"gitpancaked"},"content":"        String position \u003d Parser.parseDelete(text);","lastModifiedDate":"2022-09-27"},{"lineNumber":244,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(getTask(position));","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"gitpancaked"},"content":"        Tasks.remove(Integer.valueOf(position) - 1);","lastModifiedDate":"2022-09-27"},{"lineNumber":246,"author":{"gitId":"gitpancaked"},"content":"        Storage.saveTasks(Tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":247,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"You now have \" + Tasks.size() + \" tasks left. Yay!\");","lastModifiedDate":"2022-09-24"},{"lineNumber":248,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":249,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":250,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":251,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"gitpancaked"},"content":"     * adds a task that was found from the save file","lastModifiedDate":"2022-09-29"},{"lineNumber":253,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":254,"author":{"gitId":"gitpancaked"},"content":"     * @param task  to be added","lastModifiedDate":"2022-09-29"},{"lineNumber":255,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":256,"author":{"gitId":"gitpancaked"},"content":"    public static void addFromStorage(Task task) {","lastModifiedDate":"2022-09-25"},{"lineNumber":257,"author":{"gitId":"gitpancaked"},"content":"        Tasks.add(task);","lastModifiedDate":"2022-09-25"},{"lineNumber":258,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":259,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":260,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"gitpancaked"},"content":"     * Finds a Task in the current Tasks list whose description contains the text provided","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"gitpancaked"},"content":"     * @param text that is to be searched","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"gitpancaked"},"content":"    public void findTasks(String text) {","lastModifiedDate":"2022-09-27"},{"lineNumber":266,"author":{"gitId":"gitpancaked"},"content":"        try {","lastModifiedDate":"2022-09-27"},{"lineNumber":267,"author":{"gitId":"gitpancaked"},"content":"            String find \u003d Parser.parseFind(text);","lastModifiedDate":"2022-09-28"},{"lineNumber":268,"author":{"gitId":"gitpancaked"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-27"},{"lineNumber":269,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Find?!! Find what?!\");","lastModifiedDate":"2022-09-27"},{"lineNumber":270,"author":{"gitId":"gitpancaked"},"content":"            return;","lastModifiedDate":"2022-09-27"},{"lineNumber":271,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":272,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":273,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"Look what I found:\");","lastModifiedDate":"2022-09-27"},{"lineNumber":274,"author":{"gitId":"gitpancaked"},"content":"        int count \u003d 1;","lastModifiedDate":"2022-09-27"},{"lineNumber":275,"author":{"gitId":"gitpancaked"},"content":"        String find \u003d Parser.parseFind(text);","lastModifiedDate":"2022-09-28"},{"lineNumber":276,"author":{"gitId":"gitpancaked"},"content":"        for (Task task : Tasks) {","lastModifiedDate":"2022-09-27"},{"lineNumber":277,"author":{"gitId":"gitpancaked"},"content":"            if (task.getDescription().contains(find)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":278,"author":{"gitId":"gitpancaked"},"content":"                System.out.println(count + \".\" + task);","lastModifiedDate":"2022-09-27"},{"lineNumber":279,"author":{"gitId":"gitpancaked"},"content":"                count++;","lastModifiedDate":"2022-09-27"},{"lineNumber":280,"author":{"gitId":"gitpancaked"},"content":"            }","lastModifiedDate":"2022-09-27"},{"lineNumber":281,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":282,"author":{"gitId":"gitpancaked"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2022-09-27"},{"lineNumber":283,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Just about nothin\u0027\");","lastModifiedDate":"2022-09-27"},{"lineNumber":284,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":285,"author":{"gitId":"gitpancaked"},"content":"        UI.printLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":286,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":287,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-09-09"},{"lineNumber":288,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":289,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"gitpancaked":289}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke;","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"public class UI {","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"     * A concatenation of strings that visually represents the word Duke","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"     * A string visually repressing a line","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"    private static final String LINEBREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"     * prints the LINEBREAK String","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"    static void printLine() {","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"     * prints the LOGO string preceded by a Hello from greeting","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"    static void printLogo() {","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"gitpancaked":31}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.data;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"import duke.TaskManager;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"import java.io.File;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"public class Storage {","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"    private static final String FILE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"     * Save the tasks in the existing arraylist to a .txt file duke in the data folder","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"     * @param tasks The tasks currently in the list in the program","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"     * @throws IOException If errors occur during file operations","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"        Path fileDir \u003d Paths.get(FILE_DIRECTORY);","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"        if (Files.notExists(fileDir)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"            Files.createDirectories(fileDir);","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Creating save file location!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"        Path file \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"        if (Files.notExists(file)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"            Files.createFile(file);","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"Autosaving for the first time!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"gitpancaked"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"gitpancaked"},"content":"            try {","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"gitpancaked"},"content":"                writer.write(task.toSaveString() + \"\\n\");","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"gitpancaked"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"gitpancaked"},"content":"                // Error when writing to the file","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"gitpancaked"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"gitpancaked"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"gitpancaked"},"content":"        writer.close();","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"gitpancaked"},"content":"     * Write the tasks stored in the duke.txt file in folder data into the current list of tasks in the program","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"gitpancaked"},"content":"     * @param tasks The tasks currently in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"gitpancaked"},"content":"    public static void loadTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"gitpancaked"},"content":"        Path fileDir \u003d Paths.get(FILE_DIRECTORY);","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"gitpancaked"},"content":"        if (Files.notExists(fileDir)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"You have no save folder!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"gitpancaked"},"content":"        Path file \u003d Paths.get(FILE_PATH);","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"gitpancaked"},"content":"        if (Files.notExists(file)) {","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"gitpancaked"},"content":"            System.out.println(\"You have no save file! Hardcore mode?\");","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"gitpancaked"},"content":"        } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"gitpancaked"},"content":"            try {","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"gitpancaked"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"gitpancaked"},"content":"                String line \u003d \"\";","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"gitpancaked"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"gitpancaked"},"content":"                    String taskType \u003d Parser.parseSaveTaskType(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"gitpancaked"},"content":"                    Boolean isDone \u003d Parser.parseSaveTaskStatus(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"gitpancaked"},"content":"                    switch (taskType) {","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"gitpancaked"},"content":"                    case \"T\":","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"gitpancaked"},"content":"                        String taskDescription \u003d Parser.parseSaveTodo(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"gitpancaked"},"content":"                        Todo todo \u003d new Todo(taskDescription);","lastModifiedDate":"2022-09-25"},{"lineNumber":85,"author":{"gitId":"gitpancaked"},"content":"                        if (isDone) {","lastModifiedDate":"2022-09-25"},{"lineNumber":86,"author":{"gitId":"gitpancaked"},"content":"                            todo.setDone();","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"gitpancaked"},"content":"                        }","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"gitpancaked"},"content":"                        TaskManager.addFromStorage(todo);","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":90,"author":{"gitId":"gitpancaked"},"content":"                        break;","lastModifiedDate":"2022-09-25"},{"lineNumber":91,"author":{"gitId":"gitpancaked"},"content":"                    case \"D\":","lastModifiedDate":"2022-09-25"},{"lineNumber":92,"author":{"gitId":"gitpancaked"},"content":"                        String deadlineDescription \u003d Parser.parseSaveDeadline(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"gitpancaked"},"content":"                        String dateDeadline \u003d Parser.parseDeadlineDate(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":94,"author":{"gitId":"gitpancaked"},"content":"                        Deadline deadline \u003d new Deadline(deadlineDescription, dateDeadline);","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"gitpancaked"},"content":"                        if (isDone) {","lastModifiedDate":"2022-09-25"},{"lineNumber":96,"author":{"gitId":"gitpancaked"},"content":"                            deadline.setDone();","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"gitpancaked"},"content":"                        }","lastModifiedDate":"2022-09-25"},{"lineNumber":98,"author":{"gitId":"gitpancaked"},"content":"                        TaskManager.addFromStorage(deadline);","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"gitpancaked"},"content":"                        break;","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"gitpancaked"},"content":"                    case \"E\":","lastModifiedDate":"2022-09-25"},{"lineNumber":101,"author":{"gitId":"gitpancaked"},"content":"                        String eventDescription \u003d Parser.parseSaveEvent(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":102,"author":{"gitId":"gitpancaked"},"content":"                        String dateEvent \u003d Parser.parseEventDate(line);","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"gitpancaked"},"content":"                        Event event \u003d new Event(eventDescription, dateEvent);","lastModifiedDate":"2022-09-25"},{"lineNumber":104,"author":{"gitId":"gitpancaked"},"content":"                        if (isDone) {","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"gitpancaked"},"content":"                            event.setDone();","lastModifiedDate":"2022-09-25"},{"lineNumber":106,"author":{"gitId":"gitpancaked"},"content":"                        }","lastModifiedDate":"2022-09-25"},{"lineNumber":107,"author":{"gitId":"gitpancaked"},"content":"                        TaskManager.addFromStorage(event);","lastModifiedDate":"2022-09-25"},{"lineNumber":108,"author":{"gitId":"gitpancaked"},"content":"                        break;","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"gitpancaked"},"content":"                    default:","lastModifiedDate":"2022-09-25"},{"lineNumber":110,"author":{"gitId":"gitpancaked"},"content":"                        System.out.println(\"Alien encounter! Get a flamethrower or Ellen Ripley!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":111,"author":{"gitId":"gitpancaked"},"content":"                        break;","lastModifiedDate":"2022-09-25"},{"lineNumber":112,"author":{"gitId":"gitpancaked"},"content":"                    }","lastModifiedDate":"2022-09-25"},{"lineNumber":113,"author":{"gitId":"gitpancaked"},"content":"                }","lastModifiedDate":"2022-09-25"},{"lineNumber":114,"author":{"gitId":"gitpancaked"},"content":"                System.out.println(\"Lock and Loaded your save!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"gitpancaked"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":116,"author":{"gitId":"gitpancaked"},"content":"                // Error when reading the file","lastModifiedDate":"2022-09-25"},{"lineNumber":117,"author":{"gitId":"gitpancaked"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-09-25"},{"lineNumber":118,"author":{"gitId":"gitpancaked"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":119,"author":{"gitId":"gitpancaked"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":120,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":121,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":122,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":123,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"gitpancaked":123}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":" * An exception that occurs when the parse method in Parser class takes in a String as command that is","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":" * not part of any acceptable command","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-23"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"    protected final String error_message \u003d \"Nothing makes any sense\";","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-23"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"        return error_message;","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"gitpancaked":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.task;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"    String by;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"     * Initializes a Deadline class","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"     * @param description What the deadline is about","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"     * @param by          Time or Date the deadline is stated to be finished by","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"     * Concatenates the task type, isDone and description value and the time of deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"     *         and the time of the deadline enclosed in brackets","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"     * Similar to toString however close brackets are not included to make it easier to read","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"     *         and the time of the deadline","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"        return \"[D]\" + super.toString() + \"/by \" + by;","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"     * @return type of task","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"    public String getType() {","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"        return \"D\";","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"gitpancaked":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.task;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"    String at;","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"     * Initializes aa Event class","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"     * @param description What the event is about","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"     * @param at          Time or Date the event is stated to start","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"     * Concatenates the task type, isDone and description value and the time of event","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"     *         and the time of the event enclosed in brackets","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"     * Similar to toString however close brackets are not included to make it easier to read","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"     *         and the time of the event","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"        return \"[E]\" + super.toString() + \"/at \" + at;","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"     * @return type of task","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"    public String getType() {","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"        return \"E\";","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"gitpancaked":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.task;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"public class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"    String description;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"     * A boolean value identifying whether the task is completed","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"    boolean isDone;","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"     * Initializes a Task class","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"     * @param description What the task is about","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"     * @return an X character if the isDone value is true, return a space character if false","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"     * @return the description value of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"        return description;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"     * @return the isDone value of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"        return isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":39,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"gitpancaked"},"content":"     * sets the isDone value to true","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"gitpancaked"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":45,"author":{"gitId":"gitpancaked"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":46,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":47,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":48,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"gitpancaked"},"content":"     * sets the isDone value to false","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"gitpancaked"},"content":"    public void setNotDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":52,"author":{"gitId":"gitpancaked"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":54,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"gitpancaked"},"content":"     * Changes the description value of a task to a new description","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"gitpancaked"},"content":"     * @param description What the task is about","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"gitpancaked"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":61,"author":{"gitId":"gitpancaked"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":62,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":63,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":64,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"gitpancaked"},"content":"     * Concatenates the isDone and description value and square brackets","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"gitpancaked"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":70,"author":{"gitId":"gitpancaked"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-09-02"},{"lineNumber":71,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":72,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":73,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"gitpancaked"},"content":"     * Similar to toString in the Task class however is overrided in a different way in its children classes","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"gitpancaked"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"gitpancaked"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"gitpancaked"},"content":"     * @return type of the Task","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"gitpancaked"},"content":"    public String getType() {","lastModifiedDate":"2022-09-25"},{"lineNumber":86,"author":{"gitId":"gitpancaked"},"content":"        return \"\";","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"gitpancaked":88}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"package duke.task;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"     * Initializes aa Todo class","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"     * @param description What the todo is about","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"gitpancaked"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"gitpancaked"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"gitpancaked"},"content":"     * Concatenates the task type, isDone and description value of the todo","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"gitpancaked"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"gitpancaked"},"content":"    public String toString() {","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"gitpancaked"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-31"},{"lineNumber":21,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"gitpancaked"},"content":"     * Similar to toString","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"gitpancaked"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"gitpancaked"},"content":"     * @return a String with the task type isDone value enclosed by two square brackets followed by its description","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"gitpancaked"},"content":"    public String toSaveString() {","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"gitpancaked"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"gitpancaked"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"gitpancaked"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"gitpancaked"},"content":"     * @return type of the Task","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"gitpancaked"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"gitpancaked"},"content":"    public String getType(){","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"gitpancaked"},"content":"        return \"T\";","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"gitpancaked"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"gitpancaked"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"gitpancaked":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gitpancaked"},"content":"todo borrow book","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"gitpancaked"},"content":"list","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"gitpancaked"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"gitpancaked"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"gitpancaked"},"content":"mark 1","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"gitpancaked"},"content":"mark 2","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"gitpancaked"},"content":"unmark 1","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"gitpancaked"},"content":"bye","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"gitpancaked":8}}]
