[{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":"Duke is a **Command Line Interface** (CLI) based desktop application which ","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":"will help the user plan their tasks. It allows users to add or delete three categories of tasks: todos, deadlines,","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"and events. They can mark these as done or not done and can also see a list of their tasks at","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"any particular point in time. Additionally, they can search for all tasks containing a particular keyword. ","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"The application will save the tasks and reload them every time the user restarts the application so it can store the list as a memory.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"### Feature - add a task","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"Adds a task to the current list of tasks. The task could either be a todo, a deadline, or an event. ","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"### Feature - delete a task","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"Deletes a task from the current list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"### Feature - list all tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"Lists all tasks present in the current list.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"### Feature - mark a task","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"Marks a particular task from the list as done","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"### Feature - unmark a task","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"Marks a particular task from the list as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"### Feature - find tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"Finds all tasks present in the current list that contain the word entered by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"## Usage (An example workflow)","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"## `todo` - Adds a todo to the collection of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"todo DESCRIPTION_OF_TASK","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:* ","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"`todo read book`","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"\u0027read book\u0027 will be added to the task list as a todo and currently be marked as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"todo read book ","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"## `deadline` - Adds a deadline to the collection of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"deadline DESCRIPTION_OF_TASK /by DEADLINE_OF_TASK","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"`deadline return book /by Tuesday`","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"\u0027return book\u0027 will be added to the task list as a dealine and currently be marked as not done. The deadline of the event will be stored as \u0027Tuesday\u0027","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"deadline return book /by Tuesday ","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"## `event` - Adds an event to the collection of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"event DESCRIPTION_OF_TASK /at TIME_OF_TASK","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"`event go to party /at 6PM`","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"\u0027go to party\u0027 will be added to the task list as an event and currently be marked as not done. The time of the event will be stored as \u00276PM\u0027","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"event go to party /at 6PM ","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"## `delete` - Deletes a task from the collection of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"delete POSITION_TO_DELETE","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"`delete 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"Currently, the second task in the list is the deadline to \u0027return book\u0027 so this task will be deleted.","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ishitamandal06"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"ishitamandal06"},"content":"[D][ ] return book (by: Tuesday) ","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"ishitamandal06"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"ishitamandal06"},"content":"## `list` - Lists all tasks in the collection ","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"ishitamandal06"},"content":"list","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"ishitamandal06"},"content":"`list`","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"ishitamandal06"},"content":"Currently, the collection has 2 tasks: \u0027todo read book\u0027 and \u0027event go to party /at 6PM\u0027 so these two tasks will be listed.","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"ishitamandal06"},"content":"[T][ ] read book ","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ishitamandal06"},"content":"[E][ ] go to party (at: 6PM) ","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"ishitamandal06"},"content":"## `mark` - marks a task in the collection as done","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"ishitamandal06"},"content":"mark POSITION_TO_MARK","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ishitamandal06"},"content":"`mark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"ishitamandal06"},"content":"The second task is currently \u0027go to party /at 6PM\u0027. This will be marked as done.","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"ishitamandal06"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"ishitamandal06"},"content":"[E][X] go to party (at: 6PM) ","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"ishitamandal06"},"content":"## `unmark` - marks a task in the collection as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"ishitamandal06"},"content":"unmark POSITION_TO_UNMARK","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"ishitamandal06"},"content":"`unmark 2`","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"ishitamandal06"},"content":"The second task is currently \u0027go to party /at 6PM\u0027. This will be marked as not done.","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"ishitamandal06"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"ishitamandal06"},"content":"[E][ ] go to party (at: 6PM) ","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"ishitamandal06"},"content":"## `find` - finds all tasks in the collection which contain the word entered by user","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"ishitamandal06"},"content":"find WORD_TO_FIND","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"ishitamandal06"},"content":"`find book`","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"ishitamandal06"},"content":"The first task is the only task which contains the word \u0027book\u0027 so that will be displayed.","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":188,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"ishitamandal06"},"content":"[T][ ] read book ","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":192,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"ishitamandal06"},"content":"## `bye` - closes the application","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"ishitamandal06"},"content":"#### *General format of command*","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"ishitamandal06"},"content":"bye","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"ishitamandal06"},"content":"#### *Example of usage:*","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"ishitamandal06"},"content":"`bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"ishitamandal06"},"content":"#### *Expected outcome:*","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"ishitamandal06"},"content":"The application closes","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"ishitamandal06"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"ishitamandal06"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"ishitamandal06"},"content":"```","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":188,"-":20}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Deadline class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * extends the Task class to store a particular type of task (deadline)","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * contains a description of the task (String description)","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" * contains a deadline (String by)","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"    protected String by;","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"        super(description);","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    public String toString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"ishitamandal06":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Main Duke class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * runs the main operations of the Application","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-22"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"import java.io.File;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"    static String inputText \u003d \"\";","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"    static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-22"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    static ArrayList\u003cString\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    static int taskCount \u003d 0;","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"    static boolean isRunning \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"    public static void main(String[] args) throws NullCommandException, IOException {","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"        File f \u003d  new File(\"data.txt\");","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"        if(f.exists()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"                storedTasks.add(s.nextLine());","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"            handleStoredTasks();","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"            FileWriter fw \u003d new FileWriter(\"data.txt\");","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"            UI.welcomeMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"            handleUserInput();","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"            fw.close();","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleStoredTasks(){","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"        TaskList.handleStoredTasks(storedTasks,tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleListMessage(){","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"        UI.listMessage(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     * Adds new task to collection based on command type.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"     * @param command which specifies whether it is todo, deadline, or an event","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"    public static void addNewTask(String command) {","lastModifiedDate":"2022-09-14"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"        TaskList.addTask(command, tasks, inputText);","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"     * Deletes task from the collection at the position specified by user","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"     * @param position specifies which task number to delete","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleDeleteCommand(int position) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"        TaskList.deleteTask(position,tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"     * handles any command from user to mark or unmark a task","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"     * @param position specifies which task in the collection to mark","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleMarkMessage(int position){","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"        if ((inputText.substring(0,4).equals(\"mark\"))){","lastModifiedDate":"2022-09-03"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"            TaskList.markTask(position, tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"        }else{","lastModifiedDate":"2022-09-03"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"            TaskList.unmarkTask(position, tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"     * handles a command from user to search for all tasks with a specific word","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"     * @param word specifies which word to search for in collection","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"      public static void handleFindMessage(String word){","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"        TaskList.findTask(tasks,word);","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"     * Runs the program, takes input from user and carries out all operations till the user enters bye","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"     * when user enters bye, program is closed","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"     * based on the type of command entered by the user, different functions are called.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleUserInput() {","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"            while(isRunning){","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"                    inputText \u003d UI.getInput();","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"                    String command \u003d Parser.parseCommand(inputText);","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"                   if(command.equals(\"bye\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"                        isRunning \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"                        UI.exitMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"                    } else if (command.equals(\"list\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"                        handleListMessage();","lastModifiedDate":"2022-09-03"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"                    }else if ((command.equals(\"mark\")) || command.equals(\"unmark\") ) {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"                       int position \u003d Parser.getPositionFromInput(inputText);","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"                        handleMarkMessage(position);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"                    }else if(command.equals(\"delete\")){","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"                        handleDeleteCommand(Parser.getDeletePosition(inputText));","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ishitamandal06"},"content":"                    } else if (command.equals(\"find\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"                       String word \u003d Parser.parseFindCommand(inputText);","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"                       handleFindMessage(word);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"                   } else{","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"                        addNewTask(Parser.getTaskType(inputText));","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"                    }","lastModifiedDate":"2022-09-03"},{"lineNumber":108,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ishitamandal06":107,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Event class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * extends the Task class to store a particular type of task (event)","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * contains a description of the task (String description)","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" * contains a time when the event will take place (String at)","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"public class Event extends Task{","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"    protected String at;","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"        super(description);","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"    public String toString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-09-05"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"ishitamandal06":20}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"ishitamandal06":2}},{"path":"src/main/java/NullCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"public class NullCommandException extends Exception {","lastModifiedDate":"2022-09-14"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-14"}],"authorContributionMap":{"ishitamandal06":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Parser class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * Parses any input entered by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * Contains different kinds of methods to parse the input for different types of operations","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"public class Parser {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"     * Finds the position from input text of the task that needs to be marked or unmarked","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText the text from which the position needs to be extracted","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"     *                  In String format","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"     *                  In the format entered by the user in the CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"     * @return returns an integer containing the position of the task which has to be marked or unmarked","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"    public static int getPositionFromInput(String inputText){","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"        return Integer.parseInt(inputText.substring(inputText.length()-1));","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     * Finds the position from the input text of the task that needs to be deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText the text from which the position needs to be extracted","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"     *                  In String format","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"     *                  In the format entered by the user in the CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"     * @return returns an integer containing the position of the task which has to be deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"    public static int getDeletePosition(String inputText){","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        int pos \u003d Integer.parseInt(inputText.substring(7,8));","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"        return pos;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"     * Finds the type of task (todo, deadline, or event) from the input text","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText the text from which the type of task needs to be extracted","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"     *                  In String format","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"     *                  In the format entered by the user in the CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"     * @return returns a String specifying the type of task","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"     * If the task is todo, returns \"todo\"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     * If the task is a deadline, returns \"deadline\"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     * If the task is an event, returns \"event\"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"    public static String getTaskType(String inputText){","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"        String[] splitText \u003d inputText.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"        return splitText[0];","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"     * Parses the find command entered by user from the input text to extract the word which the user wants to look for","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     * if the command has only the find word and the remaining part of it is empty, it throws an InvalidCommandException","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"     * if the command has mmore than one word to search for, it throws an InvalidCommandException.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText a string containing the entire input given by the user using CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"     * @return a String containing the word the user is searching for","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"    public static String parseFindCommand(String inputText){","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"        String word \u003d \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"        String[] splitText \u003d inputText.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"            if (splitText.length !\u003d 2 || splitText[1] \u003d\u003d null || splitText[1] \u003d\u003d \"\") {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"            } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"                word \u003d  splitText[1];","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"Please enter one valid word to find\");","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"        return word;","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"     * Parses the input text from the user to find the command type given by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"     * If the command is empty, it throws a NUllCommandException","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText a string containing the entire input given by the user using CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"     * @return returns a string giving the exact type of command entered by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"    public static String parseCommand(String inputText){","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"        String command \u003d \"\";","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"            String[] splitText \u003d inputText.split(\" \");","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"            if(splitText.length \u003d\u003d 0 || splitText[0].length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"                throw new NullCommandException();","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"            }else if(splitText[0].equals(\"bye\")){","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"                command \u003d \"bye\";","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"            }else if (splitText[0].equals(\"list\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"                command \u003d \"list\";","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"            }else if ((splitText[0].equals(\"mark\"))  ) {","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"               command \u003d \"mark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"            }else if (splitText[0].equals(\"unmark\") ) {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"                command \u003d \"unmark\";","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"            }else if(splitText[0].equals(\"delete\")){","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"               command \u003d \"delete\";","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"            }else if(splitText[0].equals(\"find\")){","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"                command \u003d \"find\";","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"            else{","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"                command \u003d \"task\";","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"        } catch(NullCommandException e){","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"Empty command. Please try again.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"        return command;","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":101}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Task class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * stores all types of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * contains a description of task (String description)","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" * contains a status of the task (boolean isDone)","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"public class Task {","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"    protected String description;","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"    public Task(String description) {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"     * Finds out whether the task is done or not done","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"     * @return \"X\" if the task is done or \" \" if the task is not done in String format","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"    public void markAsDone(){","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"        if (isDone \u003d\u003d false) {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"    public void markAsUndone(){","lastModifiedDate":"2022-09-03"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"        if(isDone \u003d\u003d true){","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"    public String toString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"        return \"[\" + this.getStatusIcon()+\"] \" + this.description;","lastModifiedDate":"2022-09-05"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"    //...","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"ishitamandal06":42}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * TaskList class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * Contains all the operations to be peformed on the collection of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * Functions include:","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" * Add: adding a task","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":" * Delete: Deleting a task","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":" * Mark: Marking a task as done","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":" * Unmark: Marking a task as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":" * Find: Finding all tasks with a specific word in them","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":" * handle stored tasks: Retrieving previously stored tasks in file","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"public class TaskList {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"     * Adds a task to the collection based on type: Todo, Deadline, or Event","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"     * if the command is not of a particular type (Todo, Deadline, or Event), the function throws an InvalidCommandException and asks for input again","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"     * in the end, a message is displayed to show that the task has been added","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"     * @param command specifies the type of task: Todo, Deadline, or Event","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection on which operation needs to be performed (adding in this case)","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"     * @param inputText contains the user input from which the details of the task to be added is extracted","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"     *                  in the same format as  entered by the user in the CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"     *                  in case of todo, it is just the description","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"     *                  if case of deadline, it contains description and /by","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"     *                  in case of event, it contains description and /at","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"    public static void addTask(String command, ArrayList\u003cTask\u003e tasks, String inputText) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Todo(inputText.substring(5)));","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Deadline(inputText.substring(9, inputText.indexOf(\u0027/\u0027)), inputText.substring(inputText.indexOf(\u0027/\u0027) + 4)));","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Event(inputText.substring(6, inputText.indexOf(\u0027/\u0027)), inputText.substring(inputText.indexOf(\u0027/\u0027) + 4)));","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"            } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"            UI.addMessage(inputText, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"This is not a valid command.Please re-enter a valid command\");","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"     * Deletes a task from the collection at a position specified by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"     * in the end, a message is displayed to show that the task has been deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"     * @param position specifies the position of the task which has to be deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection on which operation needs to be performed (deleting in this case)","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"    public static void deleteTask(int position, ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"        String str \u003d tasks.get(position-1).toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"        tasks.remove(position-1);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"        UI.deleteMessage(str, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"     * Marks a task as done in the collection at a position specified by user","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"     * in the end, displays a message showing that the task has been marked as done","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"     * @param position specifies the position of the task which has to be marked as done","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection on which operation needs to be performed (marking as done in this case)","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"    public static void markTask(int position,ArrayList\u003cTask\u003e tasks ){","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"        tasks.get(position-1).markAsDone();","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"        UI.markMessage(\"mark\",tasks.get(position-1).description,tasks.get(position-1).getStatusIcon() );","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"     * Marks a task as not done in the collection at a position specified by user","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"     * in the end, displays a message showing that the task has been marked as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"     * @param position specifies the position of the task which has to be marked as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection on which operation needs to be performed (marking as not done in this case)","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"    public static void unmarkTask(int position,ArrayList\u003cTask\u003e tasks ){","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"        tasks.get(position-1).markAsUndone();","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"        UI.markMessage(\"unmark\",tasks.get(position-1).description,tasks.get(position-1).getStatusIcon() );","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"     * Finds all tasks in the collection which contain the word entered by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"     * in the end, displays the list of lasts found which contain the word given by user","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection on which operation needs to be performed (searching in this case)","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"     * @param word The word to be searched for","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"     *             in String format","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"    public static void findTask(ArrayList\u003cTask\u003e tasks , String word){","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"        for(int i\u003d0;i\u003ctasks.size();i++){","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"            String str \u003d tasks.get(i).description;","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"            if (str.contains(word)){","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"                tasksFound.add(tasks.get(i));","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"        UI.listMessage(tasksFound);","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"     * Reads memory of any previously stored tasks in the data.txt file and loads it to the collection being used at runtime","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"     * The previously stored tasks are in String format and are parsed before adding to the current collection being used","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"     * Once the data is loaded to the collection, the rest of the task operations are carried out based on commands entered by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ishitamandal06"},"content":"     * @param storedTasks is a reference to the ArrayList of tasks that were read from the data.txt file","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"     *                    each task is stored as a String","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"     *                    the tasks are in toString() format:[TASK_TYPE][STATUS] DESCRIPTION (DEADLINE_BY/EVENT_AT)","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the collection to which the previous tasks need to be added.","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"     *              Once they are added, this collection is used for the rest of the runtime","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"ishitamandal06"},"content":"    public static void handleStoredTasks(ArrayList\u003cString\u003e storedTasks, ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"ishitamandal06"},"content":"        for (String str : storedTasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"ishitamandal06"},"content":"            if (str.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Todo(str.substring(7)));","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"ishitamandal06"},"content":"                if (str.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"ishitamandal06"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"ishitamandal06"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"ishitamandal06"},"content":"            if (str.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Deadline(str.substring(7, str.indexOf(\u0027(\u0027)), str.substring(str.indexOf(\u0027(\u0027) + 4, str.indexOf(\u0027)\u0027))));","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"ishitamandal06"},"content":"                if (str.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"ishitamandal06"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"ishitamandal06"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"ishitamandal06"},"content":"            if (str.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"ishitamandal06"},"content":"                tasks.add(new Event(str.substring(7, str.indexOf(\u0027(\u0027)), str.substring(str.indexOf(\u0027(\u0027) + 4, str.indexOf(\u0027)\u0027))));","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"ishitamandal06"},"content":"                if (str.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"ishitamandal06"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"ishitamandal06"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":132}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * Todo class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * extends Task class to store a particular type of task (todo)","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * contains a description of the task (String description)","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"        super(description);","lastModifiedDate":"2022-09-05"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-05"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"    @Override","lastModifiedDate":"2022-09-05"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"    public String toString() {","lastModifiedDate":"2022-09-05"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2022-09-05"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-05"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-05"}],"authorContributionMap":{"ishitamandal06":16}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":" * UI.java class","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"ishitamandal06"},"content":" * Handles all interactions with the user","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"ishitamandal06"},"content":" * contains all messages to be printed in different scenarios","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"ishitamandal06"},"content":" * takes input from user and returns it","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"ishitamandal06"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"ishitamandal06"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"ishitamandal06"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"ishitamandal06"},"content":"public class UI {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ishitamandal06"},"content":"    public static final String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ishitamandal06"},"content":"     * Contains the welcome message to be printed at the beginning of runtime","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ishitamandal06"},"content":"    public static void welcomeMessage(){","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ishitamandal06"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ishitamandal06"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ishitamandal06"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ishitamandal06"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ishitamandal06"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ishitamandal06"},"content":"     * Contains the exit message to be printed before closing the application","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ishitamandal06"},"content":"    public static void exitMessage(){","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ishitamandal06"},"content":"     * Contains the message to be printed after a task has been added to the collection","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"ishitamandal06"},"content":"     * @param message specifies the entire command given by the user","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"ishitamandal06"},"content":"     *                it is in the same format as entered by the user in CLI","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ishitamandal06"},"content":"     * @param taskCount specifies the total number of tasks in the collection after adding the new task","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ishitamandal06"},"content":"    public static void addMessage(String message, int taskCount){","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"+message +\"\\n\"+\"Now you have \"+taskCount+ \" tasks in the list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ishitamandal06"},"content":"     * contains the message to be printed after a task has been deleted from the collection","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"ishitamandal06"},"content":"     * @param message Contains details of the task that has been deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"ishitamandal06"},"content":"     *                In the toString() format: [TASK_TYPE][STATUS] DESCRIPTION (DEADLINE_BY/EVENT_AT)","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ishitamandal06"},"content":"     * @param taskCount specifies the total number of tasks in the collection after deleting the task","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ishitamandal06"},"content":"    public static void deleteMessage(String message, int taskCount){","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"Now you have \"+taskCount+ \" tasks in the list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ishitamandal06"},"content":"     * Contains the message to be printed after marking or unmarking a particular task","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ishitamandal06"},"content":"     * @param status Specifies whether to mark a message or unmark it","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ishitamandal06"},"content":"     *               Based on this, the relevant mark or unmark message is displayed","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ishitamandal06"},"content":"     * @param description Gives the description of the task that has to be marked or unmarked","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ishitamandal06"},"content":"     * @param statusIcon Gives the new status of the task after it has been marked or unmarked","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ishitamandal06"},"content":"    public static void markMessage(String status, String description, String statusIcon){","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ishitamandal06"},"content":"        if(status.equals(\"mark\")){","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ishitamandal06"},"content":"        if(status.equals(\"unmark\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");  ","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(\"[\"+ statusIcon+\"] \"+description);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ishitamandal06"},"content":"     * Prints all the tasks in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ishitamandal06"},"content":"     * Prints \"No Tasks in list\" if there are no tasks in the collection","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ishitamandal06"},"content":"     * @param tasks is a reference to the ArrayList of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ishitamandal06"},"content":"    public static void listMessage(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ishitamandal06"},"content":"        if(tasks.size()\u003d\u003d0){","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ishitamandal06"},"content":"            System.out.println(\"No Tasks in list\");","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ishitamandal06"},"content":"        } else{","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ishitamandal06"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ishitamandal06"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ishitamandal06"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ishitamandal06"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ishitamandal06"},"content":"        System.out.println(line );","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ishitamandal06"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ishitamandal06"},"content":"     * gets input from the CLI and trims it","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ishitamandal06"},"content":"     * @return input given by user in String format","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ishitamandal06"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ishitamandal06"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ishitamandal06"},"content":"    public static String getInput() {","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ishitamandal06"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ishitamandal06"},"content":"        String inputText \u003d in.nextLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ishitamandal06"},"content":"        return inputText.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ishitamandal06"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"ishitamandal06"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":108}},{"path":"src/main/java/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ishitamandal06"},"content":"todo read book","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"ishitamandal06"},"content":"bye","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"ishitamandal06":2}}]
