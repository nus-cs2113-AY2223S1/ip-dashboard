[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"# Duke User Guide","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":"### Adding a to-do task: `todo`","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"Adds a to-do task to the list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"Format: `todo TODO_DESCRIPTION`","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"Example: `todo Go for a run`","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"Expected output: ","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":" [T][ ] Go for a run","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"Now you have 1 tasks in the list ","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"Adds a deadline task to the list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"Format: `deadline DEADLINE_DESCRIPTION /by DUE_DATE`","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"Example: `deadline Apply for internship /by 5th October`","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"Expected output: ","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":" [D][ ] Apply for internship (by: 5th October)","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"Now you have 2 tasks in the list ","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"### Adding an event task: `event`","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"shengiv"},"content":"Adds an event task to the list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"shengiv"},"content":"Format: `event EVENT_DESCRIPTION /at TIME_OF_EVENT`","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"shengiv"},"content":"Example: `event Attend zoom meeting /at 5pm`","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"shengiv"},"content":"Expected output: ","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"shengiv"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"shengiv"},"content":" [E][ ] Attend zoom meeting (at: 5pm)","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"shengiv"},"content":"Now you have 3 tasks in the list ","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"shengiv"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"shengiv"},"content":"Lists all the tasks in the task list","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"shengiv"},"content":"Format: `list`","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"shengiv"},"content":"Expected output: ","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"shengiv"},"content":"1.[T][ ] Go for a run","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"shengiv"},"content":"2.[D][ ] Apply for internship (by: 5th October)","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"shengiv"},"content":"3.[E][ ] Attend zoom meeting (at: 5pm)","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"shengiv"},"content":"### Marking a task as done: `mark` ","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"shengiv"},"content":"Marks the particular task as done.","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"shengiv"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"shengiv"},"content":"- Marks the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"shengiv"},"content":"- The index **must be a positive integer** that is less than or equal to the number of tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"shengiv"},"content":"Example: `mark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"shengiv"},"content":"Expected output:","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"shengiv"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"shengiv"},"content":"  [T][X] Go for a run","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"shengiv"},"content":"### Marking a task as not done: `unmark`","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"shengiv"},"content":"Marks the particular task as not done.","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"shengiv"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"shengiv"},"content":"- Marks the task at the specified `INDEX` as not done yet. The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"shengiv"},"content":"- The index **must be a positive integer** that is less than or equal to the number of tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"shengiv"},"content":"Example: `unmark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"shengiv"},"content":"Expected output:","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"shengiv"},"content":"OK, I\u0027ve marked this task as not done yet: ","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"shengiv"},"content":"  [T][ ] Go for a run","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"shengiv"},"content":"### Deleting a task in the list: `delete`","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"shengiv"},"content":"Deletes the particular task in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"shengiv"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"shengiv"},"content":"- Deletes the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"shengiv"},"content":"- The index **must be a positive integer** that is less than or equal to the number of tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"shengiv"},"content":"Example: `delete 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"shengiv"},"content":"Expected output:","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"shengiv"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"shengiv"},"content":"  [T][ ] Go for a run","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"shengiv"},"content":"Now you have 2 tasks in the list ","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"shengiv"},"content":"### Finding tasks in the list: `find`","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"shengiv"},"content":"Finds tasks whose descriptions contain the keywords provided.","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"shengiv"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"shengiv"},"content":"- The keywords are case sensitive and order of keywords matters.","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"shengiv"},"content":"Example: `find meeting`","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"shengiv"},"content":"Expected output:","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"shengiv"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"shengiv"},"content":"1.[E][ ] Attend zoom meeting (at: 5pm)","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"shengiv"},"content":"______________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"shengiv"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"shengiv"},"content":"### Exiting Duke: `bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"shengiv"},"content":"Exits the Duke program.","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"shengiv"},"content":"Format: `bye`","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"shengiv":149,"-":16}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":" * Deadline is a subclass of Task. The Deadline object inherits the attribute name from the superclass which","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * represents the deadline description. Deadline is denoted by task type \"[D]\" and requires a due date attribute in","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" * String format for Deadline to be valid.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    private String dueDate;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"    private String taskType;","lastModifiedDate":"2022-09-07"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"        super(name);","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"        this.taskType \u003d \"[D]\";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"     * Returns type of task, checkbox, name of task and due date in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"     * @return Deadline in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"        return  taskType + getCheckBox() + \" \"+ getName() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"     * Returns Deadline attributes in String format separated by delimiter \"|\"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"     * @return Deadline in String format for storage in local file.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"    public String getFileInput() {","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"        return \"D\" + \" | \" + String.valueOf(this.getIsCompleted()) + \" | \" + this.getName() + \" | \" + dueDate;","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"shengiv":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * The Duke program implements a task management application.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" * The core features include adding, deleting, viewing, marking and unmarking tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" * as well as finding tasks according to keywords. The tasks can either be a ToDo, Deadline or an Event task.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":" * @author  shengiv","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":" * @version 0.2","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"public class Duke {","lastModifiedDate":"2022-09-07"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"    private Parser parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"    private static final String DUKE_DATA_FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"        tasks \u003d new TaskList(storage.loadTasks(), ui);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"        parser \u003d new Parser(ui, tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"     * Allows the programme to run till exit command is received. Leads to termination of Duke","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"     * once exit command is received.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"    public void run() {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"        String lineInput;","lastModifiedDate":"2022-09-07"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"        lineInput \u003d ui.nextInputLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"        while (!lineInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"            parser.parse(lineInput);","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"            storage.saveTasksData(tasks.getTaskList());","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"            lineInput \u003d ui.nextInputLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"        ui.showExit();","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"        new Duke(DUKE_DATA_FILE_PATH).run();","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shengiv":43,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":" * Event is a subclass of Task. The Event object inherits the attribute name from the superclass.","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * Event is denoted by task type \"[E]\" and requires the attribute time of event in String format for Event to be valid.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"    private String timeOfEvent;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    private String taskType;","lastModifiedDate":"2022-09-07"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"    public Event(String name, String timeOfEvent) {","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"        super(name);","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"        this.taskType \u003d \"[E]\";","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"     * Returns type of task, checkbox, name of task and time of event in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"     * @return Event in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"        return  taskType + getCheckBox() + \" \"+ getName() + \" (at: \" + timeOfEvent + \")\";","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"     * Returns Event attributes in String format separated by delimiter \"|\"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"     * @return Event in String format for storage in local file.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"    public String getFileInput() {","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"        return \"E\" + \" | \" + String.valueOf(this.getIsCompleted()) + \" | \" + this.getName() + \" | \" + timeOfEvent;","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"shengiv":33}},{"path":"src/main/java/duke/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"public class InvalidTaskFormatException extends Exception{","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"shengiv":3}},{"path":"src/main/java/duke/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"public class NoDescriptionException extends Exception {","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"shengiv":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * Represents object to parse user input and decide on the appropriate action to be taken.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" * Requires class attributes TaskList and Ui to carry out commands stated by the User.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"public class Parser {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"    public Parser(Ui ui, TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"     * Parses through the user input and decides on suitable action to take based on the first word of the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"     * @param  lineInput String of user input obtained from the terminal","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    public void parse(String lineInput) {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"        String[] inputWords \u003d lineInput.split(\"\\\\s+\");","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"        String action \u003d inputWords[0];","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"        if (action.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"            ui.showTaskList(tasks.getTaskList());","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"            tasks.markTask(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"            tasks.unmarkTask(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"            tasks.addToDo(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"            tasks.addEvent(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"            tasks.addDeadline(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"            tasks.deleteTask(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"        } else if (action.equalsIgnoreCase(\"find\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"            tasks.findTasks(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"            ui.showInvalidCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"shengiv":44}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"import java.io.File;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":" * Represents the storage location to save data in the task list locally as well as to access task list from","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":" * local file path.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"public class Storage {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    private String filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    private static final String TASK_ATTRIBUTE_DELIMITER \u003d \" \\\\| \";","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"        accessDukeFile();","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"    private void accessDukeFile() {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"        File dukeFile \u003d new File(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"        if (dukeFile.exists()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"                retrieveFileData(dukeFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"                Ui.showMessage(\"Duke data file cannot be accessed\");","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"                Ui.showException(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"            } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"                Ui.showMessage(\"Invalid task found in Duke file. Task is omitted from the list.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"                Ui.showException(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"            try {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"                createDukeFile(dukeFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"                Ui.showMessage(\"Duke file creation failed.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"                Ui.showMessage(e.getMessage());","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"shengiv"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"shengiv"},"content":"    private void createDukeFile(File dukeFile) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"shengiv"},"content":"        dukeFile.getParentFile().mkdir();","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"shengiv"},"content":"        dukeFile.createNewFile();","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"shengiv"},"content":"    private void retrieveFileData(File dukeFile) throws FileNotFoundException, InvalidTaskFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"shengiv"},"content":"        Scanner scanner \u003d new Scanner(dukeFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"shengiv"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"shengiv"},"content":"            String taskData \u003d scanner.nextLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"shengiv"},"content":"            String[] taskAttributes \u003d taskData.split(TASK_ATTRIBUTE_DELIMITER);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"shengiv"},"content":"            String taskType \u003d taskAttributes[0];","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"shengiv"},"content":"            String taskName \u003d taskAttributes[2];","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"shengiv"},"content":"            boolean isTaskCompleted \u003d Boolean.valueOf(taskAttributes[1]);","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"shengiv"},"content":"            switch (taskType) {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"shengiv"},"content":"            case \"T\":","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"shengiv"},"content":"                ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"shengiv"},"content":"                toDo.setIsCompleted(isTaskCompleted);","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"shengiv"},"content":"                tasks.add(toDo);","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"shengiv"},"content":"                break;","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"shengiv"},"content":"            case \"D\":","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"shengiv"},"content":"                String dueDate \u003d taskAttributes[3];","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"shengiv"},"content":"                Deadline deadline \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"shengiv"},"content":"                deadline.setIsCompleted(isTaskCompleted);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"shengiv"},"content":"                tasks.add(deadline);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"shengiv"},"content":"                break;","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"shengiv"},"content":"            case \"E\":","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"shengiv"},"content":"                String timeOfEvent \u003d taskAttributes[3];","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"shengiv"},"content":"                Event event \u003d new Event(taskName, timeOfEvent);","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"shengiv"},"content":"                event.setIsCompleted(isTaskCompleted);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"shengiv"},"content":"                tasks.add(event);","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"shengiv"},"content":"                break;","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"shengiv"},"content":"            default:","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"shengiv"},"content":"                throw new InvalidTaskFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"shengiv"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"shengiv"},"content":"    private void writeTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"shengiv"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"shengiv"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"shengiv"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"shengiv"},"content":"                ToDo toDo \u003d (ToDo) task;","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"shengiv"},"content":"                fileWriter.write(toDo.getFileInput());","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"shengiv"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"shengiv"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"shengiv"},"content":"                fileWriter.write(deadline.getFileInput());","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"shengiv"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"shengiv"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"shengiv"},"content":"                fileWriter.write(event.getFileInput());","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"shengiv"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"shengiv"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"shengiv"},"content":"        fileWriter.close();","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"shengiv"},"content":"     * Saves the tasks in the task list locally using the file path class attribute.","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"shengiv"},"content":"     * @param  tasks ArrayList of Tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"shengiv"},"content":"    public void saveTasksData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"shengiv"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"shengiv"},"content":"            writeTasksToFile(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"shengiv"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"shengiv"},"content":"            Ui.showMessage(\"Unable to write task to file: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"shengiv"},"content":"            Ui.showException(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"shengiv":116}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * Represents a task in the Task List. A Task object corresponds to a string which represents the task name,","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" * a boolean to represent whether the task has been completed and a string to represent the type of task.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"public class Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    private String name;","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"    private boolean isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"    private String taskType;","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"        this.taskType \u003d \"[NA]\";","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"    public String getName(){","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"        return name;","lastModifiedDate":"2022-08-26"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"    public boolean getIsCompleted(){","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"        return isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"    public void setIsCompleted(boolean isCompleted){","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"    //returns the checkbox as a string","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"    public String getCheckBox() {","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"        if (isCompleted) {","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"            return \"[X]\";","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"        return \"[ ]\";","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"     * Returns type of task, checkbox and name of task in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"     * @return Task in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"        return taskType + getCheckBox() + \" \"+ getName();","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"shengiv":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" * TaskList implements the collection ArrayList and is used for storing objects with type Task.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":" * TaskList contains Task-specific methods to add, delete, mark, unmark and find tasks. TaskList requires class","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":" * attributes ArrayList\u003cTask\u003e to store tasks and Ui to interact with the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"public class TaskList {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"    private static final String DEADLINE_DELIMITER \u003d \"/by\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"    private static final String EVENT_DELIMITER \u003d \"/at\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"    private static final int RIGHT_SHIFT_INDEX \u003d 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    private static final int TASK_START_INDEX \u003d 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"    public TaskList (ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"        return tasks;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"        tasks.add(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"        ui.showAddedTask(task, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"     * Handles adding a deadline task from user input to task list. Searches for possible exceptions","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"     * caused by invalid user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"    public void addDeadline(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"            checkForTaskExceptions(inputWords, DEADLINE_DELIMITER);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"            Deadline deadline \u003d getDeadline(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"            addTask(deadline);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"        } catch (NoDescriptionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"            ui.printEmptyDeadlineDescription();","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"            ui.printInvalidDeadline();","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"shengiv"},"content":"     * Handles adding an event task from user input to task list. Searches for possible exceptions","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"shengiv"},"content":"     * caused by invalid user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"shengiv"},"content":"    public void addEvent(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"shengiv"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"shengiv"},"content":"            checkForTaskExceptions(inputWords, EVENT_DELIMITER);","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"shengiv"},"content":"            Event event \u003d getEvent(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"shengiv"},"content":"            addTask(event);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"shengiv"},"content":"        } catch (NoDescriptionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"shengiv"},"content":"            ui.printEmptyEventDescription();","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"shengiv"},"content":"        } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"shengiv"},"content":"            ui.printInvalidEvent();","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"shengiv"},"content":"     * Handles adding a ToDo task from user input to task list. Catches exception when no description is provided","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"shengiv"},"content":"     * for ToDo task.","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"shengiv"},"content":"    public void addToDo(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"shengiv"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"shengiv"},"content":"            ToDo toDo \u003d getToDo(inputWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"shengiv"},"content":"            tasks.add(toDo);","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"shengiv"},"content":"            ui.showAddedTask(toDo, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"shengiv"},"content":"        } catch (NoDescriptionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"shengiv"},"content":"            ui.printInvalidToDo();","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"shengiv"},"content":"     * Deletes task from task list based on index of task in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"shengiv"},"content":"    public void deleteTask(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"shengiv"},"content":"        int listIndex \u003d Integer.parseInt(inputWords[1]) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"shengiv"},"content":"        Task deletedTask \u003d tasks.get(listIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"shengiv"},"content":"        ui.showDeletedTask(deletedTask, tasks.size());","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"shengiv"},"content":"        tasks.remove(listIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"shengiv"},"content":"     * Finds tasks in the task list which contain the keywords provided by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"shengiv"},"content":"    public void findTasks(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"shengiv"},"content":"        String[] keywordsArray \u003d Arrays.copyOfRange(inputWords, RIGHT_SHIFT_INDEX, inputWords.length);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"shengiv"},"content":"        String keywords \u003d String.join(\" \", keywordsArray);","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"shengiv"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"shengiv"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"shengiv"},"content":"            if(task.getName().contains(keywords)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"shengiv"},"content":"                tasksFound.add(task);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"shengiv"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"shengiv"},"content":"        ui.showFoundTasks(tasksFound);","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"shengiv"},"content":"    private String getTaskName(String[] inputWords, int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"shengiv"},"content":"        String[] taskNameArray \u003d Arrays.copyOfRange(inputWords, TASK_START_INDEX, index);","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"shengiv"},"content":"        String taskName \u003d String.join(\" \", taskNameArray);","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"shengiv"},"content":"        return taskName;","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"shengiv"},"content":"    private String getTaskDate(String[] inputWords, int index) {","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"shengiv"},"content":"        String[] taskDateArray \u003d Arrays.copyOfRange(inputWords, index + RIGHT_SHIFT_INDEX, inputWords.length);","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"shengiv"},"content":"        String taskDate \u003d String.join(\" \", taskDateArray);","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"shengiv"},"content":"        return taskDate;","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"shengiv"},"content":"    private ToDo getToDo(String[] inputWords) throws NoDescriptionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"shengiv"},"content":"        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"shengiv"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"shengiv"},"content":"        String[] taskNameWords \u003d Arrays.copyOfRange(inputWords, TASK_START_INDEX, inputWords.length);","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"shengiv"},"content":"        String taskName \u003d String.join(\" \", taskNameWords);","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"shengiv"},"content":"        ToDo toDo \u003d new ToDo(taskName);","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"shengiv"},"content":"        return toDo;","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"shengiv"},"content":"    private Deadline getDeadline(String[] inputWords) throws NoDescriptionException, InvalidTaskFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"shengiv"},"content":"        int index \u003d getIndexOfDelimiter(inputWords, DEADLINE_DELIMITER);","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"shengiv"},"content":"        String deadlineName \u003d getTaskName(inputWords, index);","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"shengiv"},"content":"        String dueDate \u003d getTaskDate(inputWords, index);","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"shengiv"},"content":"        Deadline deadline \u003d new Deadline(deadlineName, dueDate);","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"shengiv"},"content":"        return deadline;","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"shengiv"},"content":"    private Event getEvent(String[] inputWords) throws NoDescriptionException, InvalidTaskFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"shengiv"},"content":"        int index \u003d getIndexOfDelimiter(inputWords, EVENT_DELIMITER);","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"shengiv"},"content":"        String eventName \u003d getTaskName(inputWords, index);","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"shengiv"},"content":"        String timeOfEvent \u003d getTaskDate(inputWords, index);","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"shengiv"},"content":"        Event event \u003d new Event(eventName, timeOfEvent);","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"shengiv"},"content":"        return event;","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"shengiv"},"content":"     * Marks task as done in the task list using the index of task in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"shengiv"},"content":"    public void markTask(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"shengiv"},"content":"        int listIndex \u003d Integer.parseInt(inputWords[1]) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"shengiv"},"content":"        Task markedTask \u003d tasks.get(listIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"shengiv"},"content":"        markedTask.setIsCompleted(true);","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"shengiv"},"content":"        ui.showMarkedTask(markedTask);","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"shengiv"},"content":"     * Unmarks task as done in the task list using the index of task in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"shengiv"},"content":"     * @param  inputWords Array of words extracted from user input","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"shengiv"},"content":"    public void unmarkTask(String[] inputWords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"shengiv"},"content":"        int listIndex \u003d Integer.parseInt(inputWords[1]) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"shengiv"},"content":"        Task unmarkedTask \u003d tasks.get(listIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"shengiv"},"content":"        unmarkedTask.setIsCompleted(false);","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"shengiv"},"content":"        ui.showUnmarkedTask(unmarkedTask);","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"shengiv"},"content":"    private void checkForTaskExceptions(String[] inputWords, String delimiter) throws NoDescriptionException, InvalidTaskFormatException {","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"shengiv"},"content":"        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"shengiv"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"shengiv"},"content":"        if (!Arrays.asList(inputWords).contains(delimiter)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"shengiv"},"content":"            throw new InvalidTaskFormatException();","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"shengiv"},"content":"    private int getIndexOfDelimiter(String[] inputWords, String delimiter) {","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"shengiv"},"content":"        int index \u003d Arrays.asList(inputWords).indexOf(delimiter);","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"shengiv"},"content":"        return index;","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"shengiv":180}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":" * ToDo is a subclass of Task. The ToDo object inherits the attribute, name from the superclass which represents","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":" * description for the ToDo task. ToDo is denoted by task type \"[T]\"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"    private String taskType;","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    public ToDo(String name) {","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"        super(name);","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"        this.taskType \u003d \"[T]\";","lastModifiedDate":"2022-09-07"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"     * Returns type of task, checkbox and name of task in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"     * @return ToDo in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"    public String toString() {","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"        return taskType + getCheckBox() + \" \"+ getName();","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"     * Returns ToDo attributes in String format separated by delimiter \"|\"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"     * @return ToDo in String format for storage in local file.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"    public String getFileInput() {","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"        return \"T\" + \" | \" + String.valueOf(this.getIsCompleted()) + \" | \" + this.getName();","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"shengiv":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shengiv"},"content":"package duke;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"shengiv"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"shengiv"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"shengiv"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"shengiv"},"content":" * Ui represents the user interface through which the user interacts with Duke and vice versa.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"shengiv"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"shengiv"},"content":"public class Ui {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"shengiv"},"content":"    private Scanner in;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"shengiv"},"content":"    private static final String LINE_BREAK \u003d \"______________________________________________\\n\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"shengiv"},"content":"    public Ui() {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"shengiv"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"shengiv"},"content":"    public String nextInputLine() {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"shengiv"},"content":"        return in.nextLine();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"shengiv"},"content":"    public void showWelcome() {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"shengiv"},"content":"    public void showExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Bye. Hope to see see you again soon!\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"shengiv"},"content":"     * Prints the tasks in the ArrayList of tasks in String format.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"shengiv"},"content":"     * @param tasks ArrayList of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"shengiv"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"shengiv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"shengiv"},"content":"            System.out.println(Integer.toString(i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"shengiv"},"content":"     * Prints the tasks found using keywords provided by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"shengiv"},"content":"     * @param tasks ArrayList of tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"shengiv"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"shengiv"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"shengiv"},"content":"            System.out.println(Integer.toString(i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"shengiv"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"shengiv"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \u0027\\n\u0027 + \"Oh no! I do not understand the command!\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"shengiv"},"content":"     * Prints that the markedTask has been marked as completed.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"shengiv"},"content":"     * @param markedTask Task which is marked as completed.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"shengiv"},"content":"    public void showMarkedTask(Task markedTask) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"  \" + markedTask.toString() + \u0027\\n\u0027 + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"shengiv"},"content":"     * Prints that the unmarkedTask has been marked as incomplete.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"shengiv"},"content":"     * @param unmarkedTask Task which is marked as incomplete.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"shengiv"},"content":"    public void showUnmarkedTask(Task unmarkedTask) {","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"  \" + unmarkedTask.toString() + \u0027\\n\u0027 + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"shengiv"},"content":"     * Prints the added task and shows the number of tasks left in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"shengiv"},"content":"     * @param numberOfTasks number of tasks that are currently in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"shengiv"},"content":"     * @param task most recently added task","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"shengiv"},"content":"    public void showAddedTask(Task task, int numberOfTasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"shengiv"},"content":"        System.out.println(\" \" + task.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"Now you have \" + Integer.toString(numberOfTasks) + \" tasks in the list \\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"shengiv"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"shengiv"},"content":"     * Prints the deleted task and shows the number of tasks left in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"shengiv"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"shengiv"},"content":"     * @param numberOfTasks number of tasks that are currently in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"shengiv"},"content":"     * @param deletedTask most recently deleted task","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"shengiv"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"shengiv"},"content":"    public void showDeletedTask(Task deletedTask, int numberOfTasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"  \" + deletedTask.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"shengiv"},"content":"        String numberOfTasksAfterDeletion \u003d Integer.toString(numberOfTasks - 1);","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"shengiv"},"content":"        System.out.println(\"Now you have \" + numberOfTasksAfterDeletion + \" tasks in the list \\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"shengiv"},"content":"    public void printEmptyEventDescription() {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Oh No! The description of an event cannot be empty.\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"shengiv"},"content":"    public void printEmptyDeadlineDescription() {","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Oh No! The description of a deadline cannot be empty.\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"shengiv"},"content":"    public void printInvalidDeadline() {","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Invalid Deadline. Please provide due date!\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"shengiv"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"shengiv"},"content":"    public void printInvalidEvent() {","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Invalid Event. Please provide event time!\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"shengiv"},"content":"    public void printInvalidToDo() {","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"shengiv"},"content":"        System.out.println(LINE_BREAK + \"Oh No! The description of a todo cannot be empty.\\n\" + LINE_BREAK);","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"shengiv"},"content":"    public static void showMessage(String Message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"shengiv"},"content":"        System.out.println(Message);","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"shengiv"},"content":"    public static void showException(Exception e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"shengiv"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"shengiv"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"shengiv"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"shengiv":119}}]
