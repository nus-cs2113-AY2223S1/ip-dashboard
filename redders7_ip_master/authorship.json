[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"# Duke.Duke project template","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"You will use this as a baseline for the individual project, as well as the team project later in the semester.","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redders7":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"Tommy is a task tracking application, run using Command Line Interface (CLI)","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"## System Requirements","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"This application was built on Java 11. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"## Quick Start","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"1. Download duke.jar file from this repository.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"2. Copy the file into a folder. The task list will be saved into this folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"3. Open terminal application and change directory to the above folder.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"4. Run the jar file by entering `java -jar duke.jar` into the terminal.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"You should be greeted with the following output:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":" Hello! I\u0027m","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":" _____ ____  _______  _______  __ __  ","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"  | | |   | || || || || || ||  |_ _|  ","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"  | | |   | || || || || || ||   | |  ","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"  |_| |___| || || || || || ||   | |  ","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":" What can I do for you?","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"5. Input one of the supported commands, and press the \"Enter\" key to execute.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"6. Exit the application safely with the \"bye\" command.","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"The following commands are supported by Tommy.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"### list","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"Displays all tasks currently in your task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"list","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"1.[T][ ] Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"2.[D][ ] Return book  (by: June 6th)","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"3.[E][ ] Project meeting  (at: Monday 2-4pm)","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"### todo","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"Adds a todo task to your task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"Format: todo `taskName`","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"todo Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"redders7"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"redders7"},"content":"\t[T][ ] Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"redders7"},"content":" Now you have 1 tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"redders7"},"content":"### deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"redders7"},"content":"Adds a deadline task to your task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"redders7"},"content":"Format: deadline  `taskName` /by `taskDateTime`","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"redders7"},"content":"deadline Return book /by June 6th","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"redders7"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"redders7"},"content":"\t[D][ ] Return book  (by: June 6th)","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"redders7"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"redders7"},"content":"### event","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"redders7"},"content":"Adds an event task to your task list","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"redders7"},"content":"Format: event  `taskName` /at `taskDateTime`","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"redders7"},"content":"event Project meeting /at Monday 2-4pm","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"redders7"},"content":" Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"redders7"},"content":"\t[E][ ] Project meeting  (at: Monday 2-4pm)","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"redders7"},"content":" Now you have 3 tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"redders7"},"content":"### mark","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"redders7"},"content":"Mark a task in your list as done. ","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"redders7"},"content":"Format: mark `index`","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"redders7"},"content":"mark 1","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"redders7"},"content":" Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"redders7"},"content":"\t[T][X] Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"redders7"},"content":"### unmark","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"redders7"},"content":"Mark a task in your list as not done.","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"redders7"},"content":"Format: mark `index`","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"redders7"},"content":"unmark 1","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"redders7"},"content":" OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"redders7"},"content":"\t[T][ ] Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"redders7"},"content":"### find","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"redders7"},"content":"Find all tasks in your task list with the specified keyword in their names.","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"redders7"},"content":"Format: find `keyword`","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"redders7"},"content":"find book","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"redders7"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"redders7"},"content":"1.[T][ ] Read book","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"redders7"},"content":"2.[D][ ] Return book  (by: June 6th)","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":122,"author":{"gitId":"redders7"},"content":"### delete","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"redders7"},"content":"Delete a task from your task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"redders7"},"content":"Format: delete `index`","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":127,"author":{"gitId":"redders7"},"content":"delete 3","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"redders7"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"redders7"},"content":"\t[E][ ] Project meeting  (at: Monday 2-4pm)","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"redders7"},"content":" Now you have 2 tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"redders7"},"content":"### bye","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"redders7"},"content":"Exits the application.","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"redders7"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"redders7"},"content":"bye","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"redders7"},"content":" Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"redders7"},"content":"____________________________________________________________","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"redders7":120,"-":24}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":" * Duke is a task tracking application using Command Line Interface.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"public class Duke {","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"    private String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-10"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"     * Initialises application and reads existing data from local file.","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"    public Duke() {","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-10"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"            storage.getFileContents(filePath, taskList.list);","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-10"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2022-09-10"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-10"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"     * Runs the application, taking in user input until \"bye\" command is issued.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"    public void run() {","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"        ui.sayHi();","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"        while (!taskList.isLast) {","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"            try {","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"                String userInput \u003d ui.readInputs();","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"                String commandType \u003d Parser.commandType(userInput);","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"                String commandActual \u003d Parser.commandActual(userInput);","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"                taskList.executeTask(commandType, commandActual, filePath);","lastModifiedDate":"2022-09-27"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"            } catch (IllegalCommand e) {","lastModifiedDate":"2022-09-04"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"                ui.showError();","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"            } finally {","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"                ui.drawLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-08-23"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"        ui.sayBye();","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"     * Main function to run application.","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"redders7"},"content":"     * @param args","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"redders7"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"redders7"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"redders7":54,"-":2}},{"path":"src/main/java/Duke/EmptyToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Error if description of Todo task is not given in user input","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class EmptyToDo extends Exception{","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"redders7":7}},{"path":"src/main/java/Duke/IllegalCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Error if user command is not recognised","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class IllegalCommand extends Exception{","lastModifiedDate":"2022-09-04"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-04"}],"authorContributionMap":{"redders7":7}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Parser deals with making sense of the user input","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class Parser {","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"     * Determine type of command from user input","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"     * @param command User input","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"     * @return Type of command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"    public static String commandType (String command) {","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"        String[] arr \u003d command.split(\" \", 2);","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"        return arr[0];","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"     * Obtains description of task or command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"     * @param command User input","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"     * @return Description of task or command","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"    public static String commandActual (String command) {","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"        String[] arr \u003d command.split(\" \", 2);","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"        if (arr.length \u003e 1) {","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"            return arr[1];","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"        return null;","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"     * Determine if bye command is issued by user","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"     * @param commandType User command","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"     * @return True if command is \"bye\"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"    public static Boolean isLast (String commandType) {","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"        return commandType \u003d\u003d \"bye\" ? true : false;","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"redders7":39}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"import Duke.task.Event;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"import Duke.task.Todo;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"import java.io.*;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":" * Storage deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"public class Storage {","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"    private static String filePath;","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"     * Saves the given task list to a specified local file","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"     * @param filePath Location of file for task list to be saved to","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"     * @param list Task list to be saved","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"     * @throws IOException Error","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"    public static void writeToFile(String filePath, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"            File storedFile \u003d new File(filePath);","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"            FileWriter writeFile \u003d new FileWriter(storedFile);","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"            for (Task task : list) {","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"                Boolean isDone \u003d task.isDone;","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"                writeFile.write(task.type + \"|\" + isDone + \"|\" + task.description +","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"                        \"|\" + task.by + System.lineSeparator());","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"            writeFile.close();","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"            Ui.showFileWriteError();","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"     * Loads task list saved in specified local file to the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"     * @param filePath Location of file with the saved list","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"     * @param list Target ArrayList to load task list","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"     * @throws FileNotFoundException Error if file is not found in the specified location","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"    public static void getFileContents(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException {","lastModifiedDate":"2022-09-27"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"        File storedFile \u003d new File(filePath);","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"        if (!storedFile.getParentFile().exists()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"redders7"},"content":"            storedFile.getParentFile().mkdirs();","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"redders7"},"content":"            if (!storedFile.exists()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"redders7"},"content":"                storedFile.createNewFile();","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"redders7"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"redders7"},"content":"            Ui.showFileWriteError();","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"redders7"},"content":"        Scanner s \u003d new Scanner(new FileInputStream((filePath)));","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"redders7"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"redders7"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"redders7"},"content":"            String inputCommands[] \u003d command.split(\"\\\\|\", 4);","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"redders7"},"content":"            switch (inputCommands[0]) {","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"redders7"},"content":"            case \"T\":","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"redders7"},"content":"                Todo addTodo \u003d new Todo(inputCommands[2]);","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"redders7"},"content":"                TaskList.checkMarked(addTodo,inputCommands[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"redders7"},"content":"                list.add(addTodo);","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"redders7"},"content":"            case \"D\":","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"redders7"},"content":"                Deadline addDeadline \u003d new Deadline(inputCommands[2], inputCommands[3]);","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"redders7"},"content":"                TaskList.checkMarked(addDeadline,inputCommands[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"redders7"},"content":"                list.add(addDeadline);","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"redders7"},"content":"            case \"E\":","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"redders7"},"content":"                Event addEvent \u003d new Event(inputCommands[2], inputCommands[3]);","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"redders7"},"content":"                TaskList.checkMarked(addEvent,inputCommands[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"redders7"},"content":"                list.add(addEvent);","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"redders7"},"content":"            default:","lastModifiedDate":"2022-09-20"},{"lineNumber":81,"author":{"gitId":"redders7"},"content":"                throw new FileNotFoundException();","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"redders7":85}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"import Duke.task.Event;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"import Duke.task.Todo;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":" * TaskList contains the task list and handles all operations relating to the list","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"public class TaskList {","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"    public ArrayList\u003cTask\u003e list\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"    public Boolean isLast \u003d false;","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"    public static String fileLocation \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"     * Check if a task has been marked as done","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"     * @param task Task to be checked","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"     * @param isDone Marker signifying if task is done or not","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"    public static void checkMarked (Task task, String isDone) {","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"        if (isDone \u003d\u003d \"true\") {","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"            task.isDone \u003d true;","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"     * Converts the index of the task from String to Integer","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"     * @param commandActual String containing index of task","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"     * @return Index of task as an integer","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"    public static int getIndex (String commandActual) {","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"        return Integer.parseInt(commandActual) - 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"     * Prints out all tasks currently stored in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"    public static void listTasks (ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"        Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"        int cnt \u003d list.size();","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"        for (int i \u003d 0; i \u003c cnt; i++) {","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"            System.out.println((i + 1) + \".\" + list.get(i).toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"redders7"},"content":"     * Unmark task as done and write to local file","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"redders7"},"content":"     * @param index Index of task to be unmarked","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"redders7"},"content":"    public static void setUnmarked (ArrayList\u003cTask\u003e list, String index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"redders7"},"content":"            int indexToUnmark \u003d getIndex(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"redders7"},"content":"            Task unmarking \u003d list.get(indexToUnmark);","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"redders7"},"content":"            unmarking.setUnDone();","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"redders7"},"content":"            list.set(indexToUnmark, unmarking);","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"redders7"},"content":"            Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"redders7"},"content":"            System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"redders7"},"content":"            System.out.println(\"\\t\" + list.get(indexToUnmark).toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"redders7"},"content":"            Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"redders7"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"redders7"},"content":"            Ui.showIndexOutOfBounds();","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"redders7"},"content":"     * Mark task as done and write to local file","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"redders7"},"content":"     * @param index Index of task to be unmarked","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"redders7"},"content":"    public static void setMarked (ArrayList\u003cTask\u003e list, String index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"redders7"},"content":"            int indexToMark \u003d getIndex(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"redders7"},"content":"            Task marking \u003d list.get(indexToMark);","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"redders7"},"content":"            marking.setDone();","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"redders7"},"content":"            list.set(indexToMark, marking);","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"redders7"},"content":"            Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"redders7"},"content":"            System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"redders7"},"content":"            System.out.println(\"\\t\" + list.get(indexToMark).toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"redders7"},"content":"            Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"redders7"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"redders7"},"content":"            Ui.showIndexOutOfBounds();","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"redders7"},"content":"     * Add a new ToDo task and write to local file","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"redders7"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"redders7"},"content":"     * @throws EmptyToDo Error if description of task is empty","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"redders7"},"content":"    public static void newToDo (ArrayList\u003cTask\u003e list, String description) throws EmptyToDo {","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"redders7"},"content":"        Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"redders7"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"redders7"},"content":"            throw new EmptyToDo();","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"redders7"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"redders7"},"content":"        list.add(newTodo);","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"redders7"},"content":"        System.out.println(\"\\t\" + newTodo.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"redders7"},"content":"        Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"redders7"},"content":"     * Add a new Deadline task and write to local file","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"redders7"},"content":"     * @param commandActual User input containing description and deadline of task","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"redders7"},"content":"    public static void newDeadline (ArrayList\u003cTask\u003e list, String commandActual) {","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"redders7"},"content":"        Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"redders7"},"content":"        String arr2[] \u003d commandActual.split(\"/by \", 2);","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"redders7"},"content":"        String desc \u003d arr2[0];","lastModifiedDate":"2022-09-28"},{"lineNumber":118,"author":{"gitId":"redders7"},"content":"        String deadline \u003d arr2[1];","lastModifiedDate":"2022-09-28"},{"lineNumber":119,"author":{"gitId":"redders7"},"content":"        Deadline newDeadline \u003d new Deadline(desc, deadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":120,"author":{"gitId":"redders7"},"content":"        list.add(newDeadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":121,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":122,"author":{"gitId":"redders7"},"content":"        System.out.println(\"\\t\" + newDeadline.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":123,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":124,"author":{"gitId":"redders7"},"content":"        Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":125,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":127,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":128,"author":{"gitId":"redders7"},"content":"     * Add a new Event task and write to local file","lastModifiedDate":"2022-09-28"},{"lineNumber":129,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"redders7"},"content":"     * @param commandActual User input containing description and date of event","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"redders7"},"content":"    public static void newEvent (ArrayList\u003cTask\u003e list, String commandActual) {","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"redders7"},"content":"        Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"redders7"},"content":"        String event[] \u003d commandActual.split(\"/at \", 2);","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"redders7"},"content":"        String name \u003d event[0];","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"redders7"},"content":"        String time \u003d event[1];","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"redders7"},"content":"        Event newEvent \u003d new Event(name, time);","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"redders7"},"content":"        list.add(newEvent);","lastModifiedDate":"2022-09-28"},{"lineNumber":139,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"redders7"},"content":"        System.out.println(\"\\t\" + newEvent.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":141,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"redders7"},"content":"        Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":143,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"redders7"},"content":"     * Delete specified task","lastModifiedDate":"2022-09-28"},{"lineNumber":147,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks","lastModifiedDate":"2022-09-28"},{"lineNumber":148,"author":{"gitId":"redders7"},"content":"     * @param index Index of task to delete","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"redders7"},"content":"    public static void deleteTask (ArrayList\u003cTask\u003e list, String index) {","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"redders7"},"content":"            int indexToDelete \u003d Integer.parseInt(index) - 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"redders7"},"content":"            Task toDelete \u003d list.get(indexToDelete);","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"redders7"},"content":"            Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"redders7"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"redders7"},"content":"            System.out.println(\"\\t\" + toDelete.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"redders7"},"content":"            list.remove(indexToDelete);","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"redders7"},"content":"            System.out.println(\" Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2022-09-28"},{"lineNumber":159,"author":{"gitId":"redders7"},"content":"            Storage.writeToFile(fileLocation, list);","lastModifiedDate":"2022-09-28"},{"lineNumber":160,"author":{"gitId":"redders7"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":161,"author":{"gitId":"redders7"},"content":"            Ui.showIndexOutOfBounds();","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":164,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":165,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"redders7"},"content":"     * Find tasks containing a specified keyword","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"redders7"},"content":"     * @param list List of tasks to search","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"redders7"},"content":"     * @param keyWord Keyword to search","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"redders7"},"content":"    public static void findTasks (ArrayList\u003cTask\u003e list, String keyWord) {","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"redders7"},"content":"        int size \u003d list.size();","lastModifiedDate":"2022-09-28"},{"lineNumber":172,"author":{"gitId":"redders7"},"content":"        int numberOfTasks \u003d 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":173,"author":{"gitId":"redders7"},"content":"        Ui.drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":174,"author":{"gitId":"redders7"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-28"},{"lineNumber":175,"author":{"gitId":"redders7"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-09-28"},{"lineNumber":176,"author":{"gitId":"redders7"},"content":"            Task currTask \u003d list.get(i);","lastModifiedDate":"2022-09-28"},{"lineNumber":177,"author":{"gitId":"redders7"},"content":"            if (currTask.description.contains(keyWord)) {","lastModifiedDate":"2022-09-28"},{"lineNumber":178,"author":{"gitId":"redders7"},"content":"                System.out.println(numberOfTasks + \".\" + list.get(i).toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":179,"author":{"gitId":"redders7"},"content":"                numberOfTasks++;","lastModifiedDate":"2022-09-28"},{"lineNumber":180,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":183,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"redders7"},"content":"     * Modifies the task list according to the user command given","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"redders7"},"content":"     * @param commandType Type of command to be executed","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"redders7"},"content":"     * @param commandActual Description and deadline of command, if any","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"redders7"},"content":"     * @param fileLocation Path of local file to store command","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"redders7"},"content":"     * @throws IllegalCommand Error if unsupported command is issued","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"redders7"},"content":"    public void executeTask (String commandType, String commandActual, String fileLocation) throws IllegalCommand {","lastModifiedDate":"2022-09-27"},{"lineNumber":192,"author":{"gitId":"redders7"},"content":"        try {","lastModifiedDate":"2022-09-27"},{"lineNumber":193,"author":{"gitId":"redders7"},"content":"            switch (commandType) {","lastModifiedDate":"2022-09-27"},{"lineNumber":194,"author":{"gitId":"redders7"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-27"},{"lineNumber":195,"author":{"gitId":"redders7"},"content":"                setUnmarked(list,commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":196,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":197,"author":{"gitId":"redders7"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-27"},{"lineNumber":198,"author":{"gitId":"redders7"},"content":"                setMarked(list,commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":199,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":200,"author":{"gitId":"redders7"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-27"},{"lineNumber":201,"author":{"gitId":"redders7"},"content":"                newToDo(list, commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":203,"author":{"gitId":"redders7"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-27"},{"lineNumber":204,"author":{"gitId":"redders7"},"content":"                newDeadline(list,commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":206,"author":{"gitId":"redders7"},"content":"            case \"event\":","lastModifiedDate":"2022-09-27"},{"lineNumber":207,"author":{"gitId":"redders7"},"content":"                newEvent(list,commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":209,"author":{"gitId":"redders7"},"content":"            case \"list\":","lastModifiedDate":"2022-09-27"},{"lineNumber":210,"author":{"gitId":"redders7"},"content":"                listTasks(list);","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":212,"author":{"gitId":"redders7"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-27"},{"lineNumber":213,"author":{"gitId":"redders7"},"content":"                deleteTask(list, commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":215,"author":{"gitId":"redders7"},"content":"            case \"find\":","lastModifiedDate":"2022-09-27"},{"lineNumber":216,"author":{"gitId":"redders7"},"content":"                findTasks(list, commandActual);","lastModifiedDate":"2022-09-28"},{"lineNumber":217,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":218,"author":{"gitId":"redders7"},"content":"            case \"bye\":","lastModifiedDate":"2022-09-27"},{"lineNumber":219,"author":{"gitId":"redders7"},"content":"                isLast \u003d true;","lastModifiedDate":"2022-09-27"},{"lineNumber":220,"author":{"gitId":"redders7"},"content":"                break;","lastModifiedDate":"2022-09-27"},{"lineNumber":221,"author":{"gitId":"redders7"},"content":"            default:","lastModifiedDate":"2022-09-27"},{"lineNumber":222,"author":{"gitId":"redders7"},"content":"                throw new IllegalCommand();","lastModifiedDate":"2022-09-27"},{"lineNumber":223,"author":{"gitId":"redders7"},"content":"            }","lastModifiedDate":"2022-09-27"},{"lineNumber":224,"author":{"gitId":"redders7"},"content":"        } catch (EmptyToDo e) {","lastModifiedDate":"2022-09-27"},{"lineNumber":225,"author":{"gitId":"redders7"},"content":"            Ui.showEmptyToDo();","lastModifiedDate":"2022-09-27"},{"lineNumber":226,"author":{"gitId":"redders7"},"content":"        } catch (IllegalCommand e) {","lastModifiedDate":"2022-09-27"},{"lineNumber":227,"author":{"gitId":"redders7"},"content":"            Ui.showIllegalCommand();","lastModifiedDate":"2022-09-27"},{"lineNumber":228,"author":{"gitId":"redders7"},"content":"        }","lastModifiedDate":"2022-09-27"},{"lineNumber":229,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":230,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":231,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"redders7":231}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke;","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"import Duke.task.Event;","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":"import Duke.task.Task;","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"import Duke.task.Todo;","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":" * The Ui class deals with interactions with the users, including reading of inputs and displaying various outputs.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"public class Ui {","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"     * Prints a line to separate outputs","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"    public static void drawLine() {","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"     * Greets the user with welcome message","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"    public static void sayHi() {","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"        String tommyLogo \u003d  \" _____ ____  _______  _______  __ __  \\n\"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"                +   \"  | | |   | || || || || || ||  |_ _|  \\n\"","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"                +   \"  | | |   | || || || || || ||   | |  \\n\"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"                +   \"  |_| |___| || || || || || ||   | |  \\n\";","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Hello! I\u0027m\\n\" + tommyLogo + \"\\n What can I do for you?\");","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"     * Displays shutdown message to user","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"    public static void sayBye() {","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"     * Reads user input from command line and returns it","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"     * @return User input","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"redders7"},"content":"    public static String readInputs() {","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"redders7"},"content":"        Scanner command \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"redders7"},"content":"        String input \u003d command.nextLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"redders7"},"content":"        return input;","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"redders7"},"content":"     * Displays specified errors","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"redders7"},"content":"    public static void showError() {","lastModifiedDate":"2022-09-27"},{"lineNumber":61,"author":{"gitId":"redders7"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-27"},{"lineNumber":62,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":63,"author":{"gitId":"redders7"},"content":"    public static void showEmptyToDo() {","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"redders7"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-27"},{"lineNumber":66,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":67,"author":{"gitId":"redders7"},"content":"    public static void showIllegalCommand() {","lastModifiedDate":"2022-09-27"},{"lineNumber":68,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-27"},{"lineNumber":69,"author":{"gitId":"redders7"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-27"},{"lineNumber":70,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-27"},{"lineNumber":71,"author":{"gitId":"redders7"},"content":"    public static void showFileWriteError() {","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"redders7"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I was unable to write to the file :-(\");","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"redders7"},"content":"    public static void showIndexOutOfBounds() {","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"redders7"},"content":"        drawLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"redders7"},"content":"        System.out.println(\"☹ OOPS!!! The given task number does not exist!\");","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"redders7":80}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Deadline tasks are tasks that need to be done before a specific date/time","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"     * Create new Deadline task","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"     * @param by Deadline for task to be done by","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"        super(description);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"     * Format the task as a String to display as output","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"     * @return Formatted String of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"redders7":26}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Event tasks are tasks that start at a specific time and ends at a specific time.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"     * Create new Event task","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"     * @param at Time of Event task","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"        super(description);","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"        this.by \u003d at;","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"     * Format the task as a String to display as output","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"     * @return Formatted String of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"redders7":26}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Task is an abstract class for tasks.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class Task {","lastModifiedDate":"2022-08-23"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"    public String description;","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"    public boolean isDone;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"    public String type;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"    public String by;","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"     * Creates a new task","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-23"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"     * Formats the status of task to display as output","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"     * @return Formatted status of task","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"redders7"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-23"},{"lineNumber":26,"author":{"gitId":"redders7"},"content":"        return (isDone ? \"X\" : \" \"); // mark done Duke.task with X","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":28,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":29,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"redders7"},"content":"     * Mark the task as done.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"redders7"},"content":"    public void setDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":33,"author":{"gitId":"redders7"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-23"},{"lineNumber":34,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":35,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-23"},{"lineNumber":36,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"redders7"},"content":"     * Mark the task as undone.","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"redders7"},"content":"    public void setUnDone() {","lastModifiedDate":"2022-08-23"},{"lineNumber":40,"author":{"gitId":"redders7"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-23"},{"lineNumber":41,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-23"},{"lineNumber":42,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"redders7"},"content":"     * Format the task as a String to display as output","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"redders7"},"content":"     * @return Formatted String of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"redders7"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":48,"author":{"gitId":"redders7"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2022-08-29"},{"lineNumber":49,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":50,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-08-23"}],"authorContributionMap":{"redders7":50}},{"path":"src/main/java/Duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"package Duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":" * Todo tasks are basic tasks without any date/time attached to it.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":7,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"redders7"},"content":"     * Create a new Todo task","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"redders7"},"content":"     * @param description Description of task","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"redders7"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"redders7"},"content":"        super(description);","lastModifiedDate":"2022-08-29"},{"lineNumber":13,"author":{"gitId":"redders7"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":15,"author":{"gitId":"redders7"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"redders7"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"redders7"},"content":"     * Format the task as a String to display as output","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"     * @return Formatted String of the task","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"redders7"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"redders7"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"redders7"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"redders7"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"redders7"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"redders7"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"redders7":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"redders7"},"content":"todo Answer CS2113 tutorial questions","lastModifiedDate":"2022-09-04"},{"lineNumber":2,"author":{"gitId":"redders7"},"content":"deadline Weekly CS2113 Quiz /by Monday 9pm","lastModifiedDate":"2022-09-04"},{"lineNumber":3,"author":{"gitId":"redders7"},"content":"list","lastModifiedDate":"2022-09-04"},{"lineNumber":4,"author":{"gitId":"redders7"},"content":"event CS2113 lecture /at Friday 4 to 6pm","lastModifiedDate":"2022-09-04"},{"lineNumber":5,"author":{"gitId":"redders7"},"content":"mark 1","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"redders7"},"content":"list","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"redders7":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"redders7"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"redders7":1,"-":20}}]
