[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"T | 1 | read book","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"ivanthengwr":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.command.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.datafile.DataFile;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.datafile.EditDataFile;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    private static ArrayList\u003cTask\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    private static DataFile file \u003d new EditDataFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    private static final int TASK_DETAIL_INDEX \u003d 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    /** Minus 1 to convert user input index which starts from 1 to 0 for array indexing */","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    private static final int OFFSET_TO_ARRAY_INDEX \u003d 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    private static final int NO_TASK \u003d 0;","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    private static final int STATUS_INDEX \u003d 1;","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    private static final int TASK_TITLE_INDEX \u003d 2;","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    private static final int EVENT_OR_DEADLINE_DETAIL \u003d 3;","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    /** Use to track the number of Task that is added */","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    private static int indexTask \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    /** Index that the user have chosen to (un)mark or delete a task */","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    private static int indexOfChoice \u003d 0;","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    private static int countTask \u003d 0;","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isList \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isBye \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isMarkOrUnmark \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isMark \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isToDo \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isDeadline \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isEvent \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isDelete \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isNotCommand \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"    /** User input a task command without providing details */","lastModifiedDate":"2022-09-15"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isBlankDetail \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isNotValidIndexOfChoice \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isToDoFromDataFile \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isDeadlineFromDateFile \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isEventFromDataFile \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isMarkFromDataFile \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isEventFromStoredInput \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isDeadlineFromStoredInput \u003d false;","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"     * Checks a set of boolean variables to map out the types of command being called.","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"    public static void checkTypeOfCommand(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"        isBye \u003d splitUserInputs[COMMAND_INDEX].equals(\"bye\");","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"        isList \u003d splitUserInputs[COMMAND_INDEX].equals(\"list\");","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"        isMarkOrUnmark \u003d splitUserInputs[COMMAND_INDEX].equals(\"mark\")","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"                || splitUserInputs[COMMAND_INDEX].equals(\"unmark\");","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d splitUserInputs[COMMAND_INDEX].equals(\"todo\");","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d splitUserInputs[COMMAND_INDEX].equals(\"deadline\");","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d splitUserInputs[COMMAND_INDEX].equals(\"event\");","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"        isMark \u003d splitUserInputs[COMMAND_INDEX].equals(\"mark\");","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"        isDelete \u003d splitUserInputs[COMMAND_INDEX].equals(\"delete\");","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        isNotCommand \u003d !(isList || isMarkOrUnmark || isToDo || isDeadline || isEvent || isDelete);","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"     * Checks a set of boolean variables to map out the types of details","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"     * that the user has input.","lastModifiedDate":"2022-09-15"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"    public static void checkDetailOfCommand(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"        boolean isTaskCommand \u003d splitUserInputs.length \u003e 1;","lastModifiedDate":"2022-09-15"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"        if (isTaskCommand) {","lastModifiedDate":"2022-09-15"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"            isBlankDetail \u003d splitUserInputs[TASK_DETAIL_INDEX].isBlank();","lastModifiedDate":"2022-09-15"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the user input and split them into two parts of a string.","lastModifiedDate":"2022-09-15"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"     * @param in an input variable that the user to assigned too.","lastModifiedDate":"2022-09-15"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"     * @return userInput.split(\" \", 2) which is the split user input.","lastModifiedDate":"2022-09-15"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"    public static String[] getSplitUserInput(Scanner in) {","lastModifiedDate":"2022-09-15"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"        String userInput;","lastModifiedDate":"2022-09-15"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2022-09-15"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"        return userInput.split(\" \", 2);","lastModifiedDate":"2022-09-15"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"     * Runs the command that is given by the user input.","lastModifiedDate":"2022-09-15"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInput array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"    public static void runCommand(String[] splitUserInput) {","lastModifiedDate":"2022-09-15"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"        if (isBye) {","lastModifiedDate":"2022-09-15"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"            validateTypeOfCommand(splitUserInput);","lastModifiedDate":"2022-09-15"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"     * Validates the type of commands that is input by the user.","lastModifiedDate":"2022-09-15"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"     * Based on the keyword commands.","lastModifiedDate":"2022-09-15"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"     * Has helper functions checkValidCommand(splitUserInput)","lastModifiedDate":"2022-09-15"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInput array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"    public static void validateTypeOfCommand(String[] splitUserInput) {","lastModifiedDate":"2022-09-15"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotCommand) {","lastModifiedDate":"2022-09-15"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ HMM?? I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-15"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"            checkValidCommand(splitUserInput);","lastModifiedDate":"2022-09-15"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the type of command that the user input, if the input specified does not belong","lastModifiedDate":"2022-09-15"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"     * to any of the key word command, it would print a warning. Likewise, if an exception arise from a","lastModifiedDate":"2022-09-15"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"     * specific type of task, a warning message will be printed.","lastModifiedDate":"2022-09-07"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"    private static void checkValidCommand(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"            executeValidCommand(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"        } catch (ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"            printTypeOfTaskError();","lastModifiedDate":"2022-09-07"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the verified commands based on the respective keywords.","lastModifiedDate":"2022-09-15"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException which generates an error if the user input a blank task detail or","lastModifiedDate":"2022-09-08"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"     *                       did not fill up the task detail.","lastModifiedDate":"2022-09-08"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"    public static void executeValidCommand(String[] splitUserInputs) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"        if (isList) {","lastModifiedDate":"2022-09-15"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"          getList();","lastModifiedDate":"2022-09-15"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isBlankDetail) {","lastModifiedDate":"2022-09-15"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException();","lastModifiedDate":"2022-09-07"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isMarkOrUnmark) {","lastModifiedDate":"2022-09-15"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"            markOrUnmarkTask(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"        }  else if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"            addToDoTask(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"            addDeadlineTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"            addEventTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDelete) {","lastModifiedDate":"2022-09-15"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"            deleteTask(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the assignment to the specific task.","lastModifiedDate":"2022-09-15"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignment that takes in the type of task.","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"    public static void addTask(Task assignment) {","lastModifiedDate":"2022-09-01"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"        assignments.add(assignment);","lastModifiedDate":"2022-09-15"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Event task.","lastModifiedDate":"2022-09-01"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"    private static void addEventTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Event(splitUserInputs[TASK_DETAIL_INDEX]));","lastModifiedDate":"2022-09-07"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"        printTypeOfTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-15"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"        saveToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Deadline task.","lastModifiedDate":"2022-09-01"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"    private static void addDeadlineTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Deadline(splitUserInputs[TASK_DETAIL_INDEX]));","lastModifiedDate":"2022-09-07"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"        printTypeOfTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-15"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"        saveToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case to do task.","lastModifiedDate":"2022-09-01"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"    private static void addToDoTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d splitUserInputs[TASK_DETAIL_INDEX];","lastModifiedDate":"2022-09-07"},{"lineNumber":203,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new ToDo(taskDetail));","lastModifiedDate":"2022-09-07"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"        printTypeOfTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-15"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"        saveToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":208,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":209,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":210,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":211,"author":{"gitId":"ivanthengwr"},"content":"     * Deletes the task that is specified by the user.","lastModifiedDate":"2022-09-15"},{"lineNumber":212,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":213,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":214,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":215,"author":{"gitId":"ivanthengwr"},"content":"    private static void deleteTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":216,"author":{"gitId":"ivanthengwr"},"content":"        validateIndexOfChoice(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":217,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotValidIndexOfChoice) {","lastModifiedDate":"2022-09-15"},{"lineNumber":218,"author":{"gitId":"ivanthengwr"},"content":"            isNotValidIndexOfChoice \u003d false;","lastModifiedDate":"2022-09-15"},{"lineNumber":219,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-15"},{"lineNumber":220,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":221,"author":{"gitId":"ivanthengwr"},"content":"        countTask--;","lastModifiedDate":"2022-09-15"},{"lineNumber":222,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":223,"author":{"gitId":"ivanthengwr"},"content":"            printDeletedTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":224,"author":{"gitId":"ivanthengwr"},"content":"            assignments.remove(indexOfChoice);","lastModifiedDate":"2022-09-15"},{"lineNumber":225,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":226,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Stop there! Please delete something that is within the list!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":227,"author":{"gitId":"ivanthengwr"},"content":"            countTask++;","lastModifiedDate":"2022-09-15"},{"lineNumber":228,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-15"},{"lineNumber":229,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":230,"author":{"gitId":"ivanthengwr"},"content":"        indexTask--;","lastModifiedDate":"2022-09-15"},{"lineNumber":231,"author":{"gitId":"ivanthengwr"},"content":"        saveToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":232,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":233,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":234,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":235,"author":{"gitId":"ivanthengwr"},"content":"     * Validates the index of choice of the user input to check if it is input correctly.","lastModifiedDate":"2022-09-15"},{"lineNumber":236,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":237,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":238,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":239,"author":{"gitId":"ivanthengwr"},"content":"    private static void validateIndexOfChoice(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":240,"author":{"gitId":"ivanthengwr"},"content":"        //To handle a case where user tries to mark or unmark a task that has not been specified","lastModifiedDate":"2022-09-07"},{"lineNumber":241,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":242,"author":{"gitId":"ivanthengwr"},"content":"            indexOfChoice \u003d readIndexOfChoice(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":243,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":244,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Hey! Please choose a positive digit that correspondence to the list.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":245,"author":{"gitId":"ivanthengwr"},"content":"            isNotValidIndexOfChoice \u003d true;","lastModifiedDate":"2022-09-15"},{"lineNumber":246,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":247,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":248,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":249,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":250,"author":{"gitId":"ivanthengwr"},"content":"     * Marks or unmark a task that the User specifies and also checks that the User","lastModifiedDate":"2022-09-15"},{"lineNumber":251,"author":{"gitId":"ivanthengwr"},"content":"     * has input the mark command correctly before proceeding.","lastModifiedDate":"2022-09-15"},{"lineNumber":252,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":253,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":254,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":255,"author":{"gitId":"ivanthengwr"},"content":"    public static void markOrUnmarkTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-15"},{"lineNumber":256,"author":{"gitId":"ivanthengwr"},"content":"        validateIndexOfChoice(splitUserInputs);","lastModifiedDate":"2022-09-15"},{"lineNumber":257,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":258,"author":{"gitId":"ivanthengwr"},"content":"            checkMarkOrUnmark();","lastModifiedDate":"2022-09-15"},{"lineNumber":259,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":260,"author":{"gitId":"ivanthengwr"},"content":"            printMarkOrUnmarkError();","lastModifiedDate":"2022-09-15"},{"lineNumber":261,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-15"},{"lineNumber":262,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":263,"author":{"gitId":"ivanthengwr"},"content":"        printMarkOrUnmarkTask(isMark);","lastModifiedDate":"2022-09-15"},{"lineNumber":264,"author":{"gitId":"ivanthengwr"},"content":"        saveToFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":265,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":266,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":267,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":268,"author":{"gitId":"ivanthengwr"},"content":"     * Check to see if the task is to be marked or unmarked.","lastModifiedDate":"2022-09-15"},{"lineNumber":269,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":270,"author":{"gitId":"ivanthengwr"},"content":"    private static void checkMarkOrUnmark() {","lastModifiedDate":"2022-09-15"},{"lineNumber":271,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-07"},{"lineNumber":272,"author":{"gitId":"ivanthengwr"},"content":"            assignments.get(indexOfChoice).markAsDone();","lastModifiedDate":"2022-09-15"},{"lineNumber":273,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":274,"author":{"gitId":"ivanthengwr"},"content":"            assignments.get(indexOfChoice).unmarkAsDone();","lastModifiedDate":"2022-09-15"},{"lineNumber":275,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":276,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":277,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":278,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":279,"author":{"gitId":"ivanthengwr"},"content":"     * Reads the index of choice from the User input.","lastModifiedDate":"2022-09-15"},{"lineNumber":280,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":281,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-15"},{"lineNumber":282,"author":{"gitId":"ivanthengwr"},"content":"     * @return indexOfChoice that would be offset to an array index.","lastModifiedDate":"2022-09-15"},{"lineNumber":283,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException an error generated if the User input a negative number or blank.","lastModifiedDate":"2022-09-15"},{"lineNumber":284,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":285,"author":{"gitId":"ivanthengwr"},"content":"    public static int readIndexOfChoice(String[] splitUserInputs) throws DukeException {","lastModifiedDate":"2022-09-15"},{"lineNumber":286,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNotPositiveDigit \u003d !splitUserInputs[TASK_DETAIL_INDEX].matches(\"[0-9]+\")","lastModifiedDate":"2022-09-15"},{"lineNumber":287,"author":{"gitId":"ivanthengwr"},"content":"                || splitUserInputs[TASK_DETAIL_INDEX].startsWith(\"-\");","lastModifiedDate":"2022-09-15"},{"lineNumber":288,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotPositiveDigit) {","lastModifiedDate":"2022-09-15"},{"lineNumber":289,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException();","lastModifiedDate":"2022-09-07"},{"lineNumber":290,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":291,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfTask \u003d Integer.parseInt(splitUserInputs[TASK_DETAIL_INDEX]);","lastModifiedDate":"2022-09-15"},{"lineNumber":292,"author":{"gitId":"ivanthengwr"},"content":"        return indexOfTask - OFFSET_TO_ARRAY_INDEX;","lastModifiedDate":"2022-09-15"},{"lineNumber":293,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":294,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":295,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":296,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the starting message of the CLI.","lastModifiedDate":"2022-09-01"},{"lineNumber":297,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":298,"author":{"gitId":"ivanthengwr"},"content":"     * @return linDivider a string for line separator","lastModifiedDate":"2022-09-01"},{"lineNumber":299,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":300,"author":{"gitId":"ivanthengwr"},"content":"    public static String printWelcomeMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":301,"author":{"gitId":"ivanthengwr"},"content":"        String logo \u003d \"___________.__                ___.\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":302,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\\\_   _____/|  | _____    _____|  |__\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":303,"author":{"gitId":"ivanthengwr"},"content":"                + \" |    __)  |  | \\\\__  \\\\  /  ___/  |  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":304,"author":{"gitId":"ivanthengwr"},"content":"                + \" |     \\\\   |  |__/ __ \\\\_\\\\___ \\\\|   Y  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":305,"author":{"gitId":"ivanthengwr"},"content":"                + \" \\\\___  /   |____(____  /____  \u003e___|  /\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":306,"author":{"gitId":"ivanthengwr"},"content":"                + \"     \\\\/              \\\\/     \\\\/     \\\\/\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":308,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d \"____________________________________________________________\";","lastModifiedDate":"2022-09-15"},{"lineNumber":309,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\" + lineDivider","lastModifiedDate":"2022-08-24"},{"lineNumber":310,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\n\\t Hello! I\u0027m Flash\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":311,"author":{"gitId":"ivanthengwr"},"content":"                + file.getDataFileStatus()","lastModifiedDate":"2022-09-16"},{"lineNumber":312,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\n\\t What can I do for you?\\n\"","lastModifiedDate":"2022-09-15"},{"lineNumber":313,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t\" + lineDivider + \"\\n\");","lastModifiedDate":"2022-09-15"},{"lineNumber":314,"author":{"gitId":"ivanthengwr"},"content":"        return lineDivider;","lastModifiedDate":"2022-09-01"},{"lineNumber":315,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":316,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":317,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":318,"author":{"gitId":"ivanthengwr"},"content":"     * Gets a list from the user inputs.","lastModifiedDate":"2022-09-15"},{"lineNumber":319,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":320,"author":{"gitId":"ivanthengwr"},"content":"    public static void getList() {","lastModifiedDate":"2022-09-15"},{"lineNumber":321,"author":{"gitId":"ivanthengwr"},"content":"        int numberOrder \u003d 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":322,"author":{"gitId":"ivanthengwr"},"content":"        if (indexTask \u003d\u003d NO_TASK) {","lastModifiedDate":"2022-09-16"},{"lineNumber":323,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t There is no task in the list.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":324,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":325,"author":{"gitId":"ivanthengwr"},"content":"            printList(numberOrder);","lastModifiedDate":"2022-09-15"},{"lineNumber":326,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":327,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":328,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":329,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":330,"author":{"gitId":"ivanthengwr"},"content":"     * Prints out a list of the tasks saved from the user inputs.","lastModifiedDate":"2022-09-15"},{"lineNumber":331,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":332,"author":{"gitId":"ivanthengwr"},"content":"     * @param numberOrder a numbering index that is used to index the task in the list.","lastModifiedDate":"2022-09-15"},{"lineNumber":333,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":334,"author":{"gitId":"ivanthengwr"},"content":"    private static void printList(int numberOrder) {","lastModifiedDate":"2022-09-15"},{"lineNumber":335,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":336,"author":{"gitId":"ivanthengwr"},"content":"        for (int i \u003d 0; i \u003c indexTask; i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":337,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t \" + numberOrder + \".[\"","lastModifiedDate":"2022-09-01"},{"lineNumber":338,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).getStatusOfTypeTask() + \"][\"","lastModifiedDate":"2022-09-15"},{"lineNumber":339,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).getStatusOfDone() + \"] \"","lastModifiedDate":"2022-09-15"},{"lineNumber":340,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).displayTypeTaskDetails());","lastModifiedDate":"2022-09-15"},{"lineNumber":341,"author":{"gitId":"ivanthengwr"},"content":"            numberOrder++;","lastModifiedDate":"2022-09-01"},{"lineNumber":342,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":343,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":344,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":345,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":346,"author":{"gitId":"ivanthengwr"},"content":"     * Prints a message in CLI to inform the user if the task has been marked or not.","lastModifiedDate":"2022-09-01"},{"lineNumber":347,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":348,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark boolean true or false to check if the task has been marked.","lastModifiedDate":"2022-09-01"},{"lineNumber":349,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":350,"author":{"gitId":"ivanthengwr"},"content":"    public static void printMarkOrUnmarkTask(boolean isMark) {","lastModifiedDate":"2022-09-15"},{"lineNumber":351,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":352,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":353,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":354,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":355,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":356,"author":{"gitId":"ivanthengwr"},"content":"        printTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":357,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":358,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":359,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":360,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the type of task and its respective details","lastModifiedDate":"2022-09-07"},{"lineNumber":361,"author":{"gitId":"ivanthengwr"},"content":"     * of the description that the user input.","lastModifiedDate":"2022-09-07"},{"lineNumber":362,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":363,"author":{"gitId":"ivanthengwr"},"content":"    public static void printTypeOfTaskDetail() {","lastModifiedDate":"2022-09-15"},{"lineNumber":364,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Roger that. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":365,"author":{"gitId":"ivanthengwr"},"content":"        printTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":366,"author":{"gitId":"ivanthengwr"},"content":"        countTask++;","lastModifiedDate":"2022-09-15"},{"lineNumber":367,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Now you have \" + countTask + \" in the list.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":368,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":369,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":370,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":371,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the specific task detail that is acts as a helper function for","lastModifiedDate":"2022-09-15"},{"lineNumber":372,"author":{"gitId":"ivanthengwr"},"content":"     * printTypeOfTaskDetail(), printMarkOrUnmarkTask(boolean isMark) and printDeletedTask().","lastModifiedDate":"2022-09-15"},{"lineNumber":373,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":374,"author":{"gitId":"ivanthengwr"},"content":"    public static void printTaskDetail() {","lastModifiedDate":"2022-09-15"},{"lineNumber":375,"author":{"gitId":"ivanthengwr"},"content":"        int index \u003d indexTask;","lastModifiedDate":"2022-09-15"},{"lineNumber":376,"author":{"gitId":"ivanthengwr"},"content":"        if (isMarkOrUnmark || isDelete) {","lastModifiedDate":"2022-09-15"},{"lineNumber":377,"author":{"gitId":"ivanthengwr"},"content":"            index \u003d indexOfChoice;","lastModifiedDate":"2022-09-15"},{"lineNumber":378,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":379,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [\" + assignments.get(index).getStatusOfTypeTask()","lastModifiedDate":"2022-09-15"},{"lineNumber":380,"author":{"gitId":"ivanthengwr"},"content":"                + \"]\" + \"[\" + assignments.get(index).getStatusOfDone()","lastModifiedDate":"2022-09-15"},{"lineNumber":381,"author":{"gitId":"ivanthengwr"},"content":"                + \"] \" + assignments.get(index).displayTypeTaskDetails());","lastModifiedDate":"2022-09-15"},{"lineNumber":382,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":383,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":384,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":385,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the deleted task for the user to see.","lastModifiedDate":"2022-09-15"},{"lineNumber":386,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":387,"author":{"gitId":"ivanthengwr"},"content":"    public static void printDeletedTask() {","lastModifiedDate":"2022-09-15"},{"lineNumber":388,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-15"},{"lineNumber":389,"author":{"gitId":"ivanthengwr"},"content":"        printTaskDetail();","lastModifiedDate":"2022-09-15"},{"lineNumber":390,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Now you have \" + countTask + \" tasks in the list.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":391,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":392,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":393,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":394,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the Task Error in case the user calls for a type of task","lastModifiedDate":"2022-09-07"},{"lineNumber":395,"author":{"gitId":"ivanthengwr"},"content":"     * but did not specify the task detail.","lastModifiedDate":"2022-09-07"},{"lineNumber":396,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":397,"author":{"gitId":"ivanthengwr"},"content":"    public static void printTypeOfTaskError() {","lastModifiedDate":"2022-09-07"},{"lineNumber":398,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":399,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ OH MAN!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":400,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":401,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ OH MAN!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":402,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-07"},{"lineNumber":403,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ OH MAN!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":404,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isMarkOrUnmark) {","lastModifiedDate":"2022-09-15"},{"lineNumber":405,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ OH MAN!!! You did not tell me which to (un)mark.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":406,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDelete) {","lastModifiedDate":"2022-09-15"},{"lineNumber":407,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t ☹ OH MAN!!! You did not tell me what to delete.\");","lastModifiedDate":"2022-09-15"},{"lineNumber":408,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":409,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":410,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":411,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":412,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the error message of mark or unmark if the user is trying to specify","lastModifiedDate":"2022-09-15"},{"lineNumber":413,"author":{"gitId":"ivanthengwr"},"content":"     * a (un)mark on a task that does not exist.","lastModifiedDate":"2022-09-15"},{"lineNumber":414,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":415,"author":{"gitId":"ivanthengwr"},"content":"    private static void printMarkOrUnmarkError() {","lastModifiedDate":"2022-09-15"},{"lineNumber":416,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-15"},{"lineNumber":417,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to mark a task that has not been specified!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":418,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":419,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to unmark a task that has not been specified!\");","lastModifiedDate":"2022-09-15"},{"lineNumber":420,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":421,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":422,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":423,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":424,"author":{"gitId":"ivanthengwr"},"content":"     * Saves the existing data into dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":425,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":426,"author":{"gitId":"ivanthengwr"},"content":"    private static void saveToFile() {","lastModifiedDate":"2022-09-16"},{"lineNumber":427,"author":{"gitId":"ivanthengwr"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-09-16"},{"lineNumber":428,"author":{"gitId":"ivanthengwr"},"content":"        for (int i \u003d 0; i \u003c indexTask; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":429,"author":{"gitId":"ivanthengwr"},"content":"            addToTaskList(taskList, i);","lastModifiedDate":"2022-09-16"},{"lineNumber":430,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":431,"author":{"gitId":"ivanthengwr"},"content":"        file.saveToFile(taskList.toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":432,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":433,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":434,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":435,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the data in the dataFile into a list of strings.","lastModifiedDate":"2022-09-16"},{"lineNumber":436,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":437,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskList which is a list of data that is obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":438,"author":{"gitId":"ivanthengwr"},"content":"     * @param increment which iterates through the list.","lastModifiedDate":"2022-09-16"},{"lineNumber":439,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":440,"author":{"gitId":"ivanthengwr"},"content":"    private static void addToTaskList(StringBuilder taskList, int increment) {","lastModifiedDate":"2022-09-16"},{"lineNumber":441,"author":{"gitId":"ivanthengwr"},"content":"        taskList.append(getTaskDetail(increment)).append(\"\\n\");","lastModifiedDate":"2022-09-16"},{"lineNumber":442,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":443,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":444,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":445,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the task detail from the stored input and changes the display format","lastModifiedDate":"2022-09-16"},{"lineNumber":446,"author":{"gitId":"ivanthengwr"},"content":"     * which is used to be displayed in the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":447,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":448,"author":{"gitId":"ivanthengwr"},"content":"     * @param index obtains the index of the assignment to access it.","lastModifiedDate":"2022-09-16"},{"lineNumber":449,"author":{"gitId":"ivanthengwr"},"content":"     * @return A string that changes the format of the details being","lastModifiedDate":"2022-09-16"},{"lineNumber":450,"author":{"gitId":"ivanthengwr"},"content":"     * displayed in the dataFIle.","lastModifiedDate":"2022-09-16"},{"lineNumber":451,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":452,"author":{"gitId":"ivanthengwr"},"content":"    private static String getTaskDetail(int index) {","lastModifiedDate":"2022-09-16"},{"lineNumber":453,"author":{"gitId":"ivanthengwr"},"content":"        String statusOfTypeTask \u003d assignments.get(index)","lastModifiedDate":"2022-09-16"},{"lineNumber":454,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":455,"author":{"gitId":"ivanthengwr"},"content":"        String changeStatusOfDone \u003d changeStatusOfDone(assignments","lastModifiedDate":"2022-09-16"},{"lineNumber":456,"author":{"gitId":"ivanthengwr"},"content":"                .get(index).getStatusOfDone());","lastModifiedDate":"2022-09-16"},{"lineNumber":457,"author":{"gitId":"ivanthengwr"},"content":"        String changeTaskDetails \u003d changeDetailDisplay(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":458,"author":{"gitId":"ivanthengwr"},"content":"        return statusOfTypeTask + \" | \" + changeStatusOfDone + \" | \" + changeTaskDetails;","lastModifiedDate":"2022-09-16"},{"lineNumber":459,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":460,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":461,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":462,"author":{"gitId":"ivanthengwr"},"content":"     * Changes the format of how the task status is displayed in the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":463,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":464,"author":{"gitId":"ivanthengwr"},"content":"     * @param statusOfDone which is a string to obtain the status of","lastModifiedDate":"2022-09-16"},{"lineNumber":465,"author":{"gitId":"ivanthengwr"},"content":"     *                     done or not denoted by \"X\".","lastModifiedDate":"2022-09-16"},{"lineNumber":466,"author":{"gitId":"ivanthengwr"},"content":"     * @return statusOfDone which changes \"X\" to \"1\" if not \"0\".","lastModifiedDate":"2022-09-16"},{"lineNumber":467,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":468,"author":{"gitId":"ivanthengwr"},"content":"    private static String changeStatusOfDone(String statusOfDone) {","lastModifiedDate":"2022-09-16"},{"lineNumber":469,"author":{"gitId":"ivanthengwr"},"content":"        boolean isChecked \u003d statusOfDone.contains(\"X\");","lastModifiedDate":"2022-09-16"},{"lineNumber":470,"author":{"gitId":"ivanthengwr"},"content":"        if (isChecked) {","lastModifiedDate":"2022-09-16"},{"lineNumber":471,"author":{"gitId":"ivanthengwr"},"content":"            statusOfDone \u003d \"1\";","lastModifiedDate":"2022-09-16"},{"lineNumber":472,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":473,"author":{"gitId":"ivanthengwr"},"content":"            statusOfDone \u003d \"0\";","lastModifiedDate":"2022-09-16"},{"lineNumber":474,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":475,"author":{"gitId":"ivanthengwr"},"content":"        return statusOfDone;","lastModifiedDate":"2022-09-16"},{"lineNumber":476,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":477,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":478,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":479,"author":{"gitId":"ivanthengwr"},"content":"     * Changes the format of how the task detail is being display in the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":480,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":481,"author":{"gitId":"ivanthengwr"},"content":"     * @param index obtains the index of the assignment to access it.","lastModifiedDate":"2022-09-16"},{"lineNumber":482,"author":{"gitId":"ivanthengwr"},"content":"     * @return changeTaskDetails which is a string of changed display format.","lastModifiedDate":"2022-09-16"},{"lineNumber":483,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":484,"author":{"gitId":"ivanthengwr"},"content":"    private static String changeDetailDisplay(int index) {","lastModifiedDate":"2022-09-16"},{"lineNumber":485,"author":{"gitId":"ivanthengwr"},"content":"        String changeTaskDetails \u003d assignments.get(index).getDescription();","lastModifiedDate":"2022-09-16"},{"lineNumber":486,"author":{"gitId":"ivanthengwr"},"content":"        checkStoredInputStatus(index);","lastModifiedDate":"2022-09-16"},{"lineNumber":487,"author":{"gitId":"ivanthengwr"},"content":"        changeTaskDetails \u003d modifyEVentOrDeadlineDetails(index, changeTaskDetails);","lastModifiedDate":"2022-09-16"},{"lineNumber":488,"author":{"gitId":"ivanthengwr"},"content":"        return changeTaskDetails;","lastModifiedDate":"2022-09-16"},{"lineNumber":489,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":490,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":491,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":492,"author":{"gitId":"ivanthengwr"},"content":"     * Modifies the event\u0027s or deadline\u0027s task details to be displayed on the","lastModifiedDate":"2022-09-16"},{"lineNumber":493,"author":{"gitId":"ivanthengwr"},"content":"     * dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":494,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":495,"author":{"gitId":"ivanthengwr"},"content":"     * @param index obtains the index of the assignment to access it.","lastModifiedDate":"2022-09-16"},{"lineNumber":496,"author":{"gitId":"ivanthengwr"},"content":"     * @param changeTaskDetails which is a string of changed display format.","lastModifiedDate":"2022-09-16"},{"lineNumber":497,"author":{"gitId":"ivanthengwr"},"content":"     * @return changeTaskDetails which is a modified detail.","lastModifiedDate":"2022-09-16"},{"lineNumber":498,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":499,"author":{"gitId":"ivanthengwr"},"content":"    private static String modifyEVentOrDeadlineDetails(int index, String changeTaskDetails) {","lastModifiedDate":"2022-09-16"},{"lineNumber":500,"author":{"gitId":"ivanthengwr"},"content":"        if (isEventFromStoredInput) {","lastModifiedDate":"2022-09-16"},{"lineNumber":501,"author":{"gitId":"ivanthengwr"},"content":"            changeTaskDetails \u003d assignments.get(index)","lastModifiedDate":"2022-09-16"},{"lineNumber":502,"author":{"gitId":"ivanthengwr"},"content":"                    .getDescription().replace(\"/at\", \"|\");","lastModifiedDate":"2022-09-16"},{"lineNumber":503,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadlineFromStoredInput) {","lastModifiedDate":"2022-09-16"},{"lineNumber":504,"author":{"gitId":"ivanthengwr"},"content":"            changeTaskDetails \u003d assignments.get(index)","lastModifiedDate":"2022-09-16"},{"lineNumber":505,"author":{"gitId":"ivanthengwr"},"content":"                    .getDescription().replace(\"/by\", \"|\");","lastModifiedDate":"2022-09-16"},{"lineNumber":506,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":507,"author":{"gitId":"ivanthengwr"},"content":"        return changeTaskDetails;","lastModifiedDate":"2022-09-16"},{"lineNumber":508,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":509,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":510,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":511,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the stored input to see if it is an Event or Deadline task.","lastModifiedDate":"2022-09-16"},{"lineNumber":512,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":513,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is a string of changed display format.","lastModifiedDate":"2022-09-16"},{"lineNumber":514,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":515,"author":{"gitId":"ivanthengwr"},"content":"    public static void checkStoredInputStatus(int index) {","lastModifiedDate":"2022-09-16"},{"lineNumber":516,"author":{"gitId":"ivanthengwr"},"content":"        isEventFromStoredInput \u003d assignments.get(index)","lastModifiedDate":"2022-09-16"},{"lineNumber":517,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask().contains(\"E\");","lastModifiedDate":"2022-09-16"},{"lineNumber":518,"author":{"gitId":"ivanthengwr"},"content":"        isDeadlineFromStoredInput \u003d assignments.get(index)","lastModifiedDate":"2022-09-16"},{"lineNumber":519,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask().contains(\"D\");","lastModifiedDate":"2022-09-16"},{"lineNumber":520,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":521,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":522,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":523,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the task from the data file into the stored input.","lastModifiedDate":"2022-09-16"},{"lineNumber":524,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":525,"author":{"gitId":"ivanthengwr"},"content":"    private static void addTaskFromDataFile() {","lastModifiedDate":"2022-09-16"},{"lineNumber":526,"author":{"gitId":"ivanthengwr"},"content":"        int numOfTask \u003d file.storeDataFileContents().size();","lastModifiedDate":"2022-09-16"},{"lineNumber":527,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e taskList \u003d file.storeDataFileContents();","lastModifiedDate":"2022-09-16"},{"lineNumber":528,"author":{"gitId":"ivanthengwr"},"content":"        for(int i \u003d 0; i \u003c numOfTask; i++) {","lastModifiedDate":"2022-09-16"},{"lineNumber":529,"author":{"gitId":"ivanthengwr"},"content":"            String[] task \u003d taskList.get(i).split(\"\\\\|\");","lastModifiedDate":"2022-09-16"},{"lineNumber":530,"author":{"gitId":"ivanthengwr"},"content":"            addSingleTaskFromFile(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":531,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":532,"author":{"gitId":"ivanthengwr"},"content":"        countTask \u003d indexTask;","lastModifiedDate":"2022-09-16"},{"lineNumber":533,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":534,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":535,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":536,"author":{"gitId":"ivanthengwr"},"content":"     * Adds a single task from the file into the stored input.","lastModifiedDate":"2022-09-16"},{"lineNumber":537,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":538,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":539,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":540,"author":{"gitId":"ivanthengwr"},"content":"    private static void addSingleTaskFromFile(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":541,"author":{"gitId":"ivanthengwr"},"content":"        checkDataFileCommand(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":542,"author":{"gitId":"ivanthengwr"},"content":"        addTypeOfTaskFromFile(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":543,"author":{"gitId":"ivanthengwr"},"content":"        checkTaskStatusFromFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":544,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-16"},{"lineNumber":545,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":546,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":547,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":548,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the type of task from the file into the stored input.","lastModifiedDate":"2022-09-16"},{"lineNumber":549,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":550,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":551,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":552,"author":{"gitId":"ivanthengwr"},"content":"    private static void addTypeOfTaskFromFile(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":553,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDoFromDataFile) {","lastModifiedDate":"2022-09-16"},{"lineNumber":554,"author":{"gitId":"ivanthengwr"},"content":"            addToDoTaskFromFile(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":555,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadlineFromDateFile) {","lastModifiedDate":"2022-09-16"},{"lineNumber":556,"author":{"gitId":"ivanthengwr"},"content":"            addDeadlineTaskFromFile(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":557,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEventFromDataFile) {","lastModifiedDate":"2022-09-16"},{"lineNumber":558,"author":{"gitId":"ivanthengwr"},"content":"            addEventTaskFromFile(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":559,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":560,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":561,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":562,"author":{"gitId":"ivanthengwr"},"content":"    private static void checkTaskStatusFromFile() {","lastModifiedDate":"2022-09-16"},{"lineNumber":563,"author":{"gitId":"ivanthengwr"},"content":"        if (isMarkFromDataFile) {","lastModifiedDate":"2022-09-16"},{"lineNumber":564,"author":{"gitId":"ivanthengwr"},"content":"            assignments.get(indexTask).markAsDone();","lastModifiedDate":"2022-09-16"},{"lineNumber":565,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":566,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":567,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":568,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":569,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the event task from the dataFile, some modified is needed for standardisation","lastModifiedDate":"2022-09-16"},{"lineNumber":570,"author":{"gitId":"ivanthengwr"},"content":"     * with the stored input and dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":571,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":572,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":573,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":574,"author":{"gitId":"ivanthengwr"},"content":"    private static void addEventTaskFromFile(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":575,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d task[TASK_TITLE_INDEX].trim()","lastModifiedDate":"2022-09-16"},{"lineNumber":576,"author":{"gitId":"ivanthengwr"},"content":"                + \" /at\" + task[EVENT_OR_DEADLINE_DETAIL];","lastModifiedDate":"2022-09-16"},{"lineNumber":577,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Event(taskDetail));","lastModifiedDate":"2022-09-16"},{"lineNumber":578,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":579,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":580,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":581,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":582,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the deadline task from the dataFile, some modified is needed for standardisation","lastModifiedDate":"2022-09-16"},{"lineNumber":583,"author":{"gitId":"ivanthengwr"},"content":"     * with the stored input and dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":584,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":585,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":586,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":587,"author":{"gitId":"ivanthengwr"},"content":"    private static void addDeadlineTaskFromFile(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":588,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d task[TASK_TITLE_INDEX].trim()","lastModifiedDate":"2022-09-16"},{"lineNumber":589,"author":{"gitId":"ivanthengwr"},"content":"                + \" /by\" + task[EVENT_OR_DEADLINE_DETAIL];","lastModifiedDate":"2022-09-16"},{"lineNumber":590,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Deadline(taskDetail));","lastModifiedDate":"2022-09-16"},{"lineNumber":591,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":592,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":593,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":594,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":595,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the todo task from the dataFile to the stored input.","lastModifiedDate":"2022-09-16"},{"lineNumber":596,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":597,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":598,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":599,"author":{"gitId":"ivanthengwr"},"content":"    private static void addToDoTaskFromFile(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":600,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new ToDo(task[TASK_TITLE_INDEX].trim()));","lastModifiedDate":"2022-09-16"},{"lineNumber":601,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-16"},{"lineNumber":602,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":603,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":604,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":605,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the type of command of each task from in the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":606,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":607,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is a specific task obtained from the dataFile.","lastModifiedDate":"2022-09-16"},{"lineNumber":608,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":609,"author":{"gitId":"ivanthengwr"},"content":"    private static void checkDataFileCommand(String[] task) {","lastModifiedDate":"2022-09-16"},{"lineNumber":610,"author":{"gitId":"ivanthengwr"},"content":"        isToDoFromDataFile \u003d task[COMMAND_INDEX].contains(\"T\");","lastModifiedDate":"2022-09-16"},{"lineNumber":611,"author":{"gitId":"ivanthengwr"},"content":"        isDeadlineFromDateFile \u003d task[COMMAND_INDEX].contains(\"D\");","lastModifiedDate":"2022-09-16"},{"lineNumber":612,"author":{"gitId":"ivanthengwr"},"content":"        isEventFromDataFile \u003d task[COMMAND_INDEX].contains(\"E\");","lastModifiedDate":"2022-09-16"},{"lineNumber":613,"author":{"gitId":"ivanthengwr"},"content":"        isMarkFromDataFile \u003d task[STATUS_INDEX].contains(\"1\");","lastModifiedDate":"2022-09-16"},{"lineNumber":614,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":615,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":616,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":617,"author":{"gitId":"ivanthengwr"},"content":"     * Runs the main Flash bot in the Duke java program.","lastModifiedDate":"2022-09-16"},{"lineNumber":618,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":619,"author":{"gitId":"ivanthengwr"},"content":"     * @param lineDivider a string to for line separator.","lastModifiedDate":"2022-09-16"},{"lineNumber":620,"author":{"gitId":"ivanthengwr"},"content":"     * @param in a scanner variable to allow User Input.","lastModifiedDate":"2022-09-16"},{"lineNumber":621,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":622,"author":{"gitId":"ivanthengwr"},"content":"    private static void runFlash(String lineDivider, Scanner in) {","lastModifiedDate":"2022-09-16"},{"lineNumber":623,"author":{"gitId":"ivanthengwr"},"content":"        String[] splitUserInputs \u003d getSplitUserInput(in);","lastModifiedDate":"2022-09-16"},{"lineNumber":624,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\" + lineDivider);","lastModifiedDate":"2022-09-16"},{"lineNumber":625,"author":{"gitId":"ivanthengwr"},"content":"        checkTypeOfCommand(splitUserInputs);","lastModifiedDate":"2022-09-16"},{"lineNumber":626,"author":{"gitId":"ivanthengwr"},"content":"        checkDetailOfCommand(splitUserInputs);","lastModifiedDate":"2022-09-16"},{"lineNumber":627,"author":{"gitId":"ivanthengwr"},"content":"        runCommand(splitUserInputs);","lastModifiedDate":"2022-09-16"},{"lineNumber":628,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\" + lineDivider + \"\\n\");","lastModifiedDate":"2022-09-16"},{"lineNumber":629,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":630,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":631,"author":{"gitId":"ivanthengwr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":632,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d printWelcomeMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":633,"author":{"gitId":"ivanthengwr"},"content":"        addTaskFromDataFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":634,"author":{"gitId":"ivanthengwr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":635,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":636,"author":{"gitId":"ivanthengwr"},"content":"        while (!isBye) {","lastModifiedDate":"2022-09-15"},{"lineNumber":637,"author":{"gitId":"ivanthengwr"},"content":"            runFlash(lineDivider, in);","lastModifiedDate":"2022-09-16"},{"lineNumber":638,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":640,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":641,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":642,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":643,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"-":4,"ivanthengwr":639}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"ivanthengwr":4}},{"path":"src/main/java/duke/datafile/DataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.datafile;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import java.io.File;","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"public abstract class DataFile {","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"    protected String dirPath;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    protected String newDirName;","lastModifiedDate":"2022-09-15"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    protected File dataFile;","lastModifiedDate":"2022-09-15"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected File dataDir;","lastModifiedDate":"2022-09-15"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public DataFile() {","lastModifiedDate":"2022-09-15"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        this.dirPath \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        this.newDirName \u003d \"data\";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        this.dataFile \u003d new File(dirPath);","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        this.dataDir \u003d new File(newDirName);","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the data file if it does not exist or inform the User that it already exist.","lastModifiedDate":"2022-09-15"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"     * @return dirAndFileStatus that is a string to inform the user if the data dir or file exist or not.","lastModifiedDate":"2022-09-15"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    public String getDataFileStatus() {","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        String dirAndFileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        boolean isResult \u003d dataDir.mkdir();","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNotDataDir \u003d !dataDir.exists() \u0026\u0026 isResult;","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotDataDir) {","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"            dirAndFileStatus \u003d createDir();","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"            dirAndFileStatus \u003d createDataFile();","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"        return dirAndFileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"    private String createDir() {","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"        String dirAndFileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"        dirAndFileStatus \u003d  \"\\t Data folder to store the data file does not exist \"","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"                + \"but I have made one for you.\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        dirAndFileStatus \u003d dirAndFileStatus + createDataFile();","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"        return dirAndFileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-15"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"     * Creates a data file if it is not present within the hard disk.","lastModifiedDate":"2022-09-15"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-15"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"     * @return fileStatus which to inform the User that the data is present or not.","lastModifiedDate":"2022-09-15"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-15"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"    public String createDataFile() {","lastModifiedDate":"2022-09-15"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"        String fileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"            fileStatus \u003d getFileStatus();","lastModifiedDate":"2022-09-15"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"            fileStatus \u003d \"\\t Error is trying to locate or make data file.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"        return fileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"    private String getFileStatus() throws IOException {","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        String fileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"        boolean isFileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2022-09-15"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"        if (isFileCreated) {","lastModifiedDate":"2022-09-15"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"            fileStatus \u003d \"\\t Data file was not found but I have made one for you.\";","lastModifiedDate":"2022-09-15"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-15"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"            fileStatus \u003d \"\\t Data file already exist in your hard disk, you are ready to go!\";","lastModifiedDate":"2022-09-15"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"        return fileStatus;","lastModifiedDate":"2022-09-15"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"    public abstract void writeToFile(String taskDetail) throws IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"    public abstract void saveToFile(String taskDetail);","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"    public abstract ArrayList\u003cString\u003e storeDataFileContents();","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-15"}],"authorContributionMap":{"ivanthengwr":75}},{"path":"src/main/java/duke/datafile/EditDataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.datafile;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"public class EditDataFile extends DataFile {","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    public EditDataFile() {}","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    public void writeToFile(String taskDetail) throws IOException {","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        FileWriter addTask \u003d new FileWriter(dirPath);","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        addTask.write(taskDetail);","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        addTask.close();","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    public void saveToFile(String taskDetail) {","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"            writeToFile(taskDetail);","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    public ArrayList\u003cString\u003e storeDataFileContents() {","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"            contentList \u003d getDataFileContents();","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"        return contentList;","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"    public ArrayList\u003cString\u003e getDataFileContents() throws FileNotFoundException {","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"            contentList.add(s.nextLine());","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"        return contentList;","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"ivanthengwr":48}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is a deadline task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDeadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isDeadline \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"D\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is an event task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEvent;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Event(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isEvent \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isEvent) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"E\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** Represent the individual task that the user input */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is mark as done or not for each individual task */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        return description;","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    public abstract String getStatusOfTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"    public abstract void markTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a string to properly display the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter modified string to contain the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"    public String displayTypeTaskDetails() {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskParameter \u003d description;","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        boolean isEventOrDeadline \u003d description.contains(\"/at\") || description.contains(\"/by\");","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"        if (isEventOrDeadline) {","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskParameter \u003d modifyDescription(typeTaskParameter);","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     * Modifies the given description by the User","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"     * @param typeTaskParameter string that is taken from description","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter a modified string","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"    public String modifyDescription(String typeTaskParameter) {","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfDash \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskTitle \u003d typeTaskParameter.substring(0, indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskDetail \u003d typeTaskParameter.substring(indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.replaceFirst(\"/\", \"(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.substring(0,3) + \u0027:\u0027 + typeTaskDetail.substring(3) + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskParameter \u003d typeTaskTitle + typeTaskDetail;","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ivanthengwr":67}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is to do task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isToDo;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isToDo \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"T\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"todo read book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"todo join sports club","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"todo borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"mark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"mark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"mark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"mark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"mark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"mark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"unmark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"unmark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"unmark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"unmark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"unmark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"unmark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"unmark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"unmark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"hi","lastModifiedDate":"2022-09-15"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"todo","lastModifiedDate":"2022-09-15"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"todo","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"event","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"event","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"deadline","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"deadline","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"delete 3","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"delete 1","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"delete","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"delete -1","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"delete 100","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"bye","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"javac  -cp ..\\src\\main\\java\\* -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ivanthengwr":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanthengwr":2}}]
