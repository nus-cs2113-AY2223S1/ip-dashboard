[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"T | 1 | read book","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"T | 1 | join sports club","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"ivanthengwr":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Add Tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"Add three type of tasks that are classified as:","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"1. Todo task","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"2. Deadline task","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"3. Event task","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Remove Tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"Remove a task that is determined by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Find Tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"Find a task using keyword(s) that is specified by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Mark Task that is done","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"Mark a specified task fulfilled or unmark a task that is not fulfilled.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Store deadline task period ","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"In addition to adding a deadline task, user can store a deadline period.  ","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"e.g., Finish tp project by _Fri 30\u003csup\u003eth\u003c/sup\u003e Sept_","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Store event task location","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"In addition to adding an event task, user can store an event location.  ","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"e.g., Club meeting at _NUS Utown_ ","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"### Feature-Shut down Flash bot","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"When user types a `bye` command, the bot will exit and stop.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"Input the command `todo` followed by the _task detail_.  ","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"Automatically saves the specified todo task to a list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"`todo join NUS Drone Club`","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"Displays an acknowledgment message to confirm the creation of  ","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"todo task and inform the user the number of tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"\t Roger that. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"\t   [T][ ] join NUS Drone Club","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"\t Now you have 1 in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"Input the command `deadline` followed by the _task detail_ \u0026 _deadline period_.","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"Automatically saves the specified deadline task to a list of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"`deadline return book /by Sunday`","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"Displays an acknowledgment message to confirm the creation of  ","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"deadline task and inform the user the number of tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"\t Roger that. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"\t   [D][ ] return book (by: June 6th)","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"\t Now you have 2 in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"### `event` - Add an event task","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"Input the command `event` followed by the _task detail_ \u0026 _event location_.  ","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"Automatically saves the specified event task to a list of tasks.   ","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"`event project meeting /at NUS Utown`","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"Displays an acknowledgment message to confirm the creation of  ","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"event task and inform the user the number of tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"\t Roger that. I\u0027ve added this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"\t   [E][ ] project meeting (at: NUS Utown)","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"\t Now you have 3 in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"### `mark` - Mark task as done","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"Input the command `mark` followed by _index of chosen task_.   ","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"`mark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"Marks the specified task to be done denoted as \u0027X\u0027 and  ","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"display an acknowledgment message to confirm the specified task completion.","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"\t Awesome! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"\t   [T][X] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"### `unmark` - Mark task as not done","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"Input the command `unmark` followed by _index of chosen task_.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"`unmark 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"Unmark the specified task as not done denoted as [ ] of the right box and    ","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"display an acknowledgment message to confirm the specified task is not done.","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"\t Awesome! I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"\t   [T][ ] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"### `delete` - Delete a task","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"Input the command `delete` followed by _index of chosen task_.","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"`delete 1`","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"The specified task would be deleted from the list of tasks and","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"displays an acknowledgment message for the user to confirm the deleted task.  ","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"Will reflect the number of task left in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"\t Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"\t   [T][ ] read book","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"\t Now you have 6 tasks in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"### `Find` - Find task(s)","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"Input the command `find` followed by _keyword(s)_.","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"`find book`","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"A list of tasks would be shown that matches the _keyword(s)_ i.e., \u0027book\u0027.","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"\t Here are the matching tasks in your list:","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"\t 1.[D][ ] return book (by: June 6th)","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"\t 2.[T][ ] borrow book","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"\t 3.[D][ ] return book (by: Sunday)","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"### `bye` - Exit Flash bot program (Shut down)","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"Input the command `bye`.","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"Example of usage:","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"`bye`","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"Expected outcome:","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"Exit from Flash bot and a goodbye message will be display to confirm shut down.","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"\t Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"\t____________________________________________________________","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"-":26,"ivanthengwr":181}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.errorhandling.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        tasks \u003d storage.loadTasksFromFile(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     * Main execution function to run flash.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    public void run() {","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"            try {","lastModifiedDate":"2022-09-07"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"                ui.showLine();","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"            } finally {","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"                ui.showLine();","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"                ui.lineBreak();","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"-":2,"ivanthengwr":45}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected final int NEW_TASK_INDEX \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isInitialEmpty \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isCountTaskEmpty \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    public AddCommand(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        this.splitCommand \u003d splitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the action for add task command.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"     * @param storage which is taken from the class storage which deals.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"     *                with the add and remove of data from the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e assignments \u003d tasks.getAssignments();","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"        isInitialEmpty \u003d storage.isInitialEmpty();","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        updateTaskFromStorage(storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        checkEmptyTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"        checkTypeOfIncrement(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"        checkCommandType(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"        addTypeOfTask(tasks, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        ui.showTypeOfTaskDetail(assignments, indexTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"        updateCountFromTasks(tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"        storage.saveToFile(countTask, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"     *Checks the type of increment that it should be carried out based on the index task.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"    public void checkTypeOfIncrement(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"        if (isInitialEmpty || isCountTaskEmpty) {","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"            indexTask \u003d tasks.getIndexTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"            indexTask \u003d tasks.getIndexTask() + NEW_TASK_INDEX;","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"    public void checkEmptyTask() {","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"        if (countTask \u003d\u003d 0) {","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"            isCountTaskEmpty \u003d true;","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the type of task based on the user input command.","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments which is taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"    public void addTypeOfTask(TaskList tasks, ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"        if (isEvent) {","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"            tasks.addEventTask(splitCommand, assignments, indexTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"            tasks.addDeadlineTask(splitCommand, assignments, indexTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isToDo) {","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"            tasks.addToDoTask(splitCommand, assignments, indexTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":77}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"public abstract class Command extends Parser {","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    protected final int NO_TASK \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected String[] splitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected int numberOrder \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    protected int countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    protected int indexTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    public Command() {}","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    public boolean isExit() { return false; }","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    public void updateCountFromTasks(TaskList tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"        countTask \u003d tasks.getCountTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void updateTaskFromStorage(Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        countTask \u003d storage.getCountTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    public DeleteCommand(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        this.splitCommand \u003d splitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the action for delete task command.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     * @param storage which is taken from the class storage which deals.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     *                with the add and remove of data from the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e assignments \u003d tasks.getAssignments();","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        tasks.deleteTask(splitCommand, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"        updateCountFromTasks(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        storage.saveToFile(countTask, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":31}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isExit \u003d true;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the action for exit command.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"     * @param storage which is taken from the class storage which deals.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"     *                with the add and remove of data from the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"        ui.showExitMessage();","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        return isExit;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":28}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    protected final int TASK_DETAIL \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    protected int numOfTask \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    protected String detail;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDetailFound \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    public FindCommand(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        this.splitCommand \u003d splitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e assignments \u003d tasks.getAssignments();","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"        updateCountFromTasks(tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        iterateTasks(assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        getMatchDetails();","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    public void getMatchDetails() {","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"        numOfTask \u003d matchedTasks.size();","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        if(numOfTask \u003d\u003d NO_TASK) {","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"            ui.showEmptyMatchList();","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"            ui.showMatchListMessage();","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"            ui.showList(matchedTasks, numberOrder, numOfTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    private void iterateTasks(ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"        detail \u003d splitCommand[TASK_DETAIL];","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        for (int i \u003d 0; i \u003c countTask; i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"            isDetailFound \u003d assignments.get(i).getDescription().contains(detail);","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"            addMatchTasks(assignments, i);","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"    private void addMatchTasks(ArrayList\u003cTask\u003e assignments, int i) {","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"        if (isDetailFound) {","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"            matchedTasks.add(assignments.get(i));","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":52}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected int numberOrder \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected final int NO_TASK \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the action for list command.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks   which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"     *                the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui      which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"     * @param storage which is taken from the class storage which deals.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     *                with the add and remove of data from the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e assignments \u003d tasks.getAssignments();","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        updateCountFromTasks(tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        getList(assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"     * Gets a list of tasks and displays it on the terminal for the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments which is taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    public void getList(ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        if (countTask \u003d\u003d NO_TASK) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"            ui.showEmptyList();","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"            ui.showListMessage();","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"            ui.showList(assignments, numberOrder, countTask);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":43}},{"path":"src/main/java/duke/command/MarkOrUnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class MarkOrUnmarkCommand extends Command {","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    public MarkOrUnmarkCommand(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        this.splitCommand \u003d splitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"     * Executes the action for mark or unmark command.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is taken from the class TaskList to obtain","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"     *              the list of assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     * @param storage which is taken from the class storage which deals.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"     *                with the add and remove of data from the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e assignments \u003d tasks.getAssignments();","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        tasks.markOrUnmarkTask(splitCommand, assignments, isMark, ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"        updateCountFromTasks(tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        storage.saveToFile(countTask, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":32}},{"path":"src/main/java/duke/errorhandling/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.errorhandling;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    public DukeException (String str) {","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"        super(str);","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.errorhandling.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"public class Parser {","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    protected static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"    protected static final int TASK_DETAIL_INDEX \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    protected static final boolean RESET \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isToDo \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isDeadline \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isEvent \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isMarkOrUnmark \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isValidMarkOrUnmark \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isDelete \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isValidDelete \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isMark \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isBye \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isList \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isAdd \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isFind \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isValidFind \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    protected static boolean isValidAdd \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"     * Checks all the type of commands to classify them.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand is a list of words that are separated by space.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    public static void checkCommandType(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        isBye \u003d splitCommand[COMMAND_INDEX].equals(\"bye\");","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        isList \u003d splitCommand[COMMAND_INDEX].equals(\"list\");","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"        isFind \u003d splitCommand[COMMAND_INDEX].equals(\"find\");","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d splitCommand[COMMAND_INDEX].equals(\"todo\");","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d splitCommand[COMMAND_INDEX].equals(\"deadline\");","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d splitCommand[COMMAND_INDEX].equals(\"event\");","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"        isMark \u003d splitCommand[COMMAND_INDEX].equals(\"mark\");","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"        isDelete \u003d splitCommand[COMMAND_INDEX].equals(\"delete\");","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"        isMarkOrUnmark \u003d splitCommand[COMMAND_INDEX].equals(\"mark\")","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"                || splitCommand[COMMAND_INDEX].equals(\"unmark\");","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        isAdd \u003d isToDo || isEvent || isDeadline;","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"     * Verifies the command detail in so to proof that the type of command is valid.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"     * @param isBlankDetail which checks if the TASK_DETAIL_INDEX is empty or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"    public static void validCommandDetail(boolean isBlankDetail) {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"        if (!isBlankDetail) {","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"            isValidAdd \u003d isAdd;","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"            isValidDelete \u003d isDelete;","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"            isValidMarkOrUnmark \u003d isMarkOrUnmark;","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"            isValidFind \u003d isFind;","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"            isValidAdd \u003d RESET;","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"            isValidDelete \u003d RESET;","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"            isValidMarkOrUnmark \u003d RESET;","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"            isValidFind \u003d RESET;","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"    public static void checkCommandDetail(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"        boolean isTaskCommand \u003d splitCommand.length \u003e 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        validateCommandDetail(splitCommand, isTaskCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"     * Verifies the command detail, to ensure that the TASK_DETAIL_INDEX has input.","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand is a list of words that are separated by space.","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"     * @param isTaskCommand which check if the command as a task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"    public static void validateCommandDetail(String[] splitCommand, boolean isTaskCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"        boolean isBlankDetail \u003d true;","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"        if (isTaskCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"            isBlankDetail \u003d splitCommand[TASK_DETAIL_INDEX].isBlank();","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"        validCommandDetail(isBlankDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"     * Parse which deals with making sense of the user command.","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"     * @param fullCommand which is the command that the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"     * @return c","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException which display an error if there is an invalid command.","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"        Command command;","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"        String[] splitCommand \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2022-09-29"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"        checkCommandType(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"        checkCommandDetail(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"        command \u003d initializeTypeOfCommand(splitCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"        return command;","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"     * Initialises the type of command base on what the user input. Else, presents","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"     * an error if the type of command is not valid.","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand is a list of words that are separated by space.","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"     * @return command based on the type of command to initialise type of Command class.","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException An error that will be generated if the command is not valid.","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"    public static Command initializeTypeOfCommand(String[] splitCommand) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"        Command command;","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"        if (isBye) {","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isList) {","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isValidAdd) {","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new AddCommand(splitCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isValidDelete) {","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new DeleteCommand(splitCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isValidMarkOrUnmark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new MarkOrUnmarkCommand(splitCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isValidFind) {","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"            command \u003d new FindCommand(splitCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"            String error \u003d showErrorMessage();","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException(error);","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"        return command;","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"    public static String showErrorMessage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"        String error \u003d \"\\t ☹ HMM?? I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"        if (isAdd || isDelete || isMarkOrUnmark || isFind) {","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d showCommandError();","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"        return error;","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the type of command Error based on what the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"     * @return error that shows the error message based on the type of command.","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"    public static String showCommandError() {","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"        String error \u003d null;","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-29"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! The description of an event cannot be empty.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isMarkOrUnmark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! You did not tell me which to (un)mark.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDelete) {","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! You did not tell me what to delete.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isFind) {","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d \"\\t ☹ OH MAN!!! You did not tell me what to find.\";","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"        return error;","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":158}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.errorhandling.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"import java.io.File;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"public class Storage {","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    protected String filePath;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    protected String newDirName;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    protected File dataFile;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    protected File dataDir;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    protected int indexTask \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    protected int countTask \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    protected final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    protected final int NO_TASK \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    protected final int STATUS_INDEX \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    protected final int TASK_TITLE_INDEX \u003d 2;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    protected final int EVENT_OR_DEADLINE_DETAIL \u003d 3;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isStoredInputOfEvent \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isStoredInputOfDeadline \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isToDoFromDataFile \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDeadlineFromDateFile \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEventFromDataFile \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isMarkFromDataFile \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEmptyTask \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"     * Initialises object variables to create the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"     * @param filePath which is the address of the file that is set before initialisation.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"        this.newDirName \u003d \"data\";","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"        this.dataFile \u003d new File(filePath);","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"        this.dataDir \u003d new File(newDirName);","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the data file if it does not exist or inform the User that it already exist.","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"    public void dataFileStatus(Ui ui) {","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNoDir \u003d dataDir.mkdir();","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"        createFileOrFolder(ui, isNoDir);","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"     * Creates the file or the folder based on what is missing before the main program starts.","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"     * @param isNoDir which is true when the specific directory is not found.","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"    public void createFileOrFolder(Ui ui, boolean isNoDir) {","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"        if (isNoDir) {","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"           createDir(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"            try {","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"                createDataFile(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"     * Creates a path for the directory and also checks that if it exists.","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"    public void createDir(Ui ui) {","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"        ui.showDataFolderStatus();","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"            createDataFile(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"     * Creates the dataFile and ensure that the file is valid before the program starts.","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException which is an error to show that there is some problem","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"     * generating or creating the Datafile.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"    public void createDataFile(Ui ui) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"            getFileStatus(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException(\"\\n\\t Error in trying to locate or make data file\");","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the file status to see if the file have been successfully created.","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"     * @throws IOException set of errors that is used to govern the creation of","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"     * a new file.","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"    public void getFileStatus(Ui ui) throws IOException {","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"        boolean isFileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"        ui.showDataFileStatus(isFileCreated);","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"    public int getCountTask() {","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"        return countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"    public boolean isInitialEmpty() {","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"        return isEmptyTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"     * Writes the taskDetails that is taken from the taskList and be written to the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskDetail which is the detail of the task from the TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"     * @throws IOException set of errors that is used to govern the creation of","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"     * a new file.","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"    public void writeToFile(String taskDetail) throws IOException {","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"        FileWriter addTask \u003d new FileWriter(filePath);","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"        addTask.write(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"        addTask.close();","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the data from the TaskList which is the taskDetail","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"     * and puts the data in the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskDetail which is the detail of the task from the TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"    public void getDataToFile(String taskDetail) {","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"            writeToFile(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"            Ui.showDataToFileError();","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"     * Saves the data that is present to the file. Use for updating.","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"     * @param countTask which keeps tracks of the number of task that have been added.","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"    public void saveToFile(int countTask, ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"        StringBuilder taskList \u003d new StringBuilder();","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"        for(int i \u003d 0; i \u003c countTask; i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"            addToTaskList(taskList, assignments, i);","lastModifiedDate":"2022-09-29"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"        getDataToFile(taskList.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the data that is present in the dataFile to the TaskList which is","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"     * the local memory when the program is running.","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskList which is used to store the data from the dataFile","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is used to access the specific task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"    public void addToTaskList(StringBuilder taskList, ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"        taskList.append(getTaskDetail(assignments, index)).append(\"\\n\");","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the Task Detail from the taskList and format it so that it can","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"     * be stored in the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is used to access the specific task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"     * @return taskDetail that has been formatted.","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"    public String getTaskDetail(ArrayList\u003cTask\u003e assignments , int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"        String statusOfTypeTask \u003d assignments.get(index)","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"        String changeStatusOfDone \u003d changeStatusOfDone(assignments","lastModifiedDate":"2022-09-29"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"                .get(index).getStatusOfDone());","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"        String changeTaskDetails \u003d changeDetailDisplay(assignments, index);","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"        return statusOfTypeTask + \" | \" + changeStatusOfDone + \" | \" + changeTaskDetails;","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"     * Changes the statusOfDone from \"X\" to \"1\" so that it can be stored into the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"     * @param statusOfDone which is denoted by \"X\" to tell the user that the task is completed.","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"     * @return statusOfDone which is formatted.","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"    public String changeStatusOfDone(String statusOfDone) {","lastModifiedDate":"2022-09-29"},{"lineNumber":203,"author":{"gitId":"ivanthengwr"},"content":"        boolean isChecked \u003d statusOfDone.contains(\"X\");","lastModifiedDate":"2022-09-29"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"        if (isChecked) {","lastModifiedDate":"2022-09-29"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"            statusOfDone \u003d \"1\";","lastModifiedDate":"2022-09-29"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"            statusOfDone \u003d \"0\";","lastModifiedDate":"2022-09-29"},{"lineNumber":208,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"ivanthengwr"},"content":"        return statusOfDone;","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"ivanthengwr"},"content":"     * Changes the detail of the task that is then used to be stored in the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":216,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is used to access the specific task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"ivanthengwr"},"content":"     * @return changeTaskDetail which is formatted to suit the dataFile format.","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"ivanthengwr"},"content":"    private String changeDetailDisplay(ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"ivanthengwr"},"content":"        String changeTaskDetails \u003d assignments.get(index).getDescription();","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"ivanthengwr"},"content":"        checkStoredInputStatus(assignments, index);","lastModifiedDate":"2022-09-29"},{"lineNumber":222,"author":{"gitId":"ivanthengwr"},"content":"        changeTaskDetails \u003d modifyEventOrDeadlineDetails(assignments, index, changeTaskDetails);","lastModifiedDate":"2022-09-29"},{"lineNumber":223,"author":{"gitId":"ivanthengwr"},"content":"        return changeTaskDetails;","lastModifiedDate":"2022-09-29"},{"lineNumber":224,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":225,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":226,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the stored input status in the dataFile to see if it is a deadline or event task.","lastModifiedDate":"2022-09-30"},{"lineNumber":228,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":229,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":230,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is used to access the specific task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"ivanthengwr"},"content":"    public void checkStoredInputStatus(ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"ivanthengwr"},"content":"        isStoredInputOfEvent \u003d assignments.get(index)","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask().contains(\"E\");","lastModifiedDate":"2022-09-29"},{"lineNumber":235,"author":{"gitId":"ivanthengwr"},"content":"        isStoredInputOfDeadline \u003d assignments.get(index)","lastModifiedDate":"2022-09-29"},{"lineNumber":236,"author":{"gitId":"ivanthengwr"},"content":"                .getStatusOfTypeTask().contains(\"D\");","lastModifiedDate":"2022-09-29"},{"lineNumber":237,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":238,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":239,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":240,"author":{"gitId":"ivanthengwr"},"content":"     * Modifies the event or deadline details so that it can be stored in the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":241,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":242,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":243,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is used to access the specific task detail.","lastModifiedDate":"2022-09-30"},{"lineNumber":244,"author":{"gitId":"ivanthengwr"},"content":"     * @param changeTaskDetails which is formatted to suit the dataFile format.","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"ivanthengwr"},"content":"     * @return changeTaskDetails which is formatted to suit the dataFile format.","lastModifiedDate":"2022-09-30"},{"lineNumber":246,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":247,"author":{"gitId":"ivanthengwr"},"content":"    public String modifyEventOrDeadlineDetails(ArrayList\u003cTask\u003e assignments, int index, String changeTaskDetails) {","lastModifiedDate":"2022-09-29"},{"lineNumber":248,"author":{"gitId":"ivanthengwr"},"content":"        if (isStoredInputOfEvent) {","lastModifiedDate":"2022-09-29"},{"lineNumber":249,"author":{"gitId":"ivanthengwr"},"content":"            changeTaskDetails \u003d assignments.get(index)","lastModifiedDate":"2022-09-29"},{"lineNumber":250,"author":{"gitId":"ivanthengwr"},"content":"                    .getDescription().replace(\"/at\", \"|\");","lastModifiedDate":"2022-09-29"},{"lineNumber":251,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isStoredInputOfDeadline) {","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"ivanthengwr"},"content":"            changeTaskDetails \u003d assignments.get(index)","lastModifiedDate":"2022-09-29"},{"lineNumber":253,"author":{"gitId":"ivanthengwr"},"content":"                    .getDescription().replace(\"/by\", \"|\");","lastModifiedDate":"2022-09-29"},{"lineNumber":254,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":255,"author":{"gitId":"ivanthengwr"},"content":"        return changeTaskDetails;","lastModifiedDate":"2022-09-29"},{"lineNumber":256,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":257,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":258,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"ivanthengwr"},"content":"     * Stores the dataFile Contents into an array list for later usage.","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"ivanthengwr"},"content":"     * @return contentList which an array of string that gets the data from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"ivanthengwr"},"content":"    public ArrayList\u003cString\u003e storeDataFileContents() {","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":266,"author":{"gitId":"ivanthengwr"},"content":"            contentList \u003d getDataFileContents();","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"ivanthengwr"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":268,"author":{"gitId":"ivanthengwr"},"content":"            Ui.showFileError();","lastModifiedDate":"2022-09-29"},{"lineNumber":269,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":270,"author":{"gitId":"ivanthengwr"},"content":"        return contentList;","lastModifiedDate":"2022-09-29"},{"lineNumber":271,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":272,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":273,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"ivanthengwr"},"content":"     * Gets the data File contents from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":276,"author":{"gitId":"ivanthengwr"},"content":"     * @return contentList which an array of string that gets the data from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":277,"author":{"gitId":"ivanthengwr"},"content":"     * @throws FileNotFoundException which is an error if the file is not found.","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"ivanthengwr"},"content":"    public ArrayList\u003cString\u003e getDataFileContents() throws FileNotFoundException {","lastModifiedDate":"2022-09-29"},{"lineNumber":280,"author":{"gitId":"ivanthengwr"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2022-09-29"},{"lineNumber":281,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":282,"author":{"gitId":"ivanthengwr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"ivanthengwr"},"content":"            contentList.add(s.nextLine());","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"ivanthengwr"},"content":"        return contentList;","lastModifiedDate":"2022-09-29"},{"lineNumber":286,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":287,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":289,"author":{"gitId":"ivanthengwr"},"content":"     * Loads the tasks from the dataFile and into the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":290,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the class Ui to display messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":292,"author":{"gitId":"ivanthengwr"},"content":"     * @return TaskList which is initialises the class.","lastModifiedDate":"2022-09-30"},{"lineNumber":293,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":294,"author":{"gitId":"ivanthengwr"},"content":"    public TaskList loadTasksFromFile(Ui ui) {","lastModifiedDate":"2022-09-29"},{"lineNumber":295,"author":{"gitId":"ivanthengwr"},"content":"        dataFileStatus(ui);","lastModifiedDate":"2022-09-29"},{"lineNumber":296,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-29"},{"lineNumber":297,"author":{"gitId":"ivanthengwr"},"content":"        int numOfTask \u003d storeDataFileContents().size();","lastModifiedDate":"2022-09-29"},{"lineNumber":298,"author":{"gitId":"ivanthengwr"},"content":"        int lastIndex \u003d numOfTask - 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":299,"author":{"gitId":"ivanthengwr"},"content":"        checkEmptyTask(numOfTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"ivanthengwr"},"content":"        countTask \u003d numOfTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":301,"author":{"gitId":"ivanthengwr"},"content":"        ArrayList\u003cString\u003e taskList \u003d storeDataFileContents();","lastModifiedDate":"2022-09-29"},{"lineNumber":302,"author":{"gitId":"ivanthengwr"},"content":"        for(int i \u003d 0; i \u003c numOfTask; i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":303,"author":{"gitId":"ivanthengwr"},"content":"            String[] task \u003d taskList.get(i).split(\"\\\\|\");","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"ivanthengwr"},"content":"            addTaskFromFile(task,tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":305,"author":{"gitId":"ivanthengwr"},"content":"            addTaskIndex(lastIndex, i);","lastModifiedDate":"2022-09-29"},{"lineNumber":306,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":307,"author":{"gitId":"ivanthengwr"},"content":"        return new TaskList(tasks, indexTask, countTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":308,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":310,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":311,"author":{"gitId":"ivanthengwr"},"content":"     * Adds taskIndex incrementally as long it is not the last index.","lastModifiedDate":"2022-09-30"},{"lineNumber":312,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":313,"author":{"gitId":"ivanthengwr"},"content":"     * @param lastIndex which is the last index of an array.","lastModifiedDate":"2022-09-30"},{"lineNumber":314,"author":{"gitId":"ivanthengwr"},"content":"     * @param i the increment in regard to the loop.","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"ivanthengwr"},"content":"    private void addTaskIndex(int lastIndex, int i) {","lastModifiedDate":"2022-09-29"},{"lineNumber":317,"author":{"gitId":"ivanthengwr"},"content":"        if (i !\u003d lastIndex) {","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"ivanthengwr"},"content":"            indexTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":319,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"ivanthengwr"},"content":"     * Checks if the taskList is empty or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"ivanthengwr"},"content":"     * @param numOfTask which is the number of task in the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"ivanthengwr"},"content":"    public void checkEmptyTask(int numOfTask) {","lastModifiedDate":"2022-09-29"},{"lineNumber":328,"author":{"gitId":"ivanthengwr"},"content":"        if (numOfTask \u003d\u003d NO_TASK) {","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"ivanthengwr"},"content":"            isEmptyTask \u003d true;","lastModifiedDate":"2022-09-29"},{"lineNumber":330,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":332,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":333,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the tasks from the file to the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"ivanthengwr"},"content":"     * @param task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"ivanthengwr"},"content":"    public void addTaskFromFile(String[] task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"ivanthengwr"},"content":"        checkDataFileCommand(task);","lastModifiedDate":"2022-09-29"},{"lineNumber":341,"author":{"gitId":"ivanthengwr"},"content":"        addTypeOfTaskFromFile(task, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":342,"author":{"gitId":"ivanthengwr"},"content":"        checkTaskStatusFromFile(tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":345,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the dataFile commands in so to classify them according to type of tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"ivanthengwr"},"content":"     * @param task task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"ivanthengwr"},"content":"    public void checkDataFileCommand(String[] task) {","lastModifiedDate":"2022-09-29"},{"lineNumber":351,"author":{"gitId":"ivanthengwr"},"content":"        isToDoFromDataFile \u003d task[COMMAND_INDEX].contains(\"T\");","lastModifiedDate":"2022-09-29"},{"lineNumber":352,"author":{"gitId":"ivanthengwr"},"content":"        isDeadlineFromDateFile \u003d task[COMMAND_INDEX].contains(\"D\");","lastModifiedDate":"2022-09-29"},{"lineNumber":353,"author":{"gitId":"ivanthengwr"},"content":"        isEventFromDataFile \u003d task[COMMAND_INDEX].contains(\"E\");","lastModifiedDate":"2022-09-29"},{"lineNumber":354,"author":{"gitId":"ivanthengwr"},"content":"        isMarkFromDataFile \u003d task[STATUS_INDEX].contains(\"1\");","lastModifiedDate":"2022-09-29"},{"lineNumber":355,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":356,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":357,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the type of tasks to the taskList from the file.","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"ivanthengwr"},"content":"     * @param task task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"ivanthengwr"},"content":"    public void addTypeOfTaskFromFile(String[] task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":364,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDoFromDataFile) {","lastModifiedDate":"2022-09-29"},{"lineNumber":365,"author":{"gitId":"ivanthengwr"},"content":"            addToDoTaskFromFile(task, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":366,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadlineFromDateFile) {","lastModifiedDate":"2022-09-29"},{"lineNumber":367,"author":{"gitId":"ivanthengwr"},"content":"            addDeadlineTaskFromFile(task, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":368,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEventFromDataFile) {","lastModifiedDate":"2022-09-29"},{"lineNumber":369,"author":{"gitId":"ivanthengwr"},"content":"            addEventTaskFromFile(task, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":370,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":371,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":372,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":373,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the task status that is obtained from the dataFile to check if","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"ivanthengwr"},"content":"     * the task has been completed or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"ivanthengwr"},"content":"    public void checkTaskStatusFromFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"ivanthengwr"},"content":"        if (isMarkFromDataFile) {","lastModifiedDate":"2022-09-29"},{"lineNumber":381,"author":{"gitId":"ivanthengwr"},"content":"            tasks.get(indexTask).markAsDone();","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":383,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":384,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":385,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":386,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the events task to the taskList from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":388,"author":{"gitId":"ivanthengwr"},"content":"     * @param task task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"ivanthengwr"},"content":"    public void addEventTaskFromFile(String[] task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":392,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d task[TASK_TITLE_INDEX].trim()","lastModifiedDate":"2022-09-29"},{"lineNumber":393,"author":{"gitId":"ivanthengwr"},"content":"                + \" /at\" + task[EVENT_OR_DEADLINE_DETAIL];","lastModifiedDate":"2022-09-29"},{"lineNumber":394,"author":{"gitId":"ivanthengwr"},"content":"        Task assignment \u003d new Event(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":395,"author":{"gitId":"ivanthengwr"},"content":"        loadTaskFromFile(assignment, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":396,"author":{"gitId":"ivanthengwr"},"content":"        tasks.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":397,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":398,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":399,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the deadline task to the taskList from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":402,"author":{"gitId":"ivanthengwr"},"content":"     * @param task task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"ivanthengwr"},"content":"    public void addDeadlineTaskFromFile(String[] task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":406,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d task[TASK_TITLE_INDEX].trim()","lastModifiedDate":"2022-09-29"},{"lineNumber":407,"author":{"gitId":"ivanthengwr"},"content":"                + \" /by\" + task[EVENT_OR_DEADLINE_DETAIL];","lastModifiedDate":"2022-09-29"},{"lineNumber":408,"author":{"gitId":"ivanthengwr"},"content":"        Task assignment \u003d new Deadline(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":409,"author":{"gitId":"ivanthengwr"},"content":"        loadTaskFromFile(assignment, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":410,"author":{"gitId":"ivanthengwr"},"content":"        tasks.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":411,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":412,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":414,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the Todo task to the taskList from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":415,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":416,"author":{"gitId":"ivanthengwr"},"content":"     * @param task task which is the task details that is obtained from the dataFile.","lastModifiedDate":"2022-09-30"},{"lineNumber":417,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":418,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":419,"author":{"gitId":"ivanthengwr"},"content":"    public void addToDoTaskFromFile(String[] task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"ivanthengwr"},"content":"        Task assignment \u003d new ToDo(task[TASK_TITLE_INDEX].trim());","lastModifiedDate":"2022-09-29"},{"lineNumber":421,"author":{"gitId":"ivanthengwr"},"content":"        loadTaskFromFile(assignment, tasks);","lastModifiedDate":"2022-09-29"},{"lineNumber":422,"author":{"gitId":"ivanthengwr"},"content":"        tasks.get(indexTask).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":423,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":424,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":425,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":426,"author":{"gitId":"ivanthengwr"},"content":"     * Loads the task from the dataFile and store it into the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":427,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":428,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignment which is a specific task that is obtained from the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":429,"author":{"gitId":"ivanthengwr"},"content":"     * @param tasks an array of assignments that is from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"ivanthengwr"},"content":"    public static void loadTaskFromFile(Task assignment, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":432,"author":{"gitId":"ivanthengwr"},"content":"        tasks.add(assignment);","lastModifiedDate":"2022-09-29"},{"lineNumber":433,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":434,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":435,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":436,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":436}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is a deadline task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDeadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isDeadline \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"D\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is an event task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEvent;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Event(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isEvent \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isEvent) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"E\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-15"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** Represent the individual task that the user input */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is mark as done or not for each individual task */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        if (isDone) {","lastModifiedDate":"2022-09-15"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-09-15"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"        return description;","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    public abstract String getStatusOfTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"    public abstract void markTypeTask();","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a string to properly display the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter modified string to contain the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    public String displayTypeTaskDetails() {","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskParameter \u003d description;","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"        boolean isEventOrDeadline \u003d description.contains(\"/at\") || description.contains(\"/by\");","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"        if (isEventOrDeadline) {","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskParameter \u003d modifyDescription(typeTaskParameter);","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"     * Modifies the given description by the User","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"     * @param typeTaskParameter string that is taken from description","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter a modified string","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"    public String modifyDescription(String typeTaskParameter) {","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfDash \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskTitle \u003d typeTaskParameter.substring(0, indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskDetail \u003d typeTaskParameter.substring(indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.replaceFirst(\"/\", \"(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.substring(0,3) + \u0027:\u0027 + typeTaskDetail.substring(3) + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskParameter \u003d typeTaskTitle + typeTaskDetail;","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ivanthengwr":68}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.errorhandling.DukeException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"public class TaskList {","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    protected final int INITIAL_INDEX \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    protected final int TASK_TITLE_INDEX \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    protected final int TASK_DETAIL_INDEX \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    protected final int OFFSET_TO_ARRAY_INDEX \u003d 1;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    protected final String DATE_PATTERN \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    protected ArrayList\u003cTask\u003e assignments;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    protected int indexTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    protected int countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    protected int indexOfChoice \u003d 0;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    protected String taskDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    protected String formatTaskDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDate \u003d false;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"     * Initialises the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"     * @param indexTask which is the index of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"     * @param countTask which tracks the number of task that the user has added.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    public TaskList(ArrayList\u003cTask\u003e assignments, int indexTask, int countTask) {","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        this.indexTask \u003d indexTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"        this.countTask \u003d countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"    public ArrayList\u003cTask\u003e getAssignments() {","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        return assignments;","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    public int getIndexTask() {","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        return indexTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"    public int getCountTask() {","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"        return countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     * Adds a specific task to the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignment which is a specific task that is obtained from the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"    public void addTask(Task assignment, ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"        assignments.add(assignment);","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        countTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"     * Adds an event task to the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is the increment value in the loop to access the assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"    public void addEventTask(String[] splitCommand, ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"        taskDetail \u003d splitCommand[TASK_DETAIL_INDEX];","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Event(taskDetail), assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(index).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the deadline task into the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is the increment value in the loop to access the assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"    public void addDeadlineTask(String[] splitCommand, ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"        taskDetail \u003d splitCommand[TASK_DETAIL_INDEX];","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"        formatTaskDetail \u003d formatDeadlineTaskDetail(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Deadline(formatTaskDetail), assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(index).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"     * Adds the todo task into the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is the increment value in the loop to access the assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"    public void addToDoTask(String[] splitCommand, ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"        taskDetail \u003d splitCommand[TASK_DETAIL_INDEX];","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new ToDo(taskDetail), assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"        assignments.get(index).markTypeTask();","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"     * Deletes a task and removes it from the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"    public void deleteTask(String[] splitCommand, ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"        countTask--;","lastModifiedDate":"2022-09-29"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"            indexOfChoice \u003d readIndexOfChoice(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"            ui.showDeletedTask(assignments, indexOfChoice, countTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"            assignments.remove(indexOfChoice);","lastModifiedDate":"2022-09-29"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"            ui.showDeleteTaskError();","lastModifiedDate":"2022-09-29"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"            countTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"            countTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotInitialIndex()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"            indexTask--;","lastModifiedDate":"2022-09-29"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"    private boolean isNotInitialIndex() {","lastModifiedDate":"2022-09-29"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"        return indexTask !\u003d INITIAL_INDEX;","lastModifiedDate":"2022-09-29"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"     * Marks or unmark a task that is in the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark which checks if the task has been marked or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"     * @param ui which is taken from the Ui class to display messages to the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"    public void markOrUnmarkTask(String[] splitCommand, ArrayList\u003cTask\u003e assignments, boolean isMark, Ui ui) {","lastModifiedDate":"2022-09-29"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"            indexOfChoice \u003d readIndexOfChoice(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"            checkMarkOrUnmark(isMark, assignments);","lastModifiedDate":"2022-09-29"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"            ui.showMarkOrUnmarkError(isMark);","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"        ui.showMarkOrUnmarkTask(isMark);","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"        ui.showTaskDetail(assignments, indexOfChoice);","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the mark or unmark status of the task to distinct that it is completed or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark which checks if the task has been marked or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"    public void checkMarkOrUnmark(boolean isMark, ArrayList\u003cTask\u003e assignments) {","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"            assignments.get(indexOfChoice).markAsDone();","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"            assignments.get(indexOfChoice).unmarkAsDone();","lastModifiedDate":"2022-09-29"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"     * Reads the index of choice that the user has input.","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"     * @return indexOfChoice","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException an error that is thrown if the user does not input a valid digit.","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"    public int readIndexOfChoice(String[] splitCommand) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNotPositiveDigit \u003d isNotPositiveDigit(splitCommand);","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"        if (isNotPositiveDigit) {","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException(\"\\t Hey! Please choose a positive digit\"","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"                    + \" that correspondence to the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfTask \u003d Integer.parseInt(splitCommand[TASK_DETAIL_INDEX]);","lastModifiedDate":"2022-09-29"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"        return indexOfTask - OFFSET_TO_ARRAY_INDEX;","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"     * Checks that the user in inputting a positive digit. Else, the command would be invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitCommand command that have been separated into their respective words.","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"     * @return isNotPositiveDigit","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"    public boolean isNotPositiveDigit(String[] splitCommand) {","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNotPositiveDigit \u003d !splitCommand[TASK_DETAIL_INDEX].matches(\"[0-9]+\")","lastModifiedDate":"2022-09-29"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"                || splitCommand[TASK_DETAIL_INDEX].startsWith(\"-\");","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"        return isNotPositiveDigit;","lastModifiedDate":"2022-09-29"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"ivanthengwr"},"content":"     * Formats the deadline Task detail to display the data in a particular format.","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskDetail which is taken from the TaskList","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"     * @return formatDetail","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"ivanthengwr"},"content":"    public String formatDeadlineTaskDetail(String taskDetail) {","lastModifiedDate":"2022-09-29"},{"lineNumber":209,"author":{"gitId":"ivanthengwr"},"content":"        String formatDetail \u003d taskDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":210,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-29"},{"lineNumber":211,"author":{"gitId":"ivanthengwr"},"content":"            String[] splitTaskDetail \u003d getDeadlineDetails(taskDetail);","lastModifiedDate":"2022-09-29"},{"lineNumber":212,"author":{"gitId":"ivanthengwr"},"content":"            String taskTitle \u003d splitTaskDetail[TASK_TITLE_INDEX].trim();","lastModifiedDate":"2022-09-29"},{"lineNumber":213,"author":{"gitId":"ivanthengwr"},"content":"            String detail \u003d splitTaskDetail[TASK_DETAIL_INDEX].trim();","lastModifiedDate":"2022-09-29"},{"lineNumber":214,"author":{"gitId":"ivanthengwr"},"content":"            formatDetail \u003d checkValidDate(detail, formatDetail, taskTitle);","lastModifiedDate":"2022-09-29"},{"lineNumber":215,"author":{"gitId":"ivanthengwr"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":216,"author":{"gitId":"ivanthengwr"},"content":"            ui.showDeadlineTaskError();","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"ivanthengwr"},"content":"            return formatDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":218,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":219,"author":{"gitId":"ivanthengwr"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2022-09-29"},{"lineNumber":220,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"ivanthengwr"},"content":"        return formatDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":222,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":223,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":224,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":225,"author":{"gitId":"ivanthengwr"},"content":"     * Checks that the date is input in the correct format by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":226,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"ivanthengwr"},"content":"     * @param detail the detail of the TASK_TITLE_INDEX.","lastModifiedDate":"2022-09-30"},{"lineNumber":228,"author":{"gitId":"ivanthengwr"},"content":"     * @param formatDetail which is the formatted detail to display the date.","lastModifiedDate":"2022-09-30"},{"lineNumber":229,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskTitle which is the name of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":230,"author":{"gitId":"ivanthengwr"},"content":"     * @return formatDetail","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"ivanthengwr"},"content":"    public String checkValidDate(String detail, String formatDetail, String taskTitle) {","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"ivanthengwr"},"content":"        isDate \u003d detail.matches(DATE_PATTERN);","lastModifiedDate":"2022-09-29"},{"lineNumber":234,"author":{"gitId":"ivanthengwr"},"content":"        if (isDate) {","lastModifiedDate":"2022-09-29"},{"lineNumber":235,"author":{"gitId":"ivanthengwr"},"content":"            formatDetail \u003d formatDate(detail, taskTitle);","lastModifiedDate":"2022-09-29"},{"lineNumber":236,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":237,"author":{"gitId":"ivanthengwr"},"content":"        return formatDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":238,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":239,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":240,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":241,"author":{"gitId":"ivanthengwr"},"content":"     * Formats the input date to a specified format \"MMM d YYYY\".","lastModifiedDate":"2022-09-30"},{"lineNumber":242,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":243,"author":{"gitId":"ivanthengwr"},"content":"     * @param detail the detail of the TASK_TITLE_INDEX.","lastModifiedDate":"2022-09-30"},{"lineNumber":244,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskTitle which is the name of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":245,"author":{"gitId":"ivanthengwr"},"content":"     * @return formatDate","lastModifiedDate":"2022-09-30"},{"lineNumber":246,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":247,"author":{"gitId":"ivanthengwr"},"content":"    public String formatDate(String detail, String taskTitle) {","lastModifiedDate":"2022-09-29"},{"lineNumber":248,"author":{"gitId":"ivanthengwr"},"content":"        LocalDate date \u003d LocalDate.parse(detail);","lastModifiedDate":"2022-09-29"},{"lineNumber":249,"author":{"gitId":"ivanthengwr"},"content":"        detail \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-09-29"},{"lineNumber":250,"author":{"gitId":"ivanthengwr"},"content":"        String formatDate \u003d taskTitle + \" /by \" + detail;","lastModifiedDate":"2022-09-29"},{"lineNumber":251,"author":{"gitId":"ivanthengwr"},"content":"        return formatDate;","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":253,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":254,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":255,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":256,"author":{"gitId":"ivanthengwr"},"content":"     * @param taskDetail which is the detail of the task that is obtained from taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":257,"author":{"gitId":"ivanthengwr"},"content":"     * @return splitTaskDetail","lastModifiedDate":"2022-09-30"},{"lineNumber":258,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException an error is made if the deadline details are not completely or","lastModifiedDate":"2022-09-30"},{"lineNumber":259,"author":{"gitId":"ivanthengwr"},"content":"     * correctly input by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":260,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"ivanthengwr"},"content":"    public String[] getDeadlineDetails(String taskDetail) throws DukeException {","lastModifiedDate":"2022-09-29"},{"lineNumber":262,"author":{"gitId":"ivanthengwr"},"content":"        String[] splitTaskDetail \u003d taskDetail.split(\"/by\");","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"ivanthengwr"},"content":"        if (splitTaskDetail[1].isBlank()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":264,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException(\"Please try again and include\"","lastModifiedDate":"2022-09-29"},{"lineNumber":265,"author":{"gitId":"ivanthengwr"},"content":"                    + \" complete Deadline details.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":266,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"ivanthengwr"},"content":"        return splitTaskDetail;","lastModifiedDate":"2022-09-29"},{"lineNumber":268,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":269,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":269}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is to do task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isToDo;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isToDo \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"T\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"public class Ui {","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    protected int countTask;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"    protected String lineDivider;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public Ui() {","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        this.lineDivider \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the DataFileStatus for the user to know if the dataFile exist or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"     * @param isFileCreated checks if the file has been created before the start of the program.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void showDataFileStatus(boolean isFileCreated) {","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        if (isFileCreated) {","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\" Data file was not found but\"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"                    + \" I have made one for you.\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\n Data file already exist\"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"                    + \" in your hard disk, you are ready to go!\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the dataFolder status to the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    public void showDataFolderStatus() {","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\n Data folder to store the data file does not exist \"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"                + \"but I have made one for you.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"    public void showLine() {","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(lineDivider);","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"    public void lineBreak() {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the welcome message that the start of the program. For aesthetic purposes.","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"        String logo \u003d \"___________.__                ___.\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\\\_   _____/|  | _____    _____|  |__\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"                + \" |    __)  |  | \\\\__  \\\\  /  ___/  |  \\\\\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"                + \" |     \\\\   |  |__/ __ \\\\_\\\\___ \\\\|   Y  \\\\\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"                + \" \\\\___  /   |____(____  /____  \u003e___|  /\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"                + \"     \\\\/              \\\\/     \\\\/     \\\\/\\n\";","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(lineDivider","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\n\\t Hello! I\u0027m Flash\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t What can I do for you?\\n\"","lastModifiedDate":"2022-09-29"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"                + lineDivider + \"\\n\");","lastModifiedDate":"2022-09-29"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"    public void showExitMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"    public String readCommand() {","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"        String userInput;","lastModifiedDate":"2022-09-29"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2022-09-29"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"        return userInput;","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"     * Shows a specific task details for the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is the increment value in the loop to access the assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"    public void showTaskDetail(ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [\" + assignments.get(index).getStatusOfTypeTask()","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"                + \"]\" + \"[\" + assignments.get(index).getStatusOfDone()","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"                + \"] \" + assignments.get(index).displayTypeTaskDetails());","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"     * Shows a specific task that have been deleted by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"     * @param indexTask which is the index of the task.","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"     * @param countTask which tracks the number of task that the user has added.","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"    public void showDeletedTask(ArrayList\u003cTask\u003e assignments, int indexTask, int countTask) {","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"        showTaskDetail(assignments, indexTask);","lastModifiedDate":"2022-09-29"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Now you have \" + countTask + \" tasks in the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"    public void showError(String error) {","lastModifiedDate":"2022-09-29"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"    public void showDeadlineTaskError() {","lastModifiedDate":"2022-09-29"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"Please complete the input for deadline details.\"","lastModifiedDate":"2022-09-29"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"                + \" \\nDelete task and try again.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"    public void showDeleteTaskError() {","lastModifiedDate":"2022-09-29"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Stop there! Please delete something that is within the list!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"     * Shows type of task detail to the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"     * As a form of acknowledgment to let the user know that the task have been added.","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"     * @param index which is the increment value in the loop to access the assignments.","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"    public void showTypeOfTaskDetail(ArrayList\u003cTask\u003e assignments, int index) {","lastModifiedDate":"2022-09-29"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"        countTask \u003d index;","lastModifiedDate":"2022-09-29"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Roger that. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"        showTaskDetail(assignments, index);","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"        countTask++;","lastModifiedDate":"2022-09-29"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Now you have \" + countTask + \" in the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the user if the task has been marked or unmarked.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"     * As a form of acknowledgment to let the user know that the task is marked or unmarked.","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark which checks to see if the task have been completed or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"    public void showMarkOrUnmarkTask(boolean isMark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"     * Shows the error message if the user is trying to mark a task that is not within","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"     * the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark which checks to see if the task have been completed or not.","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"    public void showMarkOrUnmarkError(boolean isMark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to mark a task that has not been specified!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to unmark a task that has not been specified!\");","lastModifiedDate":"2022-09-29"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"     * Shows a list of tasks that the user has stored in the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignments that an array of tasks taken from the class TaskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"     * @param numberOrder which is to label the ordering of the task starting from 1.","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"     * @param countTask used to track the number of task that have been added into the taskList.","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"    public void showList(ArrayList\u003cTask\u003e assignments, int numberOrder, int countTask) {","lastModifiedDate":"2022-09-29"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"        for (int i \u003d 0; i \u003c countTask; i++) {","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t \" + numberOrder + \".[\"","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).getStatusOfTypeTask() + \"][\"","lastModifiedDate":"2022-09-29"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).getStatusOfDone() + \"] \"","lastModifiedDate":"2022-09-29"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments.get(i).displayTypeTaskDetails());","lastModifiedDate":"2022-09-29"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"            numberOrder++;","lastModifiedDate":"2022-09-29"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"    public void showListMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"    public void showMatchListMessage() {","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"    public void showEmptyList() {","lastModifiedDate":"2022-09-29"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t There is no task in the list.\");","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"    public void showEmptyMatchList() {","lastModifiedDate":"2022-09-29"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t There are no matching task in your list of task.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"    public static void showFileError() {","lastModifiedDate":"2022-09-29"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\n --Error in trying to locate or make data file--\");","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"    public static void showDataToFileError() {","lastModifiedDate":"2022-09-29"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\n --Unable to save file.--\");","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"ivanthengwr":197}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"todo read book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"todo join sports club","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"todo borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"deadline swimming /by 2019-12-01","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"mark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"mark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"mark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"mark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"mark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"mark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"mark 9","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"unmark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"unmark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"unmark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"unmark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"unmark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"unmark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"unmark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"unmark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"unmark 9","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"hi","lastModifiedDate":"2022-09-15"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"todo","lastModifiedDate":"2022-09-15"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"event","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"deadline","lastModifiedDate":"2022-09-15"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"delete 3","lastModifiedDate":"2022-09-15"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"delete 1","lastModifiedDate":"2022-09-15"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-15"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"delete","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"delete -1","lastModifiedDate":"2022-09-15"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"delete 100","lastModifiedDate":"2022-09-15"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"find book","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"find","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"bye","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":41}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"javac  -cp ..\\src\\main\\java\\* -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ivanthengwr":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanthengwr":2}}]
