[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.command.DukeException;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-08"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2022-09-07"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    private static final int TASK_DETAIL_INDEX \u003d 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    /** Minus 1 to convert user input index which starts from 1 to 0 for array indexing */","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    private static final int OFFSET_TO_ARRAY_INDEX \u003d 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    /** Array of assignments that is limited to 100 tasks */","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    private static final Task[] assignments \u003d new Task[100];","lastModifiedDate":"2022-09-02"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    /** Use to track the number of Task that is added */","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    private static int indexTask \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    /** Check to see if User input toDo task */","lastModifiedDate":"2022-09-07"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isToDo \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    /** Check to see if User input deadline task */","lastModifiedDate":"2022-09-07"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isDeadline \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    /** Check to see if User input event task */","lastModifiedDate":"2022-09-07"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean isEvent \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"     * Sorts the type of Task that is input by the user and prints out the respective types.","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"     * Based on the keyword \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"     * Has helper functions addToDoTask(), addEventTask() and addDeadlineTask()","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of string that have been split into two.","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"    public static void validateTypeOfTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-07"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d splitUserInputs[COMMAND_INDEX].equals(\"todo\");","lastModifiedDate":"2022-09-07"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d splitUserInputs[COMMAND_INDEX].equals(\"deadline\");","lastModifiedDate":"2022-09-07"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d splitUserInputs[COMMAND_INDEX].equals(\"event\");","lastModifiedDate":"2022-09-07"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"        boolean isNoType \u003d !isToDo \u0026\u0026 !isDeadline \u0026\u0026 !isEvent;","lastModifiedDate":"2022-09-07"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        if (!hasValidTypeOfTask(splitUserInputs, isNoType)) {","lastModifiedDate":"2022-09-07"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-07"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"        printTypeOfTaskDetails();","lastModifiedDate":"2022-09-07"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-07"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"     * Checks the type of task that the user input, if the input specified does not belong","lastModifiedDate":"2022-09-07"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"     * to any of the task, it would print a warning. Likewise, if an exception arise from a","lastModifiedDate":"2022-09-07"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"     * specific type of task, a warning message will be printed.","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"     * @param isNoType to check if the user has input a nonTypeTask","lastModifiedDate":"2022-09-07"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"     * @return isValidTypeOfTask a boolean that checks if the user has input a type of task correctly","lastModifiedDate":"2022-09-07"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"    private static boolean hasValidTypeOfTask(String[] splitUserInputs, boolean isNoType) {","lastModifiedDate":"2022-09-07"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"        boolean isValidTypeOfTask \u003d true;","lastModifiedDate":"2022-09-07"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"            if (isNoType) {","lastModifiedDate":"2022-09-07"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"                System.out.println(\"\\t â˜¹ HMM?? I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-07"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"                isValidTypeOfTask \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"            addTypeOfTask(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"        } catch (ArrayIndexOutOfBoundsException | DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"            printTypeOfTaskError();","lastModifiedDate":"2022-09-07"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"            isValidTypeOfTask \u003d false;","lastModifiedDate":"2022-09-07"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"        return isValidTypeOfTask;","lastModifiedDate":"2022-09-07"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"     * Adds on the type of task based on the COMMAND_INDEX.","lastModifiedDate":"2022-09-08"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException which generates an error if the user input a blank task detail or","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"     * did not fill up the task detail.","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"    public static void addTypeOfTask(String[] splitUserInputs) throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"        if (splitUserInputs[TASK_DETAIL_INDEX].isBlank()) {","lastModifiedDate":"2022-09-07"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException();","lastModifiedDate":"2022-09-07"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"            addToDoTask(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"            addDeadlineTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"            addEventTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"     * Returns the indexTask that is .","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignment that takes in the type of task.","lastModifiedDate":"2022-09-02"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"    public static void addTask(Task assignment) {","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"        assignments[indexTask] \u003d assignment;","lastModifiedDate":"2022-09-02"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Event task.","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"    private static void addEventTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Event(splitUserInputs[TASK_DETAIL_INDEX]));","lastModifiedDate":"2022-09-07"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"        assignments[indexTask].markTypeTask();","lastModifiedDate":"2022-09-02"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Deadline task.","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"    private static void addDeadlineTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Deadline(splitUserInputs[TASK_DETAIL_INDEX]));","lastModifiedDate":"2022-09-07"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"        assignments[indexTask].markTypeTask();","lastModifiedDate":"2022-09-02"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case to do task.","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"    private static void addToDoTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"        String taskDetail \u003d splitUserInputs[TASK_DETAIL_INDEX];","lastModifiedDate":"2022-09-07"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new ToDo(taskDetail));","lastModifiedDate":"2022-09-07"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"        assignments[indexTask].markTypeTask();","lastModifiedDate":"2022-09-02"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"     * Validates the marked or unmarked task then proceeds to mark or unmark a task.","lastModifiedDate":"2022-09-08"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two words.","lastModifiedDate":"2022-09-07"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"    private static void validateMarkOrUnmarkTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-07"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-07"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"            int indexOfMark \u003d readIndexOfMarkOrUnmark(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"            //To handle a case where user tries to mark or unmark a task that has not been specified","lastModifiedDate":"2022-09-07"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"            markOrUnmarkTask(splitUserInputs, indexOfMark);","lastModifiedDate":"2022-09-07"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-07"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Hey! Please choose a positive digit that correspondence to the list.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":143,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a boolean true or false called error to inform user if he or she is trying","lastModifiedDate":"2022-09-01"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"     * to mark a task that is not defined or specified.","lastModifiedDate":"2022-09-01"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs an array of String that has been split into individual words.","lastModifiedDate":"2022-09-07"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"     * @param indexOfMark     index of the mark in splitUserInput[1].","lastModifiedDate":"2022-09-07"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"    public static void markOrUnmarkTask(String[] splitUserInputs, int indexOfMark) {","lastModifiedDate":"2022-09-07"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"        boolean isMark \u003d splitUserInputs[COMMAND_INDEX].equals(\"mark\");","lastModifiedDate":"2022-09-07"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"            if (isMark) {","lastModifiedDate":"2022-09-07"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"                assignments[indexOfMark].markAsDone();","lastModifiedDate":"2022-09-07"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"            } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"                assignments[indexOfMark].unmarkAsDone();","lastModifiedDate":"2022-09-07"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-09-07"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"            if (isMark) {","lastModifiedDate":"2022-09-07"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"                System.out.println(\"\\t You are trying to mark a task that has not been specified!\");","lastModifiedDate":"2022-09-07"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"            } else {","lastModifiedDate":"2022-09-07"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"                System.out.println(\"\\t You are trying to unmark a task that has not been specified!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-09-01"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"            return;","lastModifiedDate":"2022-09-07"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"        printMarkOrUnmarkTask(indexOfMark, isMark);","lastModifiedDate":"2022-09-07"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"     * Reads the index of where the mark or unmark is based on the user input then translate","lastModifiedDate":"2022-09-07"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"     * to indexing based on an array which index starts from 0 instead of 1.","lastModifiedDate":"2022-09-07"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-07"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs an array of String that has been split into individual words.","lastModifiedDate":"2022-09-07"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"     * @return indexOfMarkOrUnmark which is the index of where to mark or unmark in the list.","lastModifiedDate":"2022-09-07"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"     * @throws DukeException when the indexOfMark is not a digit, it will generate an error","lastModifiedDate":"2022-09-07"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"    public static int readIndexOfMarkOrUnmark(String[] splitUserInputs) throws DukeException {","lastModifiedDate":"2022-09-07"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"        boolean isPositiveDigits \u003d splitUserInputs[TASK_DETAIL_INDEX].matches(\"[0-9]+\")","lastModifiedDate":"2022-09-07"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"                \u0026\u0026 !splitUserInputs[TASK_DETAIL_INDEX].startsWith(\"-\");","lastModifiedDate":"2022-09-07"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"        if (!isPositiveDigits) {","lastModifiedDate":"2022-09-07"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"            throw new DukeException();","lastModifiedDate":"2022-09-07"},{"lineNumber":186,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfMarkOrUnmark \u003d Integer.parseInt(splitUserInputs[TASK_DETAIL_INDEX]);","lastModifiedDate":"2022-09-07"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"        return indexOfMarkOrUnmark - OFFSET_TO_ARRAY_INDEX;","lastModifiedDate":"2022-09-07"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the starting message of the CLI.","lastModifiedDate":"2022-09-01"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"     * @return linDivider a string for line separator","lastModifiedDate":"2022-09-01"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"    public static String printWelcomeMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"        String logo \u003d \"___________.__                ___.\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\\\_   _____/|  | _____    _____|  |__\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"                + \" |    __)  |  | \\\\__  \\\\  /  ___/  |  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"                + \" |     \\\\   |  |__/ __ \\\\_\\\\___ \\\\|   Y  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"                + \" \\\\___  /   |____(____  /____  \u003e___|  /\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"                + \"     \\\\/              \\\\/     \\\\/     \\\\/\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\" + lineDivider","lastModifiedDate":"2022-08-24"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t Hello! I\u0027m Flash\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t What can I do for you?\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":208,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":209,"author":{"gitId":"ivanthengwr"},"content":"        return lineDivider;","lastModifiedDate":"2022-09-01"},{"lineNumber":210,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":211,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":212,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":213,"author":{"gitId":"ivanthengwr"},"content":"     * Prints out a list of the tasks saved from the user inputs.","lastModifiedDate":"2022-09-01"},{"lineNumber":214,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":215,"author":{"gitId":"ivanthengwr"},"content":"    public static void printList() {","lastModifiedDate":"2022-09-01"},{"lineNumber":216,"author":{"gitId":"ivanthengwr"},"content":"        int numberOrder \u003d 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":217,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":218,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":219,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":220,"author":{"gitId":"ivanthengwr"},"content":"        for (int i \u003d 0; i \u003c indexTask; i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":221,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t \" + numberOrder + \".[\"","lastModifiedDate":"2022-09-01"},{"lineNumber":222,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments[i].getStatusOfTypeTask() + \"][\"","lastModifiedDate":"2022-09-02"},{"lineNumber":223,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments[i].getStatusOfDone() + \"] \"","lastModifiedDate":"2022-09-02"},{"lineNumber":224,"author":{"gitId":"ivanthengwr"},"content":"                    + assignments[i].displayTypeTaskDetails());","lastModifiedDate":"2022-09-02"},{"lineNumber":225,"author":{"gitId":"ivanthengwr"},"content":"            numberOrder++;","lastModifiedDate":"2022-09-01"},{"lineNumber":226,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":227,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":228,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":229,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":230,"author":{"gitId":"ivanthengwr"},"content":"     * Prints a message in CLI to inform the user if the task has been marked or not.","lastModifiedDate":"2022-09-01"},{"lineNumber":231,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"ivanthengwr"},"content":"     * @param markIndex index of which task to mark in splitUserInput[1].","lastModifiedDate":"2022-09-01"},{"lineNumber":233,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark    boolean true or false to check if the task has been marked.","lastModifiedDate":"2022-09-01"},{"lineNumber":234,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":235,"author":{"gitId":"ivanthengwr"},"content":"    public static void printMarkOrUnmarkTask(int markIndex, boolean isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":236,"author":{"gitId":"ivanthengwr"},"content":"        if (isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":237,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":238,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":239,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":240,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":241,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\\t [\" + assignments[markIndex].getStatusOfTypeTask()","lastModifiedDate":"2022-09-02"},{"lineNumber":242,"author":{"gitId":"ivanthengwr"},"content":"                + \"]\" + \"[\" + assignments[markIndex].getStatusOfDone()","lastModifiedDate":"2022-09-02"},{"lineNumber":243,"author":{"gitId":"ivanthengwr"},"content":"                + \"] \" + assignments[markIndex].getDescription());","lastModifiedDate":"2022-09-08"},{"lineNumber":244,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":245,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":246,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":247,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the type of task and its respective details","lastModifiedDate":"2022-09-07"},{"lineNumber":248,"author":{"gitId":"ivanthengwr"},"content":"     * of the description that the user input.","lastModifiedDate":"2022-09-07"},{"lineNumber":249,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":250,"author":{"gitId":"ivanthengwr"},"content":"    public static void printTypeOfTaskDetails() {","lastModifiedDate":"2022-09-07"},{"lineNumber":251,"author":{"gitId":"ivanthengwr"},"content":"        int countTask \u003d indexTask + 1;","lastModifiedDate":"2022-09-07"},{"lineNumber":252,"author":{"gitId":"ivanthengwr"},"content":"        String startStatement \u003d \"\\t Roger that. I\u0027ve added this task:\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":253,"author":{"gitId":"ivanthengwr"},"content":"        String displayTaskDetails \u003d \"\\t   [\" + assignments[indexTask].getStatusOfTypeTask()","lastModifiedDate":"2022-09-07"},{"lineNumber":254,"author":{"gitId":"ivanthengwr"},"content":"                + \"]\" + \"[ ] \" + assignments[indexTask].displayTypeTaskDetails() + \"\\n\";","lastModifiedDate":"2022-09-07"},{"lineNumber":255,"author":{"gitId":"ivanthengwr"},"content":"        String endStatement \u003d \"\\t Now you have \" + countTask + \" in the list.\";","lastModifiedDate":"2022-09-07"},{"lineNumber":256,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(startStatement + displayTaskDetails + endStatement);","lastModifiedDate":"2022-09-07"},{"lineNumber":257,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":258,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":259,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-07"},{"lineNumber":260,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the Task Error in case the user calls for a type of task","lastModifiedDate":"2022-09-07"},{"lineNumber":261,"author":{"gitId":"ivanthengwr"},"content":"     * but did not specify the task detail.","lastModifiedDate":"2022-09-07"},{"lineNumber":262,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-07"},{"lineNumber":263,"author":{"gitId":"ivanthengwr"},"content":"    public static void printTypeOfTaskError() {","lastModifiedDate":"2022-09-07"},{"lineNumber":264,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":265,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t â˜¹ OH MAN!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":266,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":267,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t â˜¹ OH MAN!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":268,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-07"},{"lineNumber":269,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t â˜¹ OH MAN!!! The description of an event cannot be empty.\");","lastModifiedDate":"2022-09-07"},{"lineNumber":270,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":271,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-07"},{"lineNumber":272,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":273,"author":{"gitId":"ivanthengwr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":274,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":275,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d printWelcomeMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":276,"author":{"gitId":"ivanthengwr"},"content":"        String userInput;","lastModifiedDate":"2022-08-24"},{"lineNumber":277,"author":{"gitId":"ivanthengwr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":278,"author":{"gitId":"ivanthengwr"},"content":"        boolean isBye;","lastModifiedDate":"2022-09-01"},{"lineNumber":279,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":280,"author":{"gitId":"ivanthengwr"},"content":"        do {","lastModifiedDate":"2022-08-24"},{"lineNumber":281,"author":{"gitId":"ivanthengwr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":282,"author":{"gitId":"ivanthengwr"},"content":"            System.out.print(\"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":283,"author":{"gitId":"ivanthengwr"},"content":"            String[] splitUserInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-09-01"},{"lineNumber":284,"author":{"gitId":"ivanthengwr"},"content":"            isBye \u003d splitUserInputs[COMMAND_INDEX].equals(\"bye\");","lastModifiedDate":"2022-09-07"},{"lineNumber":285,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":286,"author":{"gitId":"ivanthengwr"},"content":"            boolean isList \u003d splitUserInputs[COMMAND_INDEX].equals(\"list\");","lastModifiedDate":"2022-09-07"},{"lineNumber":287,"author":{"gitId":"ivanthengwr"},"content":"            boolean isMarkOrUnmark \u003d splitUserInputs[COMMAND_INDEX].equals(\"mark\")","lastModifiedDate":"2022-09-07"},{"lineNumber":288,"author":{"gitId":"ivanthengwr"},"content":"                || splitUserInputs[COMMAND_INDEX].equals(\"unmark\");","lastModifiedDate":"2022-09-07"},{"lineNumber":289,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":290,"author":{"gitId":"ivanthengwr"},"content":"            if (isBye) {","lastModifiedDate":"2022-09-07"},{"lineNumber":291,"author":{"gitId":"ivanthengwr"},"content":"                System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-07"},{"lineNumber":292,"author":{"gitId":"ivanthengwr"},"content":"            } else if (isList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":293,"author":{"gitId":"ivanthengwr"},"content":"                printList();","lastModifiedDate":"2022-09-01"},{"lineNumber":294,"author":{"gitId":"ivanthengwr"},"content":"            } else if (isMarkOrUnmark) {","lastModifiedDate":"2022-09-07"},{"lineNumber":295,"author":{"gitId":"ivanthengwr"},"content":"                validateMarkOrUnmarkTask(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":296,"author":{"gitId":"ivanthengwr"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":297,"author":{"gitId":"ivanthengwr"},"content":"                validateTypeOfTask(splitUserInputs);","lastModifiedDate":"2022-09-07"},{"lineNumber":298,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":299,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":300,"author":{"gitId":"ivanthengwr"},"content":"        } while (!isBye);","lastModifiedDate":"2022-09-01"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":303,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":304,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":305,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"-":4,"ivanthengwr":301}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.command;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-07"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"ivanthengwr":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is a deadline task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDeadline;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isDeadline \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isDeadline) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"D\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isDeadline \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is an event task */","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEvent;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Event(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isEvent \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        if (isEvent) {","lastModifiedDate":"2022-09-07"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"E\";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        isEvent \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"public class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** Represent the individual task that the user input */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is mark as done or not for each individual task */","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"        return description;","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() { return \" \"; }","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {}","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a string to properly display the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter modified string to contain the event or deadline task information","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"    public String displayTypeTaskDetails() {","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskParameter \u003d description;","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"        boolean isEventOrDeadline \u003d description.contains(\"/at\") || description.contains(\"/by\");","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"        if (isEventOrDeadline) {","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskParameter \u003d modifyDescription(typeTaskParameter);","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"     * Modifies the given description by the User","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"     * @param typeTaskParameter string that is taken from description","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"     * @return typeTaskParameter a modified string","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"    private String modifyDescription(String typeTaskParameter) {","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"        int indexOfDash \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskTitle \u003d typeTaskParameter.substring(0, indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskDetail \u003d typeTaskParameter.substring(indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.replaceFirst(\"/\", \"(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskDetail \u003d typeTaskDetail.substring(0,3) + \u0027:\u0027 + typeTaskDetail.substring(3) + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"        typeTaskParameter \u003d typeTaskTitle + typeTaskDetail;","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ivanthengwr":63}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"package duke.task;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is to do task */","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isToDo;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        this.isToDo \u003d false;","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-09-07"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        if (isToDo) {","lastModifiedDate":"2022-09-07"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"            status \u003d \"T\";","lastModifiedDate":"2022-09-07"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"        return status;","lastModifiedDate":"2022-09-07"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        isToDo \u003d true;","lastModifiedDate":"2022-09-02"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"todo read book","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by June 6th","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"todo join sports club","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"todo borrow book","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"mark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"mark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"mark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"mark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"mark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"mark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"mark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"mark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"unmark 1","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"unmark 2","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"unmark 3","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"unmark 4","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"unmark 5","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"unmark 6","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"unmark 7","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"unmark 8","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"list","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"bye","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"javac  -cp ..\\src\\main\\java\\* -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ivanthengwr":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"ivanthengwr":2}}]
