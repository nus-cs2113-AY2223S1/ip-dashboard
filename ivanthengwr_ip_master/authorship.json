[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDeadlineCheck;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    public Deadline(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"        this.isDeadlineCheck \u003d false;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        //mark Task with Deadline with \"D\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        return (isDeadlineCheck ? \"D\" : \" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        isDeadlineCheck \u003d true;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-24"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    private static final Task[] ASSIGNMENTS \u003d new Task[100];","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    private static int indexTask \u003d 0;","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"     * Sort the type of Task that is input by the user and prints out the respective types.","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"     * Based on the keyword \"todo\", \"deadline\" or \"event\".","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"     * Has helper functions addToDoTask(), addEventTask() and addDeadlineTask()","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"     * @param userInput the string input by the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of string that have been split into two.","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    public static void sortTypeOfTask(String userInput, String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"        boolean isToDo \u003d splitUserInputs[0].equals(\"todo\");","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        boolean isDeadlines \u003d splitUserInputs[0].equals(\"deadline\");","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"        boolean isEvent \u003d splitUserInputs[0].equals(\"event\");","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Roger that. I\u0027ve added this task:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"        if(isToDo) {","lastModifiedDate":"2022-09-01"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"            addToDoTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isDeadlines) {","lastModifiedDate":"2022-09-01"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"            addDeadlineTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"        } else if (isEvent) {","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"            addEventTask(splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"            addNoTypeTask(userInput);","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        indexTask++;","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Now you have \" + indexTask + \" in the list.\");","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"     * Returns the indexTask that is .","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"     * @param assignment assignment that is based on the type of task.","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"    public static void addTask(Task assignment) {","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"        ASSIGNMENTS[indexTask] \u003d assignment;","lastModifiedDate":"2022-09-01"},{"lineNumber":43,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":44,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":45,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":46,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case no type task.","lastModifiedDate":"2022-09-01"},{"lineNumber":47,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":48,"author":{"gitId":"ivanthengwr"},"content":"     * @param userInput that is input by the user.","lastModifiedDate":"2022-09-01"},{"lineNumber":49,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":50,"author":{"gitId":"ivanthengwr"},"content":"    private static void addNoTypeTask(String userInput) {","lastModifiedDate":"2022-09-01"},{"lineNumber":51,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Task(userInput));","lastModifiedDate":"2022-09-01"},{"lineNumber":52,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [ ][ ] \" + ASSIGNMENTS[indexTask].description);","lastModifiedDate":"2022-09-01"},{"lineNumber":53,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":54,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":55,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":56,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Event task.","lastModifiedDate":"2022-09-01"},{"lineNumber":57,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":58,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two.","lastModifiedDate":"2022-09-01"},{"lineNumber":59,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":60,"author":{"gitId":"ivanthengwr"},"content":"    private static void addEventTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":61,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Event(splitUserInputs[1]));","lastModifiedDate":"2022-09-01"},{"lineNumber":62,"author":{"gitId":"ivanthengwr"},"content":"        ASSIGNMENTS[indexTask].markTypeTask();","lastModifiedDate":"2022-09-01"},{"lineNumber":63,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [\" + ASSIGNMENTS[indexTask].getStatusOfTypeTask() + \"]\" + \"[ ] \"","lastModifiedDate":"2022-09-01"},{"lineNumber":64,"author":{"gitId":"ivanthengwr"},"content":"                + ASSIGNMENTS[indexTask].displayTypeTaskDetails());","lastModifiedDate":"2022-09-01"},{"lineNumber":65,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":66,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":67,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":68,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case Deadline task.","lastModifiedDate":"2022-09-01"},{"lineNumber":69,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":70,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two.","lastModifiedDate":"2022-09-01"},{"lineNumber":71,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":72,"author":{"gitId":"ivanthengwr"},"content":"    private static void addDeadlineTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":73,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new Deadline(splitUserInputs[1]));","lastModifiedDate":"2022-09-01"},{"lineNumber":74,"author":{"gitId":"ivanthengwr"},"content":"        ASSIGNMENTS[indexTask].markTypeTask();","lastModifiedDate":"2022-09-01"},{"lineNumber":75,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [\" + ASSIGNMENTS[indexTask].getStatusOfTypeTask() + \"]\" + \"[ ] \"","lastModifiedDate":"2022-09-01"},{"lineNumber":76,"author":{"gitId":"ivanthengwr"},"content":"                + ASSIGNMENTS[indexTask].displayTypeTaskDetails());","lastModifiedDate":"2022-09-01"},{"lineNumber":77,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":78,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":79,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":80,"author":{"gitId":"ivanthengwr"},"content":"     * Adds in the type of task which in this case to do task.","lastModifiedDate":"2022-09-01"},{"lineNumber":81,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":82,"author":{"gitId":"ivanthengwr"},"content":"     * @param splitUserInputs array of strings that is split into two.","lastModifiedDate":"2022-09-01"},{"lineNumber":83,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":84,"author":{"gitId":"ivanthengwr"},"content":"    private static void addToDoTask(String[] splitUserInputs) {","lastModifiedDate":"2022-09-01"},{"lineNumber":85,"author":{"gitId":"ivanthengwr"},"content":"        addTask(new ToDo(splitUserInputs[1]));","lastModifiedDate":"2022-09-01"},{"lineNumber":86,"author":{"gitId":"ivanthengwr"},"content":"        ASSIGNMENTS[indexTask].markTypeTask();","lastModifiedDate":"2022-09-01"},{"lineNumber":87,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t   [\" + ASSIGNMENTS[indexTask].getStatusOfTypeTask() + \"]\" + \"[ ] \"","lastModifiedDate":"2022-09-01"},{"lineNumber":88,"author":{"gitId":"ivanthengwr"},"content":"                + ASSIGNMENTS[indexTask].description);","lastModifiedDate":"2022-09-01"},{"lineNumber":89,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":90,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":91,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":92,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a boolean true or false called error to inform user if he or she is trying","lastModifiedDate":"2022-09-01"},{"lineNumber":93,"author":{"gitId":"ivanthengwr"},"content":"     * to mark a task that is not defined or specified.","lastModifiedDate":"2022-09-01"},{"lineNumber":94,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":95,"author":{"gitId":"ivanthengwr"},"content":"     * @param markIndex index of the mark in splitUserInput[1].","lastModifiedDate":"2022-09-01"},{"lineNumber":96,"author":{"gitId":"ivanthengwr"},"content":"     * @param lineDivider a string for line separator.","lastModifiedDate":"2022-09-01"},{"lineNumber":97,"author":{"gitId":"ivanthengwr"},"content":"     * @return error which is a boolean that tell us if there is an error or not.","lastModifiedDate":"2022-09-01"},{"lineNumber":98,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":99,"author":{"gitId":"ivanthengwr"},"content":"    public static boolean hasErrorMarkTask(int markIndex, String lineDivider) {","lastModifiedDate":"2022-09-01"},{"lineNumber":100,"author":{"gitId":"ivanthengwr"},"content":"        boolean error \u003d false;","lastModifiedDate":"2022-09-01"},{"lineNumber":101,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":102,"author":{"gitId":"ivanthengwr"},"content":"            ASSIGNMENTS[markIndex].markAsDone();","lastModifiedDate":"2022-09-01"},{"lineNumber":103,"author":{"gitId":"ivanthengwr"},"content":"        } catch(NullPointerException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":104,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to mark a task that has not been specified!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":105,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t\" + lineDivider);","lastModifiedDate":"2022-09-01"},{"lineNumber":106,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d true;","lastModifiedDate":"2022-09-01"},{"lineNumber":107,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":108,"author":{"gitId":"ivanthengwr"},"content":"        return error;","lastModifiedDate":"2022-09-01"},{"lineNumber":109,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":110,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":111,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":112,"author":{"gitId":"ivanthengwr"},"content":"     * Returns a boolean true or false error to inform user if he or she is trying","lastModifiedDate":"2022-09-01"},{"lineNumber":113,"author":{"gitId":"ivanthengwr"},"content":"     * to unmark a task that is not defined or specified.","lastModifiedDate":"2022-09-01"},{"lineNumber":114,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":115,"author":{"gitId":"ivanthengwr"},"content":"     * @param unMarkIndex index of the unmark in splitUserInput[1].","lastModifiedDate":"2022-09-01"},{"lineNumber":116,"author":{"gitId":"ivanthengwr"},"content":"     * @param lineDivider a string for line separator.","lastModifiedDate":"2022-09-01"},{"lineNumber":117,"author":{"gitId":"ivanthengwr"},"content":"     * @return error which is a boolean that tell us if there is an error or not.","lastModifiedDate":"2022-09-01"},{"lineNumber":118,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":119,"author":{"gitId":"ivanthengwr"},"content":"    public static boolean hasErrorUnMarkTask(int unMarkIndex, String lineDivider){","lastModifiedDate":"2022-09-01"},{"lineNumber":120,"author":{"gitId":"ivanthengwr"},"content":"        boolean error \u003d false;","lastModifiedDate":"2022-09-01"},{"lineNumber":121,"author":{"gitId":"ivanthengwr"},"content":"        try {","lastModifiedDate":"2022-09-01"},{"lineNumber":122,"author":{"gitId":"ivanthengwr"},"content":"            ASSIGNMENTS[unMarkIndex].unmarkAsDone();","lastModifiedDate":"2022-09-01"},{"lineNumber":123,"author":{"gitId":"ivanthengwr"},"content":"        } catch(NullPointerException e) {","lastModifiedDate":"2022-09-01"},{"lineNumber":124,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t You are trying to unmark a task that has not been specified!\");","lastModifiedDate":"2022-09-01"},{"lineNumber":125,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t\" + lineDivider);","lastModifiedDate":"2022-09-01"},{"lineNumber":126,"author":{"gitId":"ivanthengwr"},"content":"            error \u003d true;","lastModifiedDate":"2022-09-01"},{"lineNumber":127,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":128,"author":{"gitId":"ivanthengwr"},"content":"        return error;","lastModifiedDate":"2022-09-01"},{"lineNumber":129,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":130,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":131,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":132,"author":{"gitId":"ivanthengwr"},"content":"     * Prints the starting message of the CLI.","lastModifiedDate":"2022-09-01"},{"lineNumber":133,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":134,"author":{"gitId":"ivanthengwr"},"content":"     * @return linDivider a string for line separator","lastModifiedDate":"2022-09-01"},{"lineNumber":135,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":136,"author":{"gitId":"ivanthengwr"},"content":"    public static String printWelcomeMessage() {","lastModifiedDate":"2022-09-01"},{"lineNumber":137,"author":{"gitId":"ivanthengwr"},"content":"        String logo \u003d \"___________.__                ___.\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":138,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\\\_   _____/|  | _____    _____|  |__\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":139,"author":{"gitId":"ivanthengwr"},"content":"                + \" |    __)  |  | \\\\__  \\\\  /  ___/  |  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":140,"author":{"gitId":"ivanthengwr"},"content":"                + \" |     \\\\   |  |__/ __ \\\\_\\\\___ \\\\|   Y  \\\\\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":141,"author":{"gitId":"ivanthengwr"},"content":"                + \" \\\\___  /   |____(____  /____  \u003e___|  /\\n\"","lastModifiedDate":"2022-08-17"},{"lineNumber":142,"author":{"gitId":"ivanthengwr"},"content":"                + \"     \\\\/              \\\\/     \\\\/     \\\\/\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\"+ logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-08-17"},{"lineNumber":145,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\" + lineDivider","lastModifiedDate":"2022-08-24"},{"lineNumber":146,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t Hello! I\u0027m Flash\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":147,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t What can I do for you?\\n\"","lastModifiedDate":"2022-08-24"},{"lineNumber":148,"author":{"gitId":"ivanthengwr"},"content":"                + \"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":149,"author":{"gitId":"ivanthengwr"},"content":"        return lineDivider;","lastModifiedDate":"2022-09-01"},{"lineNumber":150,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":151,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-24"},{"lineNumber":152,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":153,"author":{"gitId":"ivanthengwr"},"content":"     * Prints out a list of the tasks saved from the user inputs.","lastModifiedDate":"2022-09-01"},{"lineNumber":154,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":155,"author":{"gitId":"ivanthengwr"},"content":"    public static void printList() {","lastModifiedDate":"2022-09-01"},{"lineNumber":156,"author":{"gitId":"ivanthengwr"},"content":"        int numberOrder \u003d 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":157,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":158,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":159,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":160,"author":{"gitId":"ivanthengwr"},"content":"        for(int i \u003d 0; i \u003c indexTask; i++) {","lastModifiedDate":"2022-09-01"},{"lineNumber":161,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t \" + numberOrder + \".[\"","lastModifiedDate":"2022-09-01"},{"lineNumber":162,"author":{"gitId":"ivanthengwr"},"content":"                    + ASSIGNMENTS[i].getStatusOfTypeTask() + \"][\"","lastModifiedDate":"2022-09-01"},{"lineNumber":163,"author":{"gitId":"ivanthengwr"},"content":"                    + ASSIGNMENTS[i].getStatusOfDone() + \"] \"","lastModifiedDate":"2022-09-01"},{"lineNumber":164,"author":{"gitId":"ivanthengwr"},"content":"                    + ASSIGNMENTS[i].displayTypeTaskDetails());","lastModifiedDate":"2022-09-01"},{"lineNumber":165,"author":{"gitId":"ivanthengwr"},"content":"            numberOrder++;","lastModifiedDate":"2022-09-01"},{"lineNumber":166,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":167,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":168,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":169,"author":{"gitId":"ivanthengwr"},"content":"    /**","lastModifiedDate":"2022-09-01"},{"lineNumber":170,"author":{"gitId":"ivanthengwr"},"content":"     * Prints a message in CLI to inform the user if the task has been marked or not.","lastModifiedDate":"2022-09-01"},{"lineNumber":171,"author":{"gitId":"ivanthengwr"},"content":"     *","lastModifiedDate":"2022-09-01"},{"lineNumber":172,"author":{"gitId":"ivanthengwr"},"content":"     * @param markIndex index of which task to mark in splitUserInput[1].","lastModifiedDate":"2022-09-01"},{"lineNumber":173,"author":{"gitId":"ivanthengwr"},"content":"     * @param isMark boolean true or false to check if the task has been marked.","lastModifiedDate":"2022-09-01"},{"lineNumber":174,"author":{"gitId":"ivanthengwr"},"content":"     */","lastModifiedDate":"2022-09-01"},{"lineNumber":175,"author":{"gitId":"ivanthengwr"},"content":"    public static void printMarkOrUnmarkTask(int markIndex, boolean isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":176,"author":{"gitId":"ivanthengwr"},"content":"        if(isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":177,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":178,"author":{"gitId":"ivanthengwr"},"content":"        } else {","lastModifiedDate":"2022-09-01"},{"lineNumber":179,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t Awesome! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-01"},{"lineNumber":180,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":181,"author":{"gitId":"ivanthengwr"},"content":"        System.out.println(\"\\t\\t [\" + ASSIGNMENTS[markIndex].getStatusOfTypeTask()","lastModifiedDate":"2022-09-01"},{"lineNumber":182,"author":{"gitId":"ivanthengwr"},"content":"                + \"]\" + \"[\" + ASSIGNMENTS[markIndex].getStatusOfDone()","lastModifiedDate":"2022-09-01"},{"lineNumber":183,"author":{"gitId":"ivanthengwr"},"content":"                + \"] \" + ASSIGNMENTS[markIndex].description);","lastModifiedDate":"2022-09-01"},{"lineNumber":184,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":185,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-01"},{"lineNumber":187,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":188,"author":{"gitId":"ivanthengwr"},"content":"        String lineDivider \u003d printWelcomeMessage();","lastModifiedDate":"2022-09-01"},{"lineNumber":189,"author":{"gitId":"ivanthengwr"},"content":"        String userInput;","lastModifiedDate":"2022-08-24"},{"lineNumber":190,"author":{"gitId":"ivanthengwr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-24"},{"lineNumber":191,"author":{"gitId":"ivanthengwr"},"content":"        boolean isBye;","lastModifiedDate":"2022-09-01"},{"lineNumber":192,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":193,"author":{"gitId":"ivanthengwr"},"content":"        do {","lastModifiedDate":"2022-08-24"},{"lineNumber":194,"author":{"gitId":"ivanthengwr"},"content":"            //Enable user to enter text","lastModifiedDate":"2022-08-25"},{"lineNumber":195,"author":{"gitId":"ivanthengwr"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2022-08-24"},{"lineNumber":196,"author":{"gitId":"ivanthengwr"},"content":"            System.out.print(\"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":197,"author":{"gitId":"ivanthengwr"},"content":"            String[] splitUserInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2022-09-01"},{"lineNumber":198,"author":{"gitId":"ivanthengwr"},"content":"            isBye \u003d splitUserInputs[0].equals(\"bye\");","lastModifiedDate":"2022-09-01"},{"lineNumber":199,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":200,"author":{"gitId":"ivanthengwr"},"content":"            boolean isUserInputData \u003d !splitUserInputs[0].equals(\"bye\")","lastModifiedDate":"2022-09-01"},{"lineNumber":201,"author":{"gitId":"ivanthengwr"},"content":"                    \u0026\u0026 !splitUserInputs[0].equals(\"list\")","lastModifiedDate":"2022-09-01"},{"lineNumber":202,"author":{"gitId":"ivanthengwr"},"content":"                    \u0026\u0026 !splitUserInputs[0].equals(\"mark\")","lastModifiedDate":"2022-09-01"},{"lineNumber":203,"author":{"gitId":"ivanthengwr"},"content":"                    \u0026\u0026 !splitUserInputs[0].equals(\"unmark\");","lastModifiedDate":"2022-09-01"},{"lineNumber":204,"author":{"gitId":"ivanthengwr"},"content":"            boolean isList \u003d splitUserInputs[0].equals(\"list\");","lastModifiedDate":"2022-09-01"},{"lineNumber":205,"author":{"gitId":"ivanthengwr"},"content":"            boolean isMark \u003d splitUserInputs[0].equals(\"mark\");","lastModifiedDate":"2022-09-01"},{"lineNumber":206,"author":{"gitId":"ivanthengwr"},"content":"            boolean isUnmark \u003d splitUserInputs[0].equals(\"unmark\");","lastModifiedDate":"2022-09-01"},{"lineNumber":207,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":208,"author":{"gitId":"ivanthengwr"},"content":"            if(isUserInputData) {","lastModifiedDate":"2022-09-01"},{"lineNumber":209,"author":{"gitId":"ivanthengwr"},"content":"                sortTypeOfTask(userInput, splitUserInputs);","lastModifiedDate":"2022-09-01"},{"lineNumber":210,"author":{"gitId":"ivanthengwr"},"content":"            } else if (isList) {","lastModifiedDate":"2022-09-01"},{"lineNumber":211,"author":{"gitId":"ivanthengwr"},"content":"                printList();","lastModifiedDate":"2022-09-01"},{"lineNumber":212,"author":{"gitId":"ivanthengwr"},"content":"            } else if (isMark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":213,"author":{"gitId":"ivanthengwr"},"content":"                int indexMark \u003d Integer.parseInt(splitUserInputs[1]) - 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":214,"author":{"gitId":"ivanthengwr"},"content":"                //To handle a case where user tries to mark a task that has not been specified","lastModifiedDate":"2022-08-25"},{"lineNumber":215,"author":{"gitId":"ivanthengwr"},"content":"                if(hasErrorMarkTask(indexMark, lineDivider)) {","lastModifiedDate":"2022-09-01"},{"lineNumber":216,"author":{"gitId":"ivanthengwr"},"content":"                    continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":217,"author":{"gitId":"ivanthengwr"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":218,"author":{"gitId":"ivanthengwr"},"content":"                printMarkOrUnmarkTask(indexMark, true);","lastModifiedDate":"2022-09-01"},{"lineNumber":219,"author":{"gitId":"ivanthengwr"},"content":"            } else if (isUnmark) {","lastModifiedDate":"2022-09-01"},{"lineNumber":220,"author":{"gitId":"ivanthengwr"},"content":"                int indexMark \u003d Integer.parseInt(splitUserInputs[1]) - 1;","lastModifiedDate":"2022-09-01"},{"lineNumber":221,"author":{"gitId":"ivanthengwr"},"content":"                //To handle a case where user tries to unmark a task that has not been specified","lastModifiedDate":"2022-08-25"},{"lineNumber":222,"author":{"gitId":"ivanthengwr"},"content":"                if(hasErrorUnMarkTask(indexMark, lineDivider)){","lastModifiedDate":"2022-09-01"},{"lineNumber":223,"author":{"gitId":"ivanthengwr"},"content":"                    continue;","lastModifiedDate":"2022-08-25"},{"lineNumber":224,"author":{"gitId":"ivanthengwr"},"content":"                }","lastModifiedDate":"2022-08-25"},{"lineNumber":225,"author":{"gitId":"ivanthengwr"},"content":"                printMarkOrUnmarkTask(indexMark, false);","lastModifiedDate":"2022-09-01"},{"lineNumber":226,"author":{"gitId":"ivanthengwr"},"content":"            } else {","lastModifiedDate":"2022-08-25"},{"lineNumber":227,"author":{"gitId":"ivanthengwr"},"content":"                System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-24"},{"lineNumber":228,"author":{"gitId":"ivanthengwr"},"content":"            }","lastModifiedDate":"2022-08-24"},{"lineNumber":229,"author":{"gitId":"ivanthengwr"},"content":"            System.out.println(\"\\t\" + lineDivider);","lastModifiedDate":"2022-08-24"},{"lineNumber":230,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-08-24"},{"lineNumber":231,"author":{"gitId":"ivanthengwr"},"content":"        while(!isBye);","lastModifiedDate":"2022-09-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"ivanthengwr":228}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"public class Event extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isEventCheck;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    public Event(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"        this.isEventCheck \u003d false;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        //mark task with event as \"E\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        return (isEventCheck ? \"E\" : \" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        isEventCheck \u003d true;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"public class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"    /** Represent the individual task that the user input */","lastModifiedDate":"2022-08-25"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    /** To check if the task is mark as done or not for each individual task */","lastModifiedDate":"2022-08-25"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfDone() {","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"        //mark done task with X","lastModifiedDate":"2022-08-25"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-08-25"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() { return \" \"; }","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-08-25"},{"lineNumber":21,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":22,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"ivanthengwr"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"ivanthengwr"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":26,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":27,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {}","lastModifiedDate":"2022-09-01"},{"lineNumber":28,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":29,"author":{"gitId":"ivanthengwr"},"content":"    public String displayTypeTaskDetails() {","lastModifiedDate":"2022-09-01"},{"lineNumber":30,"author":{"gitId":"ivanthengwr"},"content":"        String typeTaskParameter \u003d description;","lastModifiedDate":"2022-09-01"},{"lineNumber":31,"author":{"gitId":"ivanthengwr"},"content":"        boolean isEventOrDeadline \u003d description.contains(\"/at\") || description.contains(\"/by\");","lastModifiedDate":"2022-09-01"},{"lineNumber":32,"author":{"gitId":"ivanthengwr"},"content":"        if(isEventOrDeadline) {","lastModifiedDate":"2022-09-01"},{"lineNumber":33,"author":{"gitId":"ivanthengwr"},"content":"            int indexOfDash \u003d description.indexOf(\"/\");","lastModifiedDate":"2022-09-01"},{"lineNumber":34,"author":{"gitId":"ivanthengwr"},"content":"            String typeTaskTitle \u003d typeTaskParameter.substring(0, indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":35,"author":{"gitId":"ivanthengwr"},"content":"            String typeTaskDetail \u003d typeTaskParameter.substring(indexOfDash);","lastModifiedDate":"2022-09-01"},{"lineNumber":36,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskDetail \u003d typeTaskDetail.replaceFirst(\"/\", \"(\");","lastModifiedDate":"2022-09-01"},{"lineNumber":37,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskDetail \u003d typeTaskDetail.substring(0,3) + \u0027:\u0027 + typeTaskDetail.substring(3) + \")\";","lastModifiedDate":"2022-09-01"},{"lineNumber":38,"author":{"gitId":"ivanthengwr"},"content":"            typeTaskParameter \u003d typeTaskTitle + typeTaskDetail;","lastModifiedDate":"2022-09-01"},{"lineNumber":39,"author":{"gitId":"ivanthengwr"},"content":"        }","lastModifiedDate":"2022-09-01"},{"lineNumber":40,"author":{"gitId":"ivanthengwr"},"content":"        return typeTaskParameter;","lastModifiedDate":"2022-09-01"},{"lineNumber":41,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":42,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"ivanthengwr":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ivanthengwr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-09-01"},{"lineNumber":2,"author":{"gitId":"ivanthengwr"},"content":"    protected boolean isToDoCheck;","lastModifiedDate":"2022-09-01"},{"lineNumber":3,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":4,"author":{"gitId":"ivanthengwr"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-09-01"},{"lineNumber":5,"author":{"gitId":"ivanthengwr"},"content":"        super(description);","lastModifiedDate":"2022-09-01"},{"lineNumber":6,"author":{"gitId":"ivanthengwr"},"content":"        this.isToDoCheck \u003d false;","lastModifiedDate":"2022-09-01"},{"lineNumber":7,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":8,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":9,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":10,"author":{"gitId":"ivanthengwr"},"content":"    public String getStatusOfTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":11,"author":{"gitId":"ivanthengwr"},"content":"        //mark task with toDo as \"T\"","lastModifiedDate":"2022-09-01"},{"lineNumber":12,"author":{"gitId":"ivanthengwr"},"content":"        return (isToDoCheck ? \"T\" : \" \");","lastModifiedDate":"2022-09-01"},{"lineNumber":13,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":14,"author":{"gitId":"ivanthengwr"},"content":"","lastModifiedDate":"2022-09-01"},{"lineNumber":15,"author":{"gitId":"ivanthengwr"},"content":"    @Override","lastModifiedDate":"2022-09-01"},{"lineNumber":16,"author":{"gitId":"ivanthengwr"},"content":"    public void markTypeTask() {","lastModifiedDate":"2022-09-01"},{"lineNumber":17,"author":{"gitId":"ivanthengwr"},"content":"        isToDoCheck \u003d true;","lastModifiedDate":"2022-09-01"},{"lineNumber":18,"author":{"gitId":"ivanthengwr"},"content":"    }","lastModifiedDate":"2022-09-01"},{"lineNumber":19,"author":{"gitId":"ivanthengwr"},"content":"}","lastModifiedDate":"2022-09-01"}],"authorContributionMap":{"ivanthengwr":19}}]
