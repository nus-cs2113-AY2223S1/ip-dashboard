[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"# duke.Duke project template","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"You will use this as a baseline for the individual project, as well as the team project later in the semester.","lastModifiedDate":"2022-08-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-08-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"helpdesk1234":2,"-":24}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":" * Class representing a Deadline","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"    /** Deadline inputted by user */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"    private String deadlineDate;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    public String getDeadlineDate(){","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"        return this.deadlineDate;","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"     * Constructor for Deadline to initialise it with description and deadlineDate passed in.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     * Sets the task type.","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"     * @param description Description of what deadline is for.","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"     * @param deadlineDate Date of deadline.","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"    public Deadline(String description, String deadlineDate){","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"        this.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"    public void setDeadlineDate(String deadlineDate){","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"    public void printTask() {","lastModifiedDate":"2022-09-03"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"        super.printTask();","lastModifiedDate":"2022-09-03"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(\" (\"+this.deadlineDate +\")\");","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"    public String getSaveString(){","lastModifiedDate":"2022-09-14"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"        return taskType + \"|\" + isDone +  \"|\" + description + \"|\" + deadlineDate;","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"helpdesk1234":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":" * Duke is a task list manager.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    /** Boolean to indicate if \"bye\" has been input by user */","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    private static boolean shouldExit \u003d false;","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"     * Calls dukeController to handle program flow of Duke.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"     * @param args Null","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"        DukeController dukeController \u003d new DukeController();","lastModifiedDate":"2022-08-25"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"        dukeController.initialise();","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"        while (!shouldExit){","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"            dukeController.getUserInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"            dukeController.handleUserInput();","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"     * For dukeController to call when \"bye\" is input by user","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"    public static void exitDuke(){","lastModifiedDate":"2022-09-08"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"        shouldExit \u003d true;","lastModifiedDate":"2022-09-08"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"helpdesk1234":29,"-":4}},{"path":"src/main/java/duke/DukeController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-14"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-14"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"import java.nio.file.NotDirectoryException;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-25"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":" * Class to control the program flow of Duke.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"public class DukeController {","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    private final Storage storage \u003d new Storage();","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"    private String userInput;","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     * Calls Parser class to read user input by line and stores in userInput.","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"    public void getUserInput(){","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"        userInput \u003d parser.readInput();","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"     * Called when Duke is started.","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"     * Prints welcome message and read saved data from previous session if any.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"     * If it is the first time Duke is run, makes data directory and duke.txt file for saving information.","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"    public void initialise(){","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"        storage.setHomePath();","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"        ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"        ui.printWelcome();","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"        ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"        try {","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"            storage.makeDirectory();","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"            taskList \u003d storage.readData();","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"        } catch (IOException e){","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"            ui.printExceptionMessage(e);","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"            ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"     * Calls Parser to parse user input.","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"     * Calls Ui to output appropriate responses to user.","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"     * Calls TaskList to update taskList when needed.","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"     * Calls Storage to update save file when needed.","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"    public void handleUserInput(){","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"            String[] parsedInput \u003d parser.parseInput(userInput);","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"            String userCommand \u003d parsedInput[0];","lastModifiedDate":"2022-09-03"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"            switch(userCommand){","lastModifiedDate":"2022-09-03"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"            case \"bye\":","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"                ui.printGoodbye();","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"                ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"                Duke.exitDuke();","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"                return;","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"            case \"find\":","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"                ArrayList\u003cTask\u003e searchResults \u003d taskList.search(parsedInput[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"helpdesk1234"},"content":"                ui.printSearchResults(searchResults, parsedInput[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"helpdesk1234"},"content":"                ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"helpdesk1234"},"content":"            case \"list\":","lastModifiedDate":"2022-09-03"},{"lineNumber":66,"author":{"gitId":"helpdesk1234"},"content":"                if (taskList.getTaskList().size() \u003d\u003d 0){","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printTaskListEmpty();","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"helpdesk1234"},"content":"                } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printTaskListItems(taskList.getTaskList());","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"helpdesk1234"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-03"},{"lineNumber":75,"author":{"gitId":"helpdesk1234"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-03"},{"lineNumber":76,"author":{"gitId":"helpdesk1234"},"content":"            case \"event\":","lastModifiedDate":"2022-09-03"},{"lineNumber":77,"author":{"gitId":"helpdesk1234"},"content":"                try {","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"helpdesk1234"},"content":"                    String[] details \u003d parser.parseTaskInformation(parsedInput[1], userCommand);","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"helpdesk1234"},"content":"                    Task newTask \u003d taskList.generateTask(userCommand, details);","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"helpdesk1234"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printAddTaskSuccess(newTask);","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printTaskCount(taskList.getTaskList().size());","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"helpdesk1234"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"helpdesk1234"},"content":"                } catch (IllegalInputException | IOException e) {","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printExceptionMessage(e);","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"helpdesk1234"},"content":"                    ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-08"},{"lineNumber":89,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"helpdesk1234"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-14"},{"lineNumber":91,"author":{"gitId":"helpdesk1234"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"helpdesk1234"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"helpdesk1234"},"content":"                try {","lastModifiedDate":"2022-09-08"},{"lineNumber":94,"author":{"gitId":"helpdesk1234"},"content":"                    int taskIndex \u003d parser.parseTaskIndex(parsedInput[1], userCommand);","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"helpdesk1234"},"content":"                    if (userCommand.equals(\"mark\") || userCommand.equals(\"unmark\")) {","lastModifiedDate":"2022-09-14"},{"lineNumber":96,"author":{"gitId":"helpdesk1234"},"content":"                        taskList.updateTaskStatus(taskIndex, userCommand);","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printUpdateTaskSuccess(taskList.getTaskList().get(taskIndex-1), userCommand);","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"helpdesk1234"},"content":"                    } else {","lastModifiedDate":"2022-09-14"},{"lineNumber":100,"author":{"gitId":"helpdesk1234"},"content":"                        Task taskDeleted \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printDeleteTaskSuccess(taskDeleted);","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printTaskCount(taskList.getTaskList().size());","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"helpdesk1234"},"content":"                    }","lastModifiedDate":"2022-09-14"},{"lineNumber":105,"author":{"gitId":"helpdesk1234"},"content":"                    storage.saveData(taskList);","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"helpdesk1234"},"content":"                } catch (IllegalInputException | IOException e){","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printExceptionMessage(e);","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"helpdesk1234"},"content":"                        ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-08"},{"lineNumber":110,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-03"},{"lineNumber":111,"author":{"gitId":"helpdesk1234"},"content":"            default:","lastModifiedDate":"2022-09-03"},{"lineNumber":112,"author":{"gitId":"helpdesk1234"},"content":"                ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":114,"author":{"gitId":"helpdesk1234"},"content":"        } catch (IllegalInputException e) {","lastModifiedDate":"2022-09-08"},{"lineNumber":115,"author":{"gitId":"helpdesk1234"},"content":"            ui.printExceptionMessage(e);","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"helpdesk1234"},"content":"            ui.printNewLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-08-25"},{"lineNumber":118,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":119,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":120,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"helpdesk1234":120}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":" * Class representing an event.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"    /** Timing when the event is occurring */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"    private String timing;","lastModifiedDate":"2022-08-31"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    public String getTiming(){","lastModifiedDate":"2022-08-31"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"        return this.timing;","lastModifiedDate":"2022-08-31"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"     * Constructor for Event to initialise it with description and timing passed in.","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"     * @param description Description of the event.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     * @param timing Timing when theevent occurs.","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"    public Event(String description, String timing){","lastModifiedDate":"2022-08-31"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"        this.taskType \u003d \u0027E\u0027;","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"    public void setTiming(String timing) {","lastModifiedDate":"2022-08-31"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2022-08-31"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"    public void printTask() {","lastModifiedDate":"2022-09-03"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"        super.printTask();","lastModifiedDate":"2022-09-03"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(\" (\"+this.timing+\")\");","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-09-14"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"    public String getSaveString(){","lastModifiedDate":"2022-09-14"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"        return taskType + \"|\" + isDone +  \"|\" + description + \"|\" + timing;","lastModifiedDate":"2022-09-14"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"helpdesk1234":41}},{"path":"src/main/java/duke/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":" * Class to represent exceptions to do with illegal user inputs.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"public class IllegalInputException extends Exception{","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"    private String errorMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"     * Constructs an exception with custom error messages.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"     * @param errorMessage Custom error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    public IllegalInputException(String errorMessage){","lastModifiedDate":"2022-09-08"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"        return errorMessage;","lastModifiedDate":"2022-09-08"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-09-08"}],"authorContributionMap":{"helpdesk1234":23}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":" * Class to handle parsing user input.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"public class Parser {","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"    private final String EMPTY_DESCRIPTION_ERROR \u003d \":( The description of a %s cannot be empty!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    private final String EMPTY_DATE_ERROR \u003d \":( A %s task must have a date!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    private final String UNKNOWN_USER_COMMAND_ERROR \u003d \":( Sorry I do not know what that means!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"    private final String EMPTY_INPUT_ERROR \u003d \":( Input cannot be empty\";","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    private final String INVALID_TASK_INDEX_ERROR \u003d \":( You must specify a valid index for a %s action!\";","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    private final String INVALID_SEARCH_KEYWORD_ERROR \u003d \":( you must give one keyword for searching!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    protected final Scanner INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"     * Returns users input read by line.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     * @return User input read by line.","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"    public String readInput(){","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"        return INPUT.nextLine();","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"     * Returns a String array of maximum size 2 consisting of user input split by whitespace.","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"     * @param userInput String containing user input read by line.","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"     * @return User input.","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IllegalInputException If number of arguments input by user is not as expected.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"    public String[] parseInput(String userInput) throws IllegalInputException{","lastModifiedDate":"2022-09-08"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"        String[] parsedInput \u003d userInput.trim().split(\" +\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"        String userCommand \u003d parsedInput[0];","lastModifiedDate":"2022-09-08"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"        switch (userCommand){","lastModifiedDate":"2022-09-08"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"        case \"find\":","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"            if (parsedInput.length \u003d\u003d 1){","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"                throw new IllegalInputException(INVALID_SEARCH_KEYWORD_ERROR);","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-08"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-14"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"            if (parsedInput.length \u003d\u003d 1){","lastModifiedDate":"2022-09-08"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"                throw new IllegalInputException(String.format(INVALID_TASK_INDEX_ERROR, userCommand));","lastModifiedDate":"2022-09-08"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-08"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-08"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"        case \"event\":","lastModifiedDate":"2022-09-08"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"            if (parsedInput.length \u003d\u003d 1) {","lastModifiedDate":"2022-09-08"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"                throw new IllegalInputException(String.format(EMPTY_DESCRIPTION_ERROR, userCommand));","lastModifiedDate":"2022-09-08"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"        case \"list\":","lastModifiedDate":"2022-09-08"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-08"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"            break;","lastModifiedDate":"2022-09-08"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"        case \"\":","lastModifiedDate":"2022-09-08"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(EMPTY_INPUT_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"        default:","lastModifiedDate":"2022-09-08"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(UNKNOWN_USER_COMMAND_ERROR);","lastModifiedDate":"2022-09-08"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"        return parsedInput;","lastModifiedDate":"2022-09-03"},{"lineNumber":62,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":63,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"helpdesk1234"},"content":"     * Returns a String array of maximum size 2 containing description and date of task if needed.","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"helpdesk1234"},"content":"     * @param userInput String of user input task information.","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"helpdesk1234"},"content":"     * @param userCommand Command to create task.","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"helpdesk1234"},"content":"     * @return Task information.","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IllegalInputException If date or description is empty for event and deadline tasks.","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"helpdesk1234"},"content":"    public String[] parseTaskInformation(String userInput, String userCommand) throws IllegalInputException {","lastModifiedDate":"2022-09-08"},{"lineNumber":73,"author":{"gitId":"helpdesk1234"},"content":"        String[] details \u003d userInput.split(\"/\", 2);","lastModifiedDate":"2022-09-03"},{"lineNumber":74,"author":{"gitId":"helpdesk1234"},"content":"        if (userCommand.equals(\"event\") || userCommand.equals(\"deadline\")){","lastModifiedDate":"2022-09-08"},{"lineNumber":75,"author":{"gitId":"helpdesk1234"},"content":"            if (details[0].trim().equals(\"\")) {","lastModifiedDate":"2022-09-08"},{"lineNumber":76,"author":{"gitId":"helpdesk1234"},"content":"                throw new IllegalInputException(String.format(EMPTY_DESCRIPTION_ERROR, userCommand));","lastModifiedDate":"2022-09-08"},{"lineNumber":77,"author":{"gitId":"helpdesk1234"},"content":"            } else if (details.length \u003c 2){","lastModifiedDate":"2022-09-08"},{"lineNumber":78,"author":{"gitId":"helpdesk1234"},"content":"                throw new IllegalInputException(String.format(EMPTY_DATE_ERROR, userCommand));","lastModifiedDate":"2022-09-08"},{"lineNumber":79,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-08"},{"lineNumber":80,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":81,"author":{"gitId":"helpdesk1234"},"content":"        for (int i \u003d 0; i \u003c details.length; i++){","lastModifiedDate":"2022-09-03"},{"lineNumber":82,"author":{"gitId":"helpdesk1234"},"content":"            details[i] \u003d details[i].trim();","lastModifiedDate":"2022-09-03"},{"lineNumber":83,"author":{"gitId":"helpdesk1234"},"content":"            if (details[i].startsWith(\"by\") || details[i].startsWith(\"at\")){","lastModifiedDate":"2022-09-03"},{"lineNumber":84,"author":{"gitId":"helpdesk1234"},"content":"                String date \u003d details[i].substring(2);","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"helpdesk1234"},"content":"                if (date.isEmpty()){","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"helpdesk1234"},"content":"                    throw new IllegalInputException(String.format(EMPTY_DATE_ERROR, userCommand));","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"helpdesk1234"},"content":"                details[i] \u003d details[i].substring(0,2) + \":\" + details[i].substring(2);","lastModifiedDate":"2022-09-03"},{"lineNumber":89,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-03"},{"lineNumber":90,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":91,"author":{"gitId":"helpdesk1234"},"content":"        return details;","lastModifiedDate":"2022-09-03"},{"lineNumber":92,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":93,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"helpdesk1234"},"content":"     * Returns an integer representing the index of task to perform userCommand on.","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"helpdesk1234"},"content":"     * @param userInput String of user input task index.","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"helpdesk1234"},"content":"     * @param userCommand Command to update task.","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"helpdesk1234"},"content":"     * @return Task index.","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IllegalInputException if userInput is not parsable as an integer.","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"helpdesk1234"},"content":"    public int parseTaskIndex(String userInput, String userCommand) throws IllegalInputException{","lastModifiedDate":"2022-09-08"},{"lineNumber":103,"author":{"gitId":"helpdesk1234"},"content":"        try {","lastModifiedDate":"2022-09-08"},{"lineNumber":104,"author":{"gitId":"helpdesk1234"},"content":"            return Integer.parseInt(userInput);","lastModifiedDate":"2022-09-03"},{"lineNumber":105,"author":{"gitId":"helpdesk1234"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2022-09-08"},{"lineNumber":106,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(String.format(INVALID_TASK_INDEX_ERROR, userCommand));","lastModifiedDate":"2022-09-08"},{"lineNumber":107,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-08"},{"lineNumber":108,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":109,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":110,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"helpdesk1234":110}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.io.File;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"import java.nio.file.NotDirectoryException;","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":" * Class to handle storage of task lists locally.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"public class Storage {","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    private final String DATA_DIRECTORY \u003d \"data\";","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"    private final String PROJECT_ROOT \u003d \".\";","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"    private final String SAVE_FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"    private final String CREATE_DIRECTORY_FAILED \u003d \"Please create a directory named data before using duke!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"    private final int TASK_TYPE \u003d 0;","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"    private final int TASK_STATUS \u003d 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"    private final int TASK_DESCRIPTION \u003d 2;","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"    private final int TASK_TIMING \u003d 3;","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"    /** Path to save and read files from */","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"    private Path savedFilePath;","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"    private Path dataDirectoryPath;","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"     * Initialise savedFilePath to desired file path (./data/duke.txt) and dataDirectoryPath to desired directory (./data).","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"    public void setHomePath(){","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"        savedFilePath \u003d Paths.get(PROJECT_ROOT,DATA_DIRECTORY,SAVE_FILE_NAME);","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"        dataDirectoryPath \u003d Paths.get(PROJECT_ROOT,DATA_DIRECTORY);","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"    public String getHomePath(){","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"        return this.savedFilePath.toString();","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"     * Returns TaskList read from saved file.","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"     * @return TaskList","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"     * @throws FileNotFoundException if saved file is not found","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"    public TaskList readData() throws FileNotFoundException {","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"        File savedFile \u003d savedFilePath.toFile();","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"        Scanner fileScanner \u003d new Scanner(savedFile);","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"        while (fileScanner.hasNextLine()){","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"            String[] data \u003d fileScanner.nextLine().split(Pattern.quote(\"|\"));","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"            switch (data[TASK_TYPE]){","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"            case \"T\":","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"                ToDo oldToDo \u003d new ToDo(data[TASK_DESCRIPTION]);","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"                if (data[TASK_STATUS].equals(\"true\")){","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"                    oldToDo.setDone(true);","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"                taskList.addTask(oldToDo);","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"helpdesk1234"},"content":"            case \"E\":","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"helpdesk1234"},"content":"                Event oldEvent \u003d new Event(data[TASK_DESCRIPTION], data[TASK_TIMING]);","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"helpdesk1234"},"content":"                if (data[TASK_STATUS].equals(\"true\")){","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"helpdesk1234"},"content":"                    oldEvent.setDone(true);","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"helpdesk1234"},"content":"                taskList.addTask(oldEvent);","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"helpdesk1234"},"content":"            case \"D\":","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"helpdesk1234"},"content":"                Deadline oldDeadline \u003d new Deadline(data[TASK_DESCRIPTION], data[TASK_TIMING]);","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"helpdesk1234"},"content":"                if (data[TASK_STATUS].equals(\"true\")){","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"helpdesk1234"},"content":"                    oldDeadline.setDone(true);","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"helpdesk1234"},"content":"                }","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"helpdesk1234"},"content":"                taskList.addTask(oldDeadline);","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"helpdesk1234"},"content":"                break;","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"helpdesk1234"},"content":"            default:","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"helpdesk1234"},"content":"        return taskList;","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"helpdesk1234"},"content":"     * Saves task list information into a file.","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"helpdesk1234"},"content":"     * @param taskList List of tasks to save.","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IOException If unable to create or modify a save file indicated at savedFilePath","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"helpdesk1234"},"content":"    public void saveData(TaskList taskList) throws IOException {","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"helpdesk1234"},"content":"        File saveFile \u003d new File(savedFilePath.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"helpdesk1234"},"content":"        FileWriter fileWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"helpdesk1234"},"content":"        for (Task task:taskList.getTaskList()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"helpdesk1234"},"content":"            String taskDetails \u003d task.getSaveString();","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"helpdesk1234"},"content":"            fileWriter.write(taskDetails);","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"helpdesk1234"},"content":"            fileWriter.write(\u0027\\n\u0027);","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"helpdesk1234"},"content":"        fileWriter.close();","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"helpdesk1234"},"content":"     * Makes data directory and duke.txt file if it does not already exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IOException If failed to create directory or text file","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"helpdesk1234"},"content":"    public void makeDirectory() throws IOException{","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"helpdesk1234"},"content":"        File dataDirectory \u003d new File(dataDirectoryPath.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"helpdesk1234"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"helpdesk1234"},"content":"            boolean isDirectoryCreated \u003d dataDirectory.mkdir();","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"helpdesk1234"},"content":"            if (isDirectoryCreated){","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"helpdesk1234"},"content":"                File saveFile \u003d new File(savedFilePath.toString());","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"helpdesk1234"},"content":"                FileWriter fileWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"helpdesk1234"},"content":"                fileWriter.close();","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"helpdesk1234"},"content":"            } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"helpdesk1234"},"content":"                throw new NotDirectoryException(CREATE_DIRECTORY_FAILED);","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"helpdesk1234":117}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":" * Class representing a Task.","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"public class Task {","lastModifiedDate":"2022-08-25"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"    /** Description of task */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"    protected String description;","lastModifiedDate":"2022-08-25"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    /** Indication of whether task is completed */","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-25"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    /** Type of task */","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    protected char taskType;","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"     * Class constructor for Task to initialise it with description passed in.","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"     * Sets task to be not done initially.","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     * @param description Description of task.","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-25"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-25"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-25"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"    public boolean isDone(){","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"        return this.isDone;","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"     * Returns X if task is marked as completed or a whitespace otherwise.","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"     * @return String indicating if task is completed.","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-25"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-08-25"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"    public void setDone(boolean status){","lastModifiedDate":"2022-09-08"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2022-08-25"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-25"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"    public char getTaskType(){","lastModifiedDate":"2022-09-03"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"        return this.taskType;","lastModifiedDate":"2022-09-03"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"     * Prints task information properly formatted.","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"    public void printTask(){","lastModifiedDate":"2022-09-03"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"        System.out.print(\"[\"+getTaskType()+\"][\"+getStatusIcon()+\"] \"+description);","lastModifiedDate":"2022-09-03"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"     * Returns a formatted string containing information of the task to be saved.","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"     * @return Formatted string","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"    public String getSaveString(){","lastModifiedDate":"2022-09-14"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"        return taskType+ \"|\" + isDone + \"|\" + description;","lastModifiedDate":"2022-09-14"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-14"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-14"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-08-25"}],"authorContributionMap":{"helpdesk1234":61}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":" * Class to handle list of tasks input by user.","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"public class TaskList {","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    protected ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e(0);","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    private final String ILLEGAL_INDEX_ERROR \u003d \":( %d is out of bounds of the task list\";","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"    private final String UPDATE_TASK_FAILURE \u003d \":( This task is already %sed\";","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    public void addTask(Task task){","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"        taskList.add(task);","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"     * Updates the task with index specified by user and according to user command.","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"     * @param index Task index.","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"     * @param userCommand Update action.","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"     * @throws IllegalInputException If task index is out of bounds or if task cannot be updated.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"    public void updateTaskStatus(int index, String userCommand) throws IllegalInputException{","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"        if (index \u003e taskList.size() || index \u003c 1){","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(String.format(ILLEGAL_INDEX_ERROR,index));","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"        index--;","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"        boolean isDone \u003d userCommand.equals(\"mark\");","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"        if (isDone \u003d\u003d task.isDone()){","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(String.format(UPDATE_TASK_FAILURE,userCommand));","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"        task.setDone(isDone);","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"    public Task deleteTask(int index) throws IllegalInputException{","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"        if (index \u003e taskList.size() || index \u003c 1){","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"            throw new IllegalInputException(String.format(ILLEGAL_INDEX_ERROR,index));","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"        index--;","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"        Task taskToDelete \u003d taskList.get(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"        taskList.remove(index);","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"        return taskToDelete;","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"    };","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"        return this.taskList;","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"     * Returns a Task created and initialised with task information.","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"     * @param details Task information.","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"     * @return Task created.","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"    public Task generateTask(String taskType, String[] details){","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"        switch (taskType){","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"helpdesk1234"},"content":"            return new ToDo(details[0]);","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"helpdesk1234"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"helpdesk1234"},"content":"            return new Deadline(details[0], details[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"helpdesk1234"},"content":"        case \"event\":","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"helpdesk1234"},"content":"            return new Event(details[0], details[1]);","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"helpdesk1234"},"content":"        default:","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"helpdesk1234"},"content":"            return null;","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"helpdesk1234"},"content":"     * Returns an ArrayList of Task consisting of search results.","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"helpdesk1234"},"content":"     * @param keyword Keyword to search for in task description.","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"helpdesk1234"},"content":"     * @return Search results.","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"helpdesk1234"},"content":"    public ArrayList\u003cTask\u003e search(String keyword){","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"helpdesk1234"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"helpdesk1234"},"content":"        for (Task task :taskList){","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"helpdesk1234"},"content":"            if (task.description.contains(keyword)){","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"helpdesk1234"},"content":"                results.add(task);","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"helpdesk1234"},"content":"        return results;","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"helpdesk1234":88}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":" * Class representing a ToDo","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-08-31"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"     * Constructor for ToDo to initialise it with description passed in.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"     * Sets the task type.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"     * @param description Description of ToDo.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    public ToDo(String description){","lastModifiedDate":"2022-08-31"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"        super(description);","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"        this.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2022-09-03"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"    @Override","lastModifiedDate":"2022-08-31"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"    public void printTask() {","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"        super.printTask();","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println();","lastModifiedDate":"2022-09-03"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"helpdesk1234":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"package duke;","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"/**","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":" * Class to handle user interface.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":" */","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"public class Ui {","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"    private final String TASK_ADDED_SUCCESSFULLY_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"    private final String NUMBER_OF_TASKS_MESSAGE \u003d \"You now have %d tasks\";","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"    private final String EMPTY_TASK_LIST_MESSAGE \u003d \"You have no tasks in your list currently!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"    private final String LISTING_TASKS_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"    private String UPDATE_TASK_SUCCESS \u003d \"Nice! I\u0027ve %sed this task:\";","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"    private final String DELETE_TASK_SUCCESS \u003d \"Nice! I\u0027ve deleted this task:\";","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"    private final String GREETING_PART_ONE \u003d \"Hello! I\u0027m Duke!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"    private final String GREETING_PART_TWO \u003d \"What can I do for you?\";","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"    private final String NO_TASK_FOUND \u003d \"No task with description containing %s is found\";","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"    private final String TASKS_FOUND \u003d \"Here are the search results for tasks with description containing %s\";","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"    private final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"     * Prints success message after adding task and the added task.","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"     * @param task Newly added task.","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"    public void printAddTaskSuccess(Task task){","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(TASK_ADDED_SUCCESSFULLY_MESSAGE);","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"helpdesk1234"},"content":"        task.printTask();","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"helpdesk1234"},"content":"     * Prints the number of tasks in taskList.","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"helpdesk1234"},"content":"     * @param numberOfTasks Number of tasks in taskList.","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"helpdesk1234"},"content":"    public void printTaskCount(int numberOfTasks){","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(String.format(NUMBER_OF_TASKS_MESSAGE, numberOfTasks));","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"helpdesk1234"},"content":"    public void printTaskListEmpty(){","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(EMPTY_TASK_LIST_MESSAGE);","lastModifiedDate":"2022-09-28"},{"lineNumber":43,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":45,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"helpdesk1234"},"content":"     * Iterates through and prints the tasks in taskList with index labels.","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":48,"author":{"gitId":"helpdesk1234"},"content":"     * @param taskList ArrayList of tasks to print.","lastModifiedDate":"2022-09-28"},{"lineNumber":49,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":50,"author":{"gitId":"helpdesk1234"},"content":"    public void printTaskListItems(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(LISTING_TASKS_MESSAGE);","lastModifiedDate":"2022-09-28"},{"lineNumber":52,"author":{"gitId":"helpdesk1234"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-09-28"},{"lineNumber":53,"author":{"gitId":"helpdesk1234"},"content":"            int listIndex \u003d i + 1;","lastModifiedDate":"2022-09-28"},{"lineNumber":54,"author":{"gitId":"helpdesk1234"},"content":"            Task taskToPrint \u003d taskList.get(i);","lastModifiedDate":"2022-09-28"},{"lineNumber":55,"author":{"gitId":"helpdesk1234"},"content":"            System.out.print(listIndex + \".\");","lastModifiedDate":"2022-09-28"},{"lineNumber":56,"author":{"gitId":"helpdesk1234"},"content":"            taskToPrint.printTask();","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"helpdesk1234"},"content":"     * Prints success message after updating task and the updated task.","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"helpdesk1234"},"content":"     * @param task Updated task.","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"helpdesk1234"},"content":"     * @param userCommand Update action.","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"helpdesk1234"},"content":"    public void printUpdateTaskSuccess(Task task, String userCommand){","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(String.format(UPDATE_TASK_SUCCESS, userCommand));","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"helpdesk1234"},"content":"        task.printTask();","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"helpdesk1234"},"content":"    public void printExceptionMessage(Exception e){","lastModifiedDate":"2022-09-28"},{"lineNumber":72,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2022-09-28"},{"lineNumber":73,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":74,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":76,"author":{"gitId":"helpdesk1234"},"content":"     * Prints success message after deleting task and the deleted task.","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":78,"author":{"gitId":"helpdesk1234"},"content":"     * @param task Deleted task.","lastModifiedDate":"2022-09-28"},{"lineNumber":79,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":80,"author":{"gitId":"helpdesk1234"},"content":"    public void printDeleteTaskSuccess(Task task){","lastModifiedDate":"2022-09-28"},{"lineNumber":81,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(String.format(DELETE_TASK_SUCCESS));","lastModifiedDate":"2022-09-28"},{"lineNumber":82,"author":{"gitId":"helpdesk1234"},"content":"        task.printTask();","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":84,"author":{"gitId":"helpdesk1234"},"content":"    public void printWelcome(){","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(GREETING_PART_ONE);","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(GREETING_PART_TWO);","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":88,"author":{"gitId":"helpdesk1234"},"content":"    public void printNewLine(){","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"helpdesk1234"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"helpdesk1234"},"content":"            System.out.print(\u0027_\u0027);","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println();","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"helpdesk1234"},"content":"    /**","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"helpdesk1234"},"content":"     * Prints the results found from taskList with task description containing keyword.","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"helpdesk1234"},"content":"     * Prints no task found if results is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"helpdesk1234"},"content":"     *","lastModifiedDate":"2022-09-28"},{"lineNumber":99,"author":{"gitId":"helpdesk1234"},"content":"     * @param results Search result.","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"helpdesk1234"},"content":"     * @param keyword Search keyword.","lastModifiedDate":"2022-09-28"},{"lineNumber":101,"author":{"gitId":"helpdesk1234"},"content":"     */","lastModifiedDate":"2022-09-28"},{"lineNumber":102,"author":{"gitId":"helpdesk1234"},"content":"    public void printSearchResults(ArrayList\u003cTask\u003e results, String keyword){","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"helpdesk1234"},"content":"        if (results.size() \u003d\u003d 0){","lastModifiedDate":"2022-09-28"},{"lineNumber":104,"author":{"gitId":"helpdesk1234"},"content":"            System.out.println(String.format(NO_TASK_FOUND, keyword));","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"helpdesk1234"},"content":"        } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"helpdesk1234"},"content":"            System.out.println(String.format(TASKS_FOUND, keyword));","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"helpdesk1234"},"content":"            for (Task task: results){","lastModifiedDate":"2022-09-28"},{"lineNumber":108,"author":{"gitId":"helpdesk1234"},"content":"                task.printTask();","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"helpdesk1234"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"helpdesk1234"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"helpdesk1234"},"content":"    public void printGoodbye(){","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"helpdesk1234"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"helpdesk1234"},"content":"    }","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"helpdesk1234"},"content":"}","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"helpdesk1234":115}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"helpdesk1234"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"helpdesk1234"},"content":"list","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"helpdesk1234"},"content":"blah","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"helpdesk1234"},"content":"todo","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"helpdesk1234"},"content":"todo return book","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"helpdesk1234"},"content":"deadline","lastModifiedDate":"2022-09-08"},{"lineNumber":7,"author":{"gitId":"helpdesk1234"},"content":"deadline return book","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"helpdesk1234"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"helpdesk1234"},"content":"deadline /by Sunday","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"event","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"helpdesk1234"},"content":"event project meeting","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"helpdesk1234"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"helpdesk1234"},"content":"event /at Monday","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"helpdesk1234"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-09-03"},{"lineNumber":15,"author":{"gitId":"helpdesk1234"},"content":"mark 2","lastModifiedDate":"2022-09-03"},{"lineNumber":16,"author":{"gitId":"helpdesk1234"},"content":"mark 2","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"helpdesk1234"},"content":"list","lastModifiedDate":"2022-09-03"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"mark 3","lastModifiedDate":"2022-09-03"},{"lineNumber":19,"author":{"gitId":"helpdesk1234"},"content":"mark 3","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"helpdesk1234"},"content":"list","lastModifiedDate":"2022-09-03"},{"lineNumber":21,"author":{"gitId":"helpdesk1234"},"content":"unmark 2","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"helpdesk1234"},"content":"unmark 2","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"helpdesk1234"},"content":"list","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"helpdesk1234"},"content":"unmark 3","lastModifiedDate":"2022-09-03"},{"lineNumber":25,"author":{"gitId":"helpdesk1234"},"content":"unmark 3","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"helpdesk1234"},"content":"list","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"helpdesk1234"},"content":"bye","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"helpdesk1234":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"helpdesk1234"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"helpdesk1234"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"helpdesk1234":2,"-":19}}]
