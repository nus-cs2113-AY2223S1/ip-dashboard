[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"Duke is a desktop app for managing a todo list, optimized for user via a Command Line Interface (CLI).","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"Table of Contents","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"2. [Features](#features) ","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"    1. [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"    2. [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"    3. [Exiting: `bye`](#exiting-bye)","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"    4. [Find task by keyword: `find`](#find-task-by-keyword-find)","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    5. [Add a ToDo: `todo`](#add-a-todo-todo)","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    6. [Add an Event: `event`](#add-an-event-event)","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    7. [Add a Deadline: `deadline`](#add-a-deadline-deadline)","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    8. [Mark a task as done: `mark`](#mark-a-task-as-done-mark)","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    9. [Unmark a task as done: `unmark`](#unmark-a-task-as-done-unmark)","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"    10. [Delete a task: `delete`](#delete-a-task-delete)","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"3. [Saving the Data](#saving-the-data)","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"4. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"6. [Command summary](#command-summary)","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"## Quick start","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"2. Download the latest duke.jar from here.","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your todo list. ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"4. Open the command line in that folder and run the command `java -jar duke.jar`.","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"5. Type the command and press Enter to execute it.","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"6. Refer to the Features below for details of each command. ","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"\u003e - Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":" e.g. in `event NAME /at DATE`, `NAME` and `DATE` are parameters which can be used as `event Christmas party /at 2022-12-25`.","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"\u003e - Extraneous parameters for commands that do not take in parameters will be ignored.","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"### Viewing help: `help`","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"Displays the list of commands available.","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"Format: `help`","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"Lists out the tasks in the task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"Format: `list`","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"### Exiting: `bye`","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"Exits the application gracefully.","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"Format: `bye`","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"### Find task by keyword: `find`","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"### Add a ToDo: `todo`","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"Format: `todo NAME`","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"### Add an Event: `event`","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"Format: `event NAME /at DATETIME`","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"### Add a Deadline: `deadline`","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"Format: `deadline NAME /by DATETIME`","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"### Mark a task as done: `mark`","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"Format: `mark INDEX`","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"### Unmark a task as done: `unmark`","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"owenl131"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"owenl131"},"content":"### Delete a task: `delete`","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"owenl131"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-09-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":86,"author":{"gitId":"owenl131"},"content":"## Saving the Data","lastModifiedDate":"2022-09-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"owenl131"},"content":"Duke data is saved to the hard disk automatically after any command that modifies the data. There is no need to save manually.","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"owenl131"},"content":"## Editing the data file","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":92,"author":{"gitId":"owenl131"},"content":"Duke data is saved as a plaintext file at `[JAR file location]/data/duke.txt`. Advanced users are welcome tp update data directly by editing that data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":94,"author":{"gitId":"owenl131"},"content":"\u003e Caution: If your changes to the data file makes it format invalid, there may be data loss.","lastModifiedDate":"2022-09-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"owenl131"},"content":"## FAQ","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"owenl131"},"content":"Q: How do I transfer my data to another computer?","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"owenl131"},"content":"A: Duke is designed for portability. Copy the JAR file and the data folder over to your other computer and you are good to go.","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"owenl131"},"content":"## Command summary","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":103,"author":{"gitId":"owenl131"},"content":"| Action | Format | Example |","lastModifiedDate":"2022-09-18"},{"lineNumber":104,"author":{"gitId":"owenl131"},"content":"|--------|--------|---------|","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"owenl131"},"content":"| View help | help | help |","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"owenl131"},"content":"| List tasks | list | list |","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"owenl131"},"content":"| Exit application | bye | bye |","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"owenl131"},"content":"| Find tasks by keyword | find KEYWORD | find project | ","lastModifiedDate":"2022-09-18"},{"lineNumber":109,"author":{"gitId":"owenl131"},"content":"| Add a Todo | todo NAME | todo Do my tP |","lastModifiedDate":"2022-09-18"},{"lineNumber":110,"author":{"gitId":"owenl131"},"content":"| Add an event | event NAME /at DATETIME | |","lastModifiedDate":"2022-09-18"},{"lineNumber":111,"author":{"gitId":"owenl131"},"content":"| Add a deadline | deadline NAME /by DATETIME | |","lastModifiedDate":"2022-09-18"},{"lineNumber":112,"author":{"gitId":"owenl131"},"content":"| Mark a task as done | mark INDEX | mark 1 |","lastModifiedDate":"2022-09-18"},{"lineNumber":113,"author":{"gitId":"owenl131"},"content":"| Unmark a task as done | unmark INDEX | unmark 1 |","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"owenl131"},"content":"| Delete a task | delete INDEX | delete 1 |","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"owenl131":90,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":" * Duke is the main class in the duke application.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"     * Sets up the application state.","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    public Duke() {","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"     * Runs the application.","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"    public void run() {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"        ui.initialize();","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        TaskList lastResults \u003d taskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"            String input \u003d ui.getInput().trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"            try {","lastModifiedDate":"2022-09-02"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"                Command command \u003d Parser.parseCommand(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"                if (command.isExit()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"                    isExit \u003d true;","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"                }","lastModifiedDate":"2022-09-02"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"                lastResults \u003d command.execute(taskList, ui, storage, lastResults);","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"                ui.displayMessage(e.getMessage());","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"        ui.cleanUp();","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"     * Main function.","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"     * @param args No command line arguments are expected.","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"owenl131":49,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":" * Exceptions for the duke application.","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"     * Creates a new exception.","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"     * @param message The message to be displayed","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"        super(message);","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * Formats the exception for display.","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-02"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    public String getMessage() {","lastModifiedDate":"2022-09-02"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"        return \"☹ OOPS!!! \" + super.getMessage();","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"owenl131":23}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import java.util.List;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"import java.util.TreeMap;","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":" * The parser handles parsing of commands.","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"public class Parser {","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"     * Parses a user input string as a command.","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"     * @param description User input string","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"     * @return The command corresponding to the user input","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the input is malformed","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"    public static Command parseCommand(String description) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"        String keyword \u003d parseKeyword(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"        switch (keyword) {","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"            return new ExitCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"        case \"list\":","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"            return new ListCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"            return new MarkCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"            return new UnmarkCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"            return new DeleteCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"        case \"event\":","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"            return new AddCommand(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"        case \"find\":","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"            return new FindCommand(description);","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"        case \"help\":","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"            return new HelpCommand(description);","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"        default:","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"I don\u0027t understand this command!\");","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"     * Extracts the command keyword from the user input.","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"     * @param description The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"     * @return The keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"    public static String parseKeyword(String description) {","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"        return description.split(\" \")[0];","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"     * Drops the command keyword from the user input string.","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"     * @param description The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"     * @return The user input string with the keyword removed","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"owenl131"},"content":"    public static String removeKeyword(String description) {","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"        int firstSpace \u003d description.indexOf(\u0027 \u0027);","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"owenl131"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"owenl131"},"content":"            return \"\";","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"owenl131"},"content":"        String withoutKeyword \u003d description.substring(firstSpace + 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":83,"author":{"gitId":"owenl131"},"content":"        return withoutKeyword;","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":87,"author":{"gitId":"owenl131"},"content":"     * Extracts the contents of the user input string that is not part of the","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"owenl131"},"content":"     * parameter list.","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"owenl131"},"content":"     * @param description The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":91,"author":{"gitId":"owenl131"},"content":"     * @return The command contents","lastModifiedDate":"2022-09-18"},{"lineNumber":92,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"owenl131"},"content":"    public static String parseName(String description) {","lastModifiedDate":"2022-09-17"},{"lineNumber":94,"author":{"gitId":"owenl131"},"content":"        String withoutKeyword \u003d removeKeyword(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":95,"author":{"gitId":"owenl131"},"content":"        int firstSlash \u003d withoutKeyword.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-17"},{"lineNumber":96,"author":{"gitId":"owenl131"},"content":"        if (firstSlash !\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":97,"author":{"gitId":"owenl131"},"content":"            String withoutParams \u003d withoutKeyword.substring(0, firstSlash - 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":98,"author":{"gitId":"owenl131"},"content":"            return withoutParams.trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":100,"author":{"gitId":"owenl131"},"content":"        return withoutKeyword.trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":101,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":103,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":104,"author":{"gitId":"owenl131"},"content":"     * Extracts the parameters in the user input.","lastModifiedDate":"2022-09-18"},{"lineNumber":105,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"owenl131"},"content":"     * @param description The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"owenl131"},"content":"     * @return A map from the parameter key to parameter value","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":109,"author":{"gitId":"owenl131"},"content":"    public static Map\u003cString, String\u003e parseParams(String description) {","lastModifiedDate":"2022-09-17"},{"lineNumber":110,"author":{"gitId":"owenl131"},"content":"        Map\u003cString, String\u003e paramsMap \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"owenl131"},"content":"        int firstSlash \u003d description.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"owenl131"},"content":"        if (firstSlash \u003d\u003d -1) {","lastModifiedDate":"2022-09-17"},{"lineNumber":113,"author":{"gitId":"owenl131"},"content":"            return paramsMap;","lastModifiedDate":"2022-09-17"},{"lineNumber":114,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":115,"author":{"gitId":"owenl131"},"content":"        String paramsString \u003d description.substring(firstSlash + 1);","lastModifiedDate":"2022-09-17"},{"lineNumber":116,"author":{"gitId":"owenl131"},"content":"        for (String param : paramsString.split(\" /\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":117,"author":{"gitId":"owenl131"},"content":"            int firstSpace \u003d param.indexOf(\u0027 \u0027);","lastModifiedDate":"2022-09-17"},{"lineNumber":118,"author":{"gitId":"owenl131"},"content":"            String key \u003d param.substring(0, firstSpace).trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":119,"author":{"gitId":"owenl131"},"content":"            String value \u003d param.substring(firstSpace + 1).trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":120,"author":{"gitId":"owenl131"},"content":"            paramsMap.put(key, value);","lastModifiedDate":"2022-09-17"},{"lineNumber":121,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":122,"author":{"gitId":"owenl131"},"content":"        return paramsMap;","lastModifiedDate":"2022-09-17"},{"lineNumber":123,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":124,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":125,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":126,"author":{"gitId":"owenl131"},"content":"     * Parses a date string to a LocalDate object. Can handle date formats such as","lastModifiedDate":"2022-09-18"},{"lineNumber":127,"author":{"gitId":"owenl131"},"content":"     * 2022-12-25, 25-12-2022, 2022/12/25, 25/12/2022, 25 dec, 25 December 2022. If","lastModifiedDate":"2022-09-18"},{"lineNumber":128,"author":{"gitId":"owenl131"},"content":"     * the year is not provided, such as 25 dec, then it defaults to the current","lastModifiedDate":"2022-09-18"},{"lineNumber":129,"author":{"gitId":"owenl131"},"content":"     * year.","lastModifiedDate":"2022-09-18"},{"lineNumber":130,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":131,"author":{"gitId":"owenl131"},"content":"     * @param input The date string to be parsed","lastModifiedDate":"2022-09-18"},{"lineNumber":132,"author":{"gitId":"owenl131"},"content":"     * @return A LocalDate object, or null if the date cannot be parsed","lastModifiedDate":"2022-09-18"},{"lineNumber":133,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":134,"author":{"gitId":"owenl131"},"content":"    public static LocalDate parseDateString(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":135,"author":{"gitId":"owenl131"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":136,"author":{"gitId":"owenl131"},"content":"            for (String part : input.split(\" \")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":137,"author":{"gitId":"owenl131"},"content":"                LocalDate attempt \u003d parseDateString(part); // attempt to process recursively","lastModifiedDate":"2022-09-17"},{"lineNumber":138,"author":{"gitId":"owenl131"},"content":"                if (attempt !\u003d null) {","lastModifiedDate":"2022-09-17"},{"lineNumber":139,"author":{"gitId":"owenl131"},"content":"                    return attempt;","lastModifiedDate":"2022-09-17"},{"lineNumber":140,"author":{"gitId":"owenl131"},"content":"                }","lastModifiedDate":"2022-09-17"},{"lineNumber":141,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":142,"author":{"gitId":"owenl131"},"content":"        } else if (input.contains(\"-\") || input.contains(\"/\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":143,"author":{"gitId":"owenl131"},"content":"            String[] components \u003d input.split(\"[-/]\");","lastModifiedDate":"2022-09-17"},{"lineNumber":144,"author":{"gitId":"owenl131"},"content":"            if (components.length !\u003d 3) {","lastModifiedDate":"2022-09-17"},{"lineNumber":145,"author":{"gitId":"owenl131"},"content":"                return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":146,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":147,"author":{"gitId":"owenl131"},"content":"            boolean yearFirst \u003d components[0].length() \u003d\u003d 4;","lastModifiedDate":"2022-09-17"},{"lineNumber":148,"author":{"gitId":"owenl131"},"content":"            int year \u003d Integer.parseInt(yearFirst ? components[0] : components[2]);","lastModifiedDate":"2022-09-17"},{"lineNumber":149,"author":{"gitId":"owenl131"},"content":"            int month \u003d Integer.parseInt(components[1]);","lastModifiedDate":"2022-09-17"},{"lineNumber":150,"author":{"gitId":"owenl131"},"content":"            int day \u003d Integer.parseInt(yearFirst ? components[2] : components[0]);","lastModifiedDate":"2022-09-17"},{"lineNumber":151,"author":{"gitId":"owenl131"},"content":"            return LocalDate.of(year, month, day);","lastModifiedDate":"2022-09-17"},{"lineNumber":152,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":153,"author":{"gitId":"owenl131"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":154,"author":{"gitId":"owenl131"},"content":"            Pattern yearPattern \u003d Pattern.compile(\"\\\\b(2\\\\d{3})\\\\b\"); // four digit number starting with 2","lastModifiedDate":"2022-09-17"},{"lineNumber":155,"author":{"gitId":"owenl131"},"content":"            Matcher yearMatcher \u003d yearPattern.matcher(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":156,"author":{"gitId":"owenl131"},"content":"            // default to current year","lastModifiedDate":"2022-09-17"},{"lineNumber":157,"author":{"gitId":"owenl131"},"content":"            int year \u003d yearMatcher.find() ? Integer.parseInt(yearMatcher.group()) : LocalDate.now().getYear();","lastModifiedDate":"2022-09-17"},{"lineNumber":158,"author":{"gitId":"owenl131"},"content":"            List\u003cString\u003e months \u003d List.of(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\",","lastModifiedDate":"2022-09-17"},{"lineNumber":159,"author":{"gitId":"owenl131"},"content":"                    \"dec\");","lastModifiedDate":"2022-09-17"},{"lineNumber":160,"author":{"gitId":"owenl131"},"content":"            Pattern monthPattern \u003d Pattern.compile(\"(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\");","lastModifiedDate":"2022-09-17"},{"lineNumber":161,"author":{"gitId":"owenl131"},"content":"            Matcher monthMatcher \u003d monthPattern.matcher(input.toLowerCase());","lastModifiedDate":"2022-09-17"},{"lineNumber":162,"author":{"gitId":"owenl131"},"content":"            if (!monthMatcher.find()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":163,"author":{"gitId":"owenl131"},"content":"                return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":164,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":165,"author":{"gitId":"owenl131"},"content":"            int month \u003d months.indexOf(monthMatcher.group()) + 1;","lastModifiedDate":"2022-09-17"},{"lineNumber":166,"author":{"gitId":"owenl131"},"content":"            Pattern dayPattern \u003d Pattern.compile(\"\\\\b(\\\\d{1,2})\\\\b\");","lastModifiedDate":"2022-09-17"},{"lineNumber":167,"author":{"gitId":"owenl131"},"content":"            Matcher dayMatcher \u003d dayPattern.matcher(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":168,"author":{"gitId":"owenl131"},"content":"            if (!dayMatcher.find()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":169,"author":{"gitId":"owenl131"},"content":"                return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":170,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":171,"author":{"gitId":"owenl131"},"content":"            int day \u003d Integer.parseInt(dayMatcher.group());","lastModifiedDate":"2022-09-17"},{"lineNumber":172,"author":{"gitId":"owenl131"},"content":"            return LocalDate.of(year, month, day);","lastModifiedDate":"2022-09-17"},{"lineNumber":173,"author":{"gitId":"owenl131"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":174,"author":{"gitId":"owenl131"},"content":"            return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":175,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":176,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":177,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":178,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":179,"author":{"gitId":"owenl131"},"content":"     * Parses a date time string to a LocalTime object. The time string must contain","lastModifiedDate":"2022-09-18"},{"lineNumber":180,"author":{"gitId":"owenl131"},"content":"     * a \u0027:\u0027 between the hours and minutes and can optionally specify am/pm/AM/PM.","lastModifiedDate":"2022-09-18"},{"lineNumber":181,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":182,"author":{"gitId":"owenl131"},"content":"     * @param input The time string to be parsed","lastModifiedDate":"2022-09-18"},{"lineNumber":183,"author":{"gitId":"owenl131"},"content":"     * @return A LocalTime object or null if the time string cannot be parsed","lastModifiedDate":"2022-09-18"},{"lineNumber":184,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":185,"author":{"gitId":"owenl131"},"content":"    public static LocalTime parseTimeString(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":186,"author":{"gitId":"owenl131"},"content":"        input \u003d input.trim();","lastModifiedDate":"2022-09-17"},{"lineNumber":187,"author":{"gitId":"owenl131"},"content":"        // if input contains spaces, then it may contain both a","lastModifiedDate":"2022-09-17"},{"lineNumber":188,"author":{"gitId":"owenl131"},"content":"        // date component and time component","lastModifiedDate":"2022-09-17"},{"lineNumber":189,"author":{"gitId":"owenl131"},"content":"        // attempt to parse each component and take the one that succeeds","lastModifiedDate":"2022-09-17"},{"lineNumber":190,"author":{"gitId":"owenl131"},"content":"        if (input.contains(\" \")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":191,"author":{"gitId":"owenl131"},"content":"            for (String part : input.split(\" \")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":192,"author":{"gitId":"owenl131"},"content":"                LocalTime attempt \u003d parseTimeString(part);","lastModifiedDate":"2022-09-17"},{"lineNumber":193,"author":{"gitId":"owenl131"},"content":"                if (attempt !\u003d null) {","lastModifiedDate":"2022-09-17"},{"lineNumber":194,"author":{"gitId":"owenl131"},"content":"                    return attempt;","lastModifiedDate":"2022-09-17"},{"lineNumber":195,"author":{"gitId":"owenl131"},"content":"                }","lastModifiedDate":"2022-09-17"},{"lineNumber":196,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":197,"author":{"gitId":"owenl131"},"content":"            return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":198,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":199,"author":{"gitId":"owenl131"},"content":"        // assume that the time must be formatted as HH:MM(AM|PM)?","lastModifiedDate":"2022-09-17"},{"lineNumber":200,"author":{"gitId":"owenl131"},"content":"        if (!input.contains(\":\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":201,"author":{"gitId":"owenl131"},"content":"            return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":202,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":203,"author":{"gitId":"owenl131"},"content":"        String suffix \u003d \"\";","lastModifiedDate":"2022-09-17"},{"lineNumber":204,"author":{"gitId":"owenl131"},"content":"        input \u003d input.toUpperCase();","lastModifiedDate":"2022-09-17"},{"lineNumber":205,"author":{"gitId":"owenl131"},"content":"        if (input.endsWith(\"PM\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":206,"author":{"gitId":"owenl131"},"content":"            suffix \u003d \"PM\";","lastModifiedDate":"2022-09-17"},{"lineNumber":207,"author":{"gitId":"owenl131"},"content":"            input \u003d input.replace(\"PM\", \"\");","lastModifiedDate":"2022-09-17"},{"lineNumber":208,"author":{"gitId":"owenl131"},"content":"        } else if (input.endsWith(\"AM\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":209,"author":{"gitId":"owenl131"},"content":"            suffix \u003d \"AM\";","lastModifiedDate":"2022-09-17"},{"lineNumber":210,"author":{"gitId":"owenl131"},"content":"            input \u003d input.replace(\"AM\", \"\");","lastModifiedDate":"2022-09-17"},{"lineNumber":211,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":212,"author":{"gitId":"owenl131"},"content":"        try {","lastModifiedDate":"2022-09-17"},{"lineNumber":213,"author":{"gitId":"owenl131"},"content":"            String[] components \u003d input.split(\":\");","lastModifiedDate":"2022-09-17"},{"lineNumber":214,"author":{"gitId":"owenl131"},"content":"            int hours \u003d Integer.parseInt(components[0]);","lastModifiedDate":"2022-09-17"},{"lineNumber":215,"author":{"gitId":"owenl131"},"content":"            int minutes \u003d Integer.parseInt(components[1]);","lastModifiedDate":"2022-09-17"},{"lineNumber":216,"author":{"gitId":"owenl131"},"content":"            if (suffix.equals(\"PM\")) {","lastModifiedDate":"2022-09-17"},{"lineNumber":217,"author":{"gitId":"owenl131"},"content":"                hours +\u003d 12;","lastModifiedDate":"2022-09-17"},{"lineNumber":218,"author":{"gitId":"owenl131"},"content":"            } else if (suffix.equals(\"AM\") \u0026\u0026 hours \u003d\u003d 12) {","lastModifiedDate":"2022-09-17"},{"lineNumber":219,"author":{"gitId":"owenl131"},"content":"                hours -\u003d 12;","lastModifiedDate":"2022-09-17"},{"lineNumber":220,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":221,"author":{"gitId":"owenl131"},"content":"            return LocalTime.of(hours, minutes);","lastModifiedDate":"2022-09-17"},{"lineNumber":222,"author":{"gitId":"owenl131"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":223,"author":{"gitId":"owenl131"},"content":"            return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":224,"author":{"gitId":"owenl131"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2022-09-17"},{"lineNumber":225,"author":{"gitId":"owenl131"},"content":"            return null;","lastModifiedDate":"2022-09-17"},{"lineNumber":226,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":227,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":228,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":228}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.io.File;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"import java.util.List;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"import duke.task.TaskFactory;","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":" * The Storage class is responsible for saving and loading data from the data","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":" * file. The default path for the data file is ./data/duke.txt","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"public class Storage {","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"    public static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * Reads a list of tasks from the default data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    public static List\u003cTask\u003e readDataFile() {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"        return readDataFile(FILE_PATH);","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * Reads a list of tasks from the specified data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     * @param path Path to the data file","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"     * @return A list of tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"    public static List\u003cTask\u003e readDataFile(String path) {","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"            Scanner scanner \u003d new Scanner(new FileInputStream(path));","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"                try {","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"                    tasks.add(TaskFactory.createTask(scanner.nextLine()));","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"                    // skip corrupted entries","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"            // empty list","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"        return tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"     * Writes a list of tasks to the default data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"     * @param tasks The list of tasks to be written","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the file cannot be written to","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"    public static void writeDataFile(List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"        writeDataFile(tasks, FILE_PATH);","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"     * Writes a list of tasks to the specified data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"     * @param tasks The list of tasks to be written","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"     * @param path  The path of the file to write to","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the file cannot be written to","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"    public static void writeDataFile(List\u003cTask\u003e tasks, String path) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"            File dataFile \u003d new File(path);","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"            if (!dataFile.getParentFile().exists()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"                dataFile.getParentFile().mkdirs();","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"            FileWriter writer \u003d new FileWriter(dataFile);","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"owenl131"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2022-09-09"},{"lineNumber":80,"author":{"gitId":"owenl131"},"content":"                writer.append(task.serialize());","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"owenl131"},"content":"                writer.append(\"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"owenl131"},"content":"            writer.close();","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"owenl131"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Data file cannot be written to.\");","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"owenl131":88}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.util.List;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" * The TaskList class handles operations on the list of tasks.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"public class TaskList {","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    List\u003cTask\u003e items;","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * Creates a tasklist from the default data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"        this(Storage.readDataFile());","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"     * Creates a tasklist from a list of tasks.","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     * @param items List of tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    public TaskList(List\u003cTask\u003e items) {","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        this.items \u003d new ArrayList\u003c\u003e(items);","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"     * Number of tasks in the task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * @return The number of tasks","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"    public int size() {","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"        return items.size();","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"     * Gets an item from the task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"     * @param index The index (1-indexed) of the item.","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"     * @return The task at the given index.","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if there is no task at the given","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"     *                       index.","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"    public Task getItem(int index) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"        if (index \u003c 1 || index \u003e items.size()) {","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Task at index \" + index + \" does not exist!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"        return items.get(index - 1);","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"     * @param item The task to be added","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if it fails to write the data to","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"     *                       the data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"    public void addItem(Task item) throws DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"        items.add(item);","lastModifiedDate":"2022-09-02"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"        Storage.writeDataFile(items);","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"     * @param task The task to be removed","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if it fails to write the data to","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"     *                       the data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"    public void deleteItem(Task task) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"        items.remove(task);","lastModifiedDate":"2022-09-18"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"        Storage.writeDataFile(items);","lastModifiedDate":"2022-09-18"},{"lineNumber":77,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":79,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"owenl131"},"content":"     * Marks a task as done.","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":82,"author":{"gitId":"owenl131"},"content":"     * @param task The task to be marked","lastModifiedDate":"2022-09-18"},{"lineNumber":83,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if it fails to write the data to","lastModifiedDate":"2022-09-18"},{"lineNumber":84,"author":{"gitId":"owenl131"},"content":"     *                       the data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":85,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":86,"author":{"gitId":"owenl131"},"content":"    public void markDone(Task task) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":87,"author":{"gitId":"owenl131"},"content":"        int index \u003d items.indexOf(task);","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"owenl131"},"content":"        items.get(index).markDone();","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"owenl131"},"content":"        Storage.writeDataFile(items);","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":91,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":93,"author":{"gitId":"owenl131"},"content":"     * Marks a task as undone.","lastModifiedDate":"2022-09-18"},{"lineNumber":94,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":95,"author":{"gitId":"owenl131"},"content":"     * @param task The task to be marked undone","lastModifiedDate":"2022-09-18"},{"lineNumber":96,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if it fails to write the data to","lastModifiedDate":"2022-09-18"},{"lineNumber":97,"author":{"gitId":"owenl131"},"content":"     *                       the data file.","lastModifiedDate":"2022-09-18"},{"lineNumber":98,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"owenl131"},"content":"    public void markUndone(Task task) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"owenl131"},"content":"        int index \u003d items.indexOf(task);","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"owenl131"},"content":"        items.get(index).markUndone();","lastModifiedDate":"2022-09-18"},{"lineNumber":102,"author":{"gitId":"owenl131"},"content":"        Storage.writeDataFile(items);","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":105,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":106,"author":{"gitId":"owenl131"},"content":"     * Finds all tasks matching the given keyword and returns them in a task list.","lastModifiedDate":"2022-09-18"},{"lineNumber":107,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":108,"author":{"gitId":"owenl131"},"content":"     * @param keyword Keyword to use for the search","lastModifiedDate":"2022-09-18"},{"lineNumber":109,"author":{"gitId":"owenl131"},"content":"     * @return A new TaskList containing the tasks matching the keyword","lastModifiedDate":"2022-09-18"},{"lineNumber":110,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":111,"author":{"gitId":"owenl131"},"content":"    public TaskList filter(String keyword) {","lastModifiedDate":"2022-09-18"},{"lineNumber":112,"author":{"gitId":"owenl131"},"content":"        final String searchKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2022-09-18"},{"lineNumber":113,"author":{"gitId":"owenl131"},"content":"        List\u003cTask\u003e filteredItems \u003d items.stream().filter(item -\u003e item.getName().toLowerCase().contains(searchKeyword))","lastModifiedDate":"2022-09-18"},{"lineNumber":114,"author":{"gitId":"owenl131"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-18"},{"lineNumber":115,"author":{"gitId":"owenl131"},"content":"        return new TaskList(filteredItems);","lastModifiedDate":"2022-09-18"},{"lineNumber":116,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":117,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":118,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":119,"author":{"gitId":"owenl131"},"content":"     * Formats the TaskList to be displayed.","lastModifiedDate":"2022-09-18"},{"lineNumber":120,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":121,"author":{"gitId":"owenl131"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"owenl131"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"owenl131"},"content":"        sb.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":124,"author":{"gitId":"owenl131"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"owenl131"},"content":"            sb.append(String.format(\"%d.%s\\n\", i + 1, items.get(i)));","lastModifiedDate":"2022-08-26"},{"lineNumber":126,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"owenl131"},"content":"        return sb.toString();","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"owenl131":129}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":" * The Ui class handles reading input and displaying output.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"public class Ui {","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"    private static final String HORIZONTAL_RULE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"    private static final String DUKE_LOGO \u003d String.join(\"\\n\", \" ____        _        \", \"|  _ \\\\ _   _| | _____ \",","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"            \"| | | | | | | |/ / _ \\\\\", \"| |_| | |_| |   \u003c  __/\", \"|____/ \\\\__,_|_|\\\\_\\\\___|\", \"\");","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    private static final String[] GREETING \u003d { \"Hello! I\u0027m Duke\", \"What can I do for you?\" };","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    private final Scanner scanner;","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * Initializes the Ui object.","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    public Ui() {","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     * Displays the results of a command, indented.","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"     * @param lines The results to be shown.","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    public void displayMessage(String[] lines) {","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        System.out.println(INDENT + HORIZONTAL_RULE);","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"        for (String line : lines) {","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"            System.out.println(INDENT + \" \" + line);","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"        System.out.println(INDENT + HORIZONTAL_RULE);","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"     * Displays the results of a command, indented.","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"     * @param line The results to be shown.","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"    public void displayMessage(String line) {","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"        displayMessage(line.split(\"\\n\"));","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"     * Displays the greeting message, to be called when the application starts.","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"    public void initialize() {","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"        System.out.println(DUKE_LOGO);","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"        displayMessage(GREETING);","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"     * Reads a line of input from the user.","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"     * @return A line of user input","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"    public String getInput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"        return scanner.nextLine();","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"     * Displays the exit message, to be called right before the application exits.","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"    public void cleanUp() {","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"        displayMessage(EXIT_MESSAGE);","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"        scanner.close();","lastModifiedDate":"2022-09-17"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":70}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import duke.task.TaskFactory;","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":" * Command to add a new task.","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    private final Task task;","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * Creates an Add command.","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the user input format is invalid","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    public AddCommand(String input) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"        task \u003d TaskFactory.createTask(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"        taskList.addItem(task);","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(\"added: \" + task);","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"        return taskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Represents an operation to be executed by duke.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"    private String input;","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     * Creates the command.","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * @param input The user input","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    Command(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * Gets the user input for this command.","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     * @return The user input","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    public String getInput() {","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"        return input;","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * Executes the command, updating the state variables provided.","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     * @param taskList    The list of tasks in the application","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"     * @param ui          The ui manager","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"     * @param storage     The storage manager","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"     * @param lastResults The previous list of tasks displayed","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"     * @return The list of tasks obtained from execution of this command","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if execution fails","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"    public abstract TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults)","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"            throws DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"     * Returns whether this command is a command to exit the application.","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"     * @return True if the command is an exit command and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":51}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" * Command to remove a task from the list.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    private final int index;","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * Creates a Delete command.","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"        index \u003d Integer.parseInt(input.substring(\"delete\".length()).trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"        Task toDelete \u003d lastResults.getItem(index);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"        taskList.deleteItem(toDelete);","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(String.format(\"OK, I\u0027ve deleted %s\\n\\n%s\", toDelete, taskList.toString()));","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"        return taskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Command to exit the application","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"     * Creates an exit command","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"        return true;","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"        return taskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" * Command to filter tasks in the list.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    private String searchKeyword;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * Creates a Find command.","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"        searchKeyword \u003d Parser.removeKeyword(input);","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        TaskList filtered \u003d taskList.filter(searchKeyword);","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"            ui.displayMessage(\"No tasks matched your search keyword: \" + searchKeyword);","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"            return lastResults;","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"        } else {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"            ui.displayMessage(\"Result of search for: \" + searchKeyword + \"\\n\\n\" + filtered.toString());","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"            return filtered;","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"owenl131":43}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.util.List;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":" * Command to list out commands available.","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    private static final String HELP_INTRO \u003d \"Duke - CLI based Task list manager\";","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    private static final List\u003cString\u003e COMMAND_INFO \u003d List.of(\"bye - exits the application\",","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"            \"list - list out all your tasks\", \"todo NAME - adds a todo task\",","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"            \"deadline NAME /by DATE_TIME - adds a deadline task\", \"event NAME /at DATE_TIME - adds an event task\",","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"            \"delete INDEX - deletes a task\", \"mark INDEX - marks a task as done\",","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"            \"unmark INDEX - marks a task as undone\", \"find KEYWORD - finds a task by name\");","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    private static final String USER_GUIDE_URL \u003d \"Full guide at https://owenl131.github.io/ip\";","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     * Creates a Help command.","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    public HelpCommand(String input) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(HELP_INTRO + \"\\n\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"                + String.join(\"\\n\", COMMAND_INFO.stream().map(s -\u003e \"\u003e \" + s).collect(Collectors.toList())) + \"\\n\\n\"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"                + USER_GUIDE_URL);","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"        return taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"owenl131":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Command to list out tasks.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"     * Creates a List command.","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(taskList.toString());","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"        return taskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Command to mark a task as done","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    private final int index;","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * Creates a Mark command","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"        index \u003d Integer.parseInt(input.substring(\"mark\".length()).trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"        taskList.markDone(lastResults.getItem(index));","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(String.format(\"Nice! I\u0027ve marked this task as done:\\n %s\", taskList.getItem(index)));","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"        return lastResults;","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":37}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.command;","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import duke.Storage;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.TaskList;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Command to mark a task as undone.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"    private final int index;","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     * Creates an Unmark command.","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * @param input The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"        super(input);","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"        index \u003d Integer.parseInt(input.substring(\"unmark\".length()).trim());","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"        return false;","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    public TaskList execute(TaskList taskList, Ui ui, Storage storage, TaskList lastResults) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"        taskList.markUndone(lastResults.getItem(index));","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"        ui.displayMessage(String.format(\"OK, I\u0027ve marked this task as not done yet:\\n %s\", taskList.getItem(index)));","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"        return lastResults;","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"owenl131":36}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":" * A DeadlineTask represents a task with a deadline.","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    private final String deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    private final Optional\u003cLocalDate\u003e deadlineDate;","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    private final Optional\u003cLocalTime\u003e deadlineTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     * Creates a new DeadlineTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"     * @param name     Name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"     * @param deadline Deadline of the task as a date string","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if either name or deadline is not","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     *                       provided","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"    public DeadlineTask(String name, String deadline) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        this(name, deadline, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"     * Creates a new DeadlineTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * @param name     Name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     * @param deadline Deadline of the task as a date string","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"     * @param status   True if the task is done and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if either name or deadline is not","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"     *                       provided","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"    public DeadlineTask(String name, String deadline, boolean status) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"        super(name, status);","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"        if (\"\".equals(name)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Deadline name cannot be empty\");","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Please provide a deadline (/by)\");","lastModifiedDate":"2022-09-02"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-26"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"        this.deadlineDate \u003d Optional.ofNullable(Parser.parseDateString(deadline));","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"        this.deadlineTime \u003d Optional.ofNullable(Parser.parseTimeString(deadline));","lastModifiedDate":"2022-09-17"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"     * Formats a deadline task as a string to be displayed.","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"        if (deadlineDate.isPresent()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"            dateString \u003d deadlineDate.get().format(DateTimeFormatter.ofPattern(\"E, dd MMM yyyy\"));","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"            if (deadlineTime.isPresent()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"                dateString +\u003d \", \" + deadlineTime.get().toString();","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"            dateString \u003d deadline;","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), dateString);","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"     * Formats a deadline task to be saved to a file.","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"    public String serialize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"        return String.format(\"deadline %s /by %s /done %s\", getName(), deadline, isDone());","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"owenl131":78}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":" * An EventTask represents an task that happens at a certain time.","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"public class EventTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    private String eventDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"    private Optional\u003cLocalDate\u003e eventDate;","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    private Optional\u003cLocalTime\u003e eventTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     * Creates a new EventTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"     * @param name          The name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"     * @param eventDateTime Date and time of the event as a string","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the name or date is not provided","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    public EventTask(String name, String eventDateTime) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"        this(name, eventDateTime, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"     * Creates a new EventTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"     * @param name          The name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * @param eventDateTime Date and time of the event as a string","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     * @param status        True if the task is done and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the name or date is not provided","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"    public EventTask(String name, String eventDateTime, boolean status) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"        super(name, status);","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"        if (\"\".equals(name)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Event name cannot be empty\");","lastModifiedDate":"2022-09-02"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"        if (eventDateTime \u003d\u003d null) {","lastModifiedDate":"2022-09-02"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Please provide a date and time (/at)\");","lastModifiedDate":"2022-09-02"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2022-08-26"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"        this.eventDate \u003d Optional.ofNullable(Parser.parseDateString(eventDateTime));","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"        this.eventTime \u003d Optional.ofNullable(Parser.parseTimeString(eventDateTime));","lastModifiedDate":"2022-09-17"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"     * Formats an event task as a string to be displayed.","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"        String dateString \u003d \"\";","lastModifiedDate":"2022-09-17"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"        if (eventDate.isPresent()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"            dateString \u003d eventDate.get().format(DateTimeFormatter.ofPattern(\"E, dd MMM yyyy\"));","lastModifiedDate":"2022-09-17"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"            if (eventTime.isPresent()) {","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"                dateString +\u003d \", \" + eventTime.get().toString();","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"            }","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"        } else {","lastModifiedDate":"2022-09-17"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"            dateString \u003d eventDateTime;","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-17"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), dateString);","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"     * Formats an event task to be saved to a file.","lastModifiedDate":"2022-09-18"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"    public String serialize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"        return String.format(\"event %s /at %s /done %s\", getName(), eventDateTime, isDone());","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"owenl131":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":" * Abstract task class.","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"    private String name;","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"    private boolean status;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"     * Initializes a blank task.","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    public Task() {","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"        this(\"\");","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * Initializes a task with a name.","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     * @param name Name","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"    public Task(String name) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"        this(name, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"     * Initializes a task with a name and doneness status.","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"     * @param name   Name","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"     * @param status True if task is done and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"    public Task(String name, boolean status) {","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-19"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"        this.status \u003d status;","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"     * Formats a task as a string to be saved to a data file. The serialized task","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"     * should be unserialized by the TaskFactory.","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"     * @return Serialized task","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"    public abstract String serialize();","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"     * Formats a task as a string to be displayed to the user.","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":49,"author":{"gitId":"owenl131"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":50,"author":{"gitId":"owenl131"},"content":"        return String.format(\"[%s] %s\", this.isDone() ? \"X\" : \" \", this.getName());","lastModifiedDate":"2022-08-26"},{"lineNumber":51,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":52,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":53,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"owenl131"},"content":"     * Gets the name of the task.","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"owenl131"},"content":"     * @return Name","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"owenl131"},"content":"    public String getName() {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"owenl131"},"content":"        return name;","lastModifiedDate":"2022-08-19"},{"lineNumber":60,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"owenl131"},"content":"     * Gets whether task is done.","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"owenl131"},"content":"     * @return True if the task is done and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"owenl131"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"owenl131"},"content":"        return status;","lastModifiedDate":"2022-08-19"},{"lineNumber":69,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"owenl131"},"content":"     * Marks the task as done.","lastModifiedDate":"2022-09-18"},{"lineNumber":73,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"owenl131"},"content":"    public void markDone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"owenl131"},"content":"        this.status \u003d true;","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":78,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":79,"author":{"gitId":"owenl131"},"content":"     * Marks the task as undone.","lastModifiedDate":"2022-09-18"},{"lineNumber":80,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":81,"author":{"gitId":"owenl131"},"content":"    public void markUndone() {","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"owenl131"},"content":"        this.status \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"owenl131":84}},{"path":"src/main/java/duke/task/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import java.util.Map;","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"import duke.Parser;","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":" * Instantiates tasks from input strings.","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"public class TaskFactory {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"     * Instantiates todo tasks, deadline tasks and event tasks from input strings.","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"     * @param description The user input string","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"     * @return The task created","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if the task does not match any","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"     *                       valid format","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"    public static Task createTask(String description) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"        String keyword \u003d Parser.parseKeyword(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"        String name \u003d Parser.parseName(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"        Map\u003cString, String\u003e params \u003d Parser.parseParams(description);","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"        switch (keyword) {","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"        case \"deadline\":","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"            return new DeadlineTask(name, params.get(\"by\"), Boolean.parseBoolean(params.getOrDefault(\"done\", \"false\")));","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        case \"event\":","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"            return new EventTask(name, params.get(\"at\"), Boolean.parseBoolean(params.getOrDefault(\"done\", \"false\")));","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        case \"todo\":","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"            return new TodoTask(name, Boolean.parseBoolean(params.getOrDefault(\"done\", \"false\")));","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"        default:","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-02"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"owenl131":36}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"import duke.DukeException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"/**","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":" * A TodoTask represents a simple task to be done.","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":" */","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"     * Creates a new TodoTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"     * @param name Name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if name is not provided","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"    public TodoTask(String name) throws DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"        this(name, false);","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"owenl131"},"content":"     * Creates a new TodoTask object.","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"     * ","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"owenl131"},"content":"     * @param name   Name of the task","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"owenl131"},"content":"     * @param status True if the task is done and false otherwise","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"owenl131"},"content":"     * @throws DukeException Throws an exception if name is not provided","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"owenl131"},"content":"    public TodoTask(String name, boolean status) throws DukeException {","lastModifiedDate":"2022-09-17"},{"lineNumber":27,"author":{"gitId":"owenl131"},"content":"        super(name, status);","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"        if (\"\".equals(name)) {","lastModifiedDate":"2022-09-02"},{"lineNumber":29,"author":{"gitId":"owenl131"},"content":"            throw new DukeException(\"Todo name cannot be empty\");","lastModifiedDate":"2022-09-02"},{"lineNumber":30,"author":{"gitId":"owenl131"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":31,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"owenl131"},"content":"     * Formats a todo task as a string to be displayed.","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":37,"author":{"gitId":"owenl131"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":38,"author":{"gitId":"owenl131"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":39,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":40,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"owenl131"},"content":"    /**","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"owenl131"},"content":"     * Formats a todo task to be saved to a file.","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"owenl131"},"content":"     */","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"owenl131"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"owenl131"},"content":"    public String serialize() {","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"owenl131"},"content":"        return String.format(\"todo %s /done %s\", getName(), isDone());","lastModifiedDate":"2022-09-17"},{"lineNumber":47,"author":{"gitId":"owenl131"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"owenl131"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"owenl131":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"owenl131"},"content":"todo borrow book","lastModifiedDate":"2022-08-26"},{"lineNumber":2,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":3,"author":{"gitId":"owenl131"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-26"},{"lineNumber":4,"author":{"gitId":"owenl131"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-26"},{"lineNumber":5,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":6,"author":{"gitId":"owenl131"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"owenl131"},"content":"mark 2","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"owenl131"},"content":"unmark 2","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"owenl131"},"content":"todo","lastModifiedDate":"2022-09-02"},{"lineNumber":13,"author":{"gitId":"owenl131"},"content":"deadline","lastModifiedDate":"2022-09-02"},{"lineNumber":14,"author":{"gitId":"owenl131"},"content":"event Name provided but not date","lastModifiedDate":"2022-09-02"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-09-02"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"find project","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"event christmas party /at 2022-12-25 2:00pm","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"list","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"bye","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"owenl131":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"owenl131"},"content":"if [ -e \"./data\" ]","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"owenl131"},"content":"then ","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"owenl131"},"content":"    rm -r data","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"owenl131"},"content":"fi","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"owenl131"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"owenl131"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/**/*.java","lastModifiedDate":"2022-09-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"owenl131"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"owenl131":7,"-":36}}]
