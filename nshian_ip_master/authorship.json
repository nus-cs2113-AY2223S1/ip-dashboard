[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"\u003clink rel\u003d\"stylesheet\" href\u003d\"styles.css\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"Axel is a **Command Line Application for managing tasks, optimised for use via the command-line interface (CLI)**.","lastModifiedDate":"2022-09-17"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"## Table of contents","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"* [Getting started](#getting-started)","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"* [Axel\u0027s features](#axels-features)","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"    * [Adding a task](#adding-a-task)","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"        * [Todo: `todo`](#todo-todo)","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"        * [Deadline: `deadline`](#deadline-deadline)","lastModifiedDate":"2022-09-17"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"        * [Event: `event`](#event-event)","lastModifiedDate":"2022-09-17"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"    * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2022-09-17"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"    * [Marking a task as done: `mark`](#marking-a-task-as-done-mark)","lastModifiedDate":"2022-09-17"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"    * [Marking a task as undone: `unmark`](#marking-a-task-as-undone-unmark)","lastModifiedDate":"2022-09-17"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"    * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2022-09-17"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"    * [Finding matching tasks by keyword: `find`](#finding-matching-tasks-by-keyword-find)","lastModifiedDate":"2022-09-17"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    * [Closing the application: `bye`](#closing-the-application-bye)","lastModifiedDate":"2022-09-17"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"    * [Saving your lists of tasks](#saving-your-list-of-tasks)","lastModifiedDate":"2022-09-17"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"    * [Editing your data](#editing-your-data)","lastModifiedDate":"2022-09-17"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"* [Table of valid user commands](#table-of-valid-user-commands)","lastModifiedDate":"2022-09-17"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"* [FAQ](#faq)","lastModifiedDate":"2022-09-17"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"## Getting started","lastModifiedDate":"2022-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"1. Please ensure that you have **Java 11 or above** set up in your computer.","lastModifiedDate":"2022-09-17"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"2. Download the latest version of the application `iP.jar` [here](https://github.com/nshian/ip/releases).","lastModifiedDate":"2022-09-17"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"3. Copy the file to the folder you have designated as the **default folder** for Axel.","lastModifiedDate":"2022-09-17"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"4. Open a terminal and type `java -jar iP.jar`.","lastModifiedDate":"2022-09-17"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"5. If the program is initialised and runs successfully, you will be greeted by Axel as per the following:","lastModifiedDate":"2022-09-17"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"    ```","lastModifiedDate":"2022-09-17"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"            _____                .__","lastModifiedDate":"2022-09-17"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"           /  _  \\ ___  ___ ____ |  |","lastModifiedDate":"2022-09-17"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"          /  /_\\  \\\\  \\/  // __ \\|  |","lastModifiedDate":"2022-09-17"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"         /    |    \\\u003e    \u003c\\  ___/|  |__","lastModifiedDate":"2022-09-17"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"         \\____|__  /__/\\_ \\\\___  \u003e____/","lastModifiedDate":"2022-09-17"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"        __________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"         Hello! My name is Axel. :-)","lastModifiedDate":"2022-09-17"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"         How may I help you today?","lastModifiedDate":"2022-09-17"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"        __________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"    ```","lastModifiedDate":"2022-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"6. Begin by entering a command below the greeting and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it. Here is an example you can try:","lastModifiedDate":"2022-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"    * `bye`: Terminates the program and closes the application.","lastModifiedDate":"2022-09-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"7. Refer to [Axel\u0027s features](#axels-features) below for further details of valid commands to enter.","lastModifiedDate":"2022-09-17"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"8. Enjoy using Axel for your task management needs :D","lastModifiedDate":"2022-09-17"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"## Axel\u0027s features","lastModifiedDate":"2022-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"nshian"},"content":"\u003cdiv class\u003d\"notes box\" markdown\u003d\"1\"\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"nshian"},"content":"**Take note:**","lastModifiedDate":"2022-09-17"},{"lineNumber":60,"author":{"gitId":"nshian"},"content":"* All commands you enter are case-sensitive. For instance, `Todo` is **NOT** equivalent to `todo`.","lastModifiedDate":"2022-09-17"},{"lineNumber":61,"author":{"gitId":"nshian"},"content":"* Words in `UPPER CASE` are parameters. For instance, `todo READ BOOK`.","lastModifiedDate":"2022-09-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"nshian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"nshian"},"content":"### Adding a task","lastModifiedDate":"2022-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"nshian"},"content":"* ### Todo: `todo`","lastModifiedDate":"2022-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"nshian"},"content":"  **Explanation**: A todo is a type of task that only contains a description and does not have a time-related attribute associated with it.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":70,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e **Function**: Adds a todo to your current list of tasks.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":71,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":72,"author":{"gitId":"nshian"},"content":"  **Usage**: `todo DESCRIPTION`","lastModifiedDate":"2022-09-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":74,"author":{"gitId":"nshian"},"content":"  **Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":75,"author":{"gitId":"nshian"},"content":"  ```","lastModifiedDate":"2022-09-17"},{"lineNumber":76,"author":{"gitId":"nshian"},"content":"  todo return book","lastModifiedDate":"2022-09-17"},{"lineNumber":77,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":78,"author":{"gitId":"nshian"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-17"},{"lineNumber":79,"author":{"gitId":"nshian"},"content":"    [T][ ] return book","lastModifiedDate":"2022-09-17"},{"lineNumber":80,"author":{"gitId":"nshian"},"content":"  Now you have 1 task(s) in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":81,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  ```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":84,"author":{"gitId":"nshian"},"content":"* ### Deadline: `deadline`","lastModifiedDate":"2022-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":86,"author":{"gitId":"nshian"},"content":"  **Explanation**: A deadline is a type of task that contains a description along with an associated deadline that indicates when the task should be completed.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":87,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e **Function**: Adds a deadline to your current list of tasks.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":88,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":89,"author":{"gitId":"nshian"},"content":"  **Usage**: `deadline DESCRIPTION /by DEADLINE`","lastModifiedDate":"2022-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":91,"author":{"gitId":"nshian"},"content":"  **Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":92,"author":{"gitId":"nshian"},"content":"  ```","lastModifiedDate":"2022-09-17"},{"lineNumber":93,"author":{"gitId":"nshian"},"content":"  deadline CS3243 Project /by Week 6 Sunday","lastModifiedDate":"2022-09-17"},{"lineNumber":94,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":95,"author":{"gitId":"nshian"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-17"},{"lineNumber":96,"author":{"gitId":"nshian"},"content":"    [D][ ] CS3243 Project (by: Week 6 Sunday)","lastModifiedDate":"2022-09-17"},{"lineNumber":97,"author":{"gitId":"nshian"},"content":"  Now you have 2 task(s) in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":98,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":99,"author":{"gitId":"nshian"},"content":"  ```","lastModifiedDate":"2022-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":101,"author":{"gitId":"nshian"},"content":"* ### Event: `event`","lastModifiedDate":"2022-09-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":103,"author":{"gitId":"nshian"},"content":"  **Explanation**: An event is a type of task that contains a description along with an associated timestamp of when the event takes place.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":104,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e **Function**: Adds an event to your current list of tasks.\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":105,"author":{"gitId":"nshian"},"content":"  \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":106,"author":{"gitId":"nshian"},"content":"  **Usage**: `event DESCRIPTION /at DAY_AND_TIME`","lastModifiedDate":"2022-09-17"},{"lineNumber":107,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":108,"author":{"gitId":"nshian"},"content":"  **Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":109,"author":{"gitId":"nshian"},"content":"  ```","lastModifiedDate":"2022-09-17"},{"lineNumber":110,"author":{"gitId":"nshian"},"content":"  event CS2113 project meeting /at 17 Sep 2022","lastModifiedDate":"2022-09-17"},{"lineNumber":111,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":112,"author":{"gitId":"nshian"},"content":"  Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-17"},{"lineNumber":113,"author":{"gitId":"nshian"},"content":"    [E][ ] CS2113 project meeting (at: 17 Sep 2022)","lastModifiedDate":"2022-09-17"},{"lineNumber":114,"author":{"gitId":"nshian"},"content":"  Now you have 3 task(s) in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":115,"author":{"gitId":"nshian"},"content":"  ________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":116,"author":{"gitId":"nshian"},"content":"  ```","lastModifiedDate":"2022-09-17"},{"lineNumber":117,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":118,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":119,"author":{"gitId":"nshian"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":120,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":121,"author":{"gitId":"nshian"},"content":"**Usage**: `list`","lastModifiedDate":"2022-09-17"},{"lineNumber":122,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":123,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"nshian"},"content":"list","lastModifiedDate":"2022-09-17"},{"lineNumber":126,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":127,"author":{"gitId":"nshian"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-17"},{"lineNumber":128,"author":{"gitId":"nshian"},"content":"1.[T][ ] return book","lastModifiedDate":"2022-09-17"},{"lineNumber":129,"author":{"gitId":"nshian"},"content":"2.[D][ ] CS3243 Project (by: Monday 2359hrs)","lastModifiedDate":"2022-09-17"},{"lineNumber":130,"author":{"gitId":"nshian"},"content":"3.[E][ ] CS2113 project meeting (at: 17 Sep 2022)","lastModifiedDate":"2022-09-17"},{"lineNumber":131,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":133,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":134,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":135,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":136,"author":{"gitId":"nshian"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2022-09-17"},{"lineNumber":137,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":138,"author":{"gitId":"nshian"},"content":"**Usage**: `mark TASK_NUMBER`","lastModifiedDate":"2022-09-17"},{"lineNumber":139,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":140,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":141,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":142,"author":{"gitId":"nshian"},"content":"mark 2","lastModifiedDate":"2022-09-17"},{"lineNumber":143,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":144,"author":{"gitId":"nshian"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-17"},{"lineNumber":145,"author":{"gitId":"nshian"},"content":"[D][X] CS3243 Project (by: Monday 2359hrs)","lastModifiedDate":"2022-09-17"},{"lineNumber":146,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":147,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":148,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":149,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":150,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":151,"author":{"gitId":"nshian"},"content":"### Marking a task as undone: `unmark`","lastModifiedDate":"2022-09-17"},{"lineNumber":152,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":153,"author":{"gitId":"nshian"},"content":"**Usage**: `unmark TASK_NUMBER` \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":154,"author":{"gitId":"nshian"},"content":"This function comes in handy when rectifying a mistake in accidentally marking a task as done even though it has not been completed yet. ","lastModifiedDate":"2022-09-17"},{"lineNumber":155,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":156,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":157,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":158,"author":{"gitId":"nshian"},"content":"unmark 2","lastModifiedDate":"2022-09-17"},{"lineNumber":159,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":160,"author":{"gitId":"nshian"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-17"},{"lineNumber":161,"author":{"gitId":"nshian"},"content":"[D][] CS3243 Project (by: Monday 2359hrs)","lastModifiedDate":"2022-09-17"},{"lineNumber":162,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":163,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":164,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":165,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":166,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":167,"author":{"gitId":"nshian"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2022-09-17"},{"lineNumber":168,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":169,"author":{"gitId":"nshian"},"content":"**Usage**: `delete TASK_NUMBER`","lastModifiedDate":"2022-09-17"},{"lineNumber":170,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":171,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":172,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":173,"author":{"gitId":"nshian"},"content":"delete 1","lastModifiedDate":"2022-09-17"},{"lineNumber":174,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":175,"author":{"gitId":"nshian"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-17"},{"lineNumber":176,"author":{"gitId":"nshian"},"content":"  [T][ ] return book","lastModifiedDate":"2022-09-17"},{"lineNumber":177,"author":{"gitId":"nshian"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2022-09-17"},{"lineNumber":178,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":179,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":180,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":181,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":182,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":183,"author":{"gitId":"nshian"},"content":"### Finding matching tasks by keyword: `find`","lastModifiedDate":"2022-09-17"},{"lineNumber":184,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":185,"author":{"gitId":"nshian"},"content":"**Usage**: `find KEYWORD`","lastModifiedDate":"2022-09-17"},{"lineNumber":186,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":187,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":189,"author":{"gitId":"nshian"},"content":"find project","lastModifiedDate":"2022-09-17"},{"lineNumber":190,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":191,"author":{"gitId":"nshian"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2022-09-17"},{"lineNumber":192,"author":{"gitId":"nshian"},"content":"1.[D][X] CS3243 Project (by: Monday 2359hrs)","lastModifiedDate":"2022-09-17"},{"lineNumber":193,"author":{"gitId":"nshian"},"content":"2.[E][ ] CS2113 project meeting (at: 17 Sep 2022)","lastModifiedDate":"2022-09-17"},{"lineNumber":194,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":195,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":196,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":197,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":198,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":199,"author":{"gitId":"nshian"},"content":"### Closing the application: `bye`","lastModifiedDate":"2022-09-17"},{"lineNumber":200,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":201,"author":{"gitId":"nshian"},"content":"**Usage**: `bye`","lastModifiedDate":"2022-09-17"},{"lineNumber":202,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":203,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":204,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":205,"author":{"gitId":"nshian"},"content":"bye","lastModifiedDate":"2022-09-17"},{"lineNumber":206,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":207,"author":{"gitId":"nshian"},"content":"Goodbye. Hope to see you again soon!","lastModifiedDate":"2022-09-17"},{"lineNumber":208,"author":{"gitId":"nshian"},"content":"________________________________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":209,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":210,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":211,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":212,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":213,"author":{"gitId":"nshian"},"content":"### Saving your list of tasks","lastModifiedDate":"2022-09-17"},{"lineNumber":214,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":215,"author":{"gitId":"nshian"},"content":"Your data is automatically saved in your local hard disk after every command you enter. You do not need to save manually :-)","lastModifiedDate":"2022-09-17"},{"lineNumber":216,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":217,"author":{"gitId":"nshian"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":218,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":219,"author":{"gitId":"nshian"},"content":"### Editing your data","lastModifiedDate":"2022-09-17"},{"lineNumber":220,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":221,"author":{"gitId":"nshian"},"content":"Your data is saved as a `txt` file located at `[JAR folder]/data/duke.txt`.","lastModifiedDate":"2022-09-17"},{"lineNumber":222,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":223,"author":{"gitId":"nshian"},"content":"The format of your tasks saved in that file is as follows: `TYPE | STATUS | DESCRIPTION | TIMESTAMP`","lastModifiedDate":"2022-09-17"},{"lineNumber":224,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":225,"author":{"gitId":"nshian"},"content":"* `TYPE` refers to the type of task. It will take on the value of `T` for `Todo`, `D` for `Deadline`, or `E` for `Event`.","lastModifiedDate":"2022-09-17"},{"lineNumber":226,"author":{"gitId":"nshian"},"content":"* `STATUS` refers to whether you have completed the task. It will take on the value of either `0` (not done) or `1` (done).","lastModifiedDate":"2022-09-17"},{"lineNumber":227,"author":{"gitId":"nshian"},"content":"* `DESCRIPTION` refers to the task\u0027s description.","lastModifiedDate":"2022-09-17"},{"lineNumber":228,"author":{"gitId":"nshian"},"content":"* `TIMESTAMP` refers to the time-related attribute associated with the task. This would be the deadline for `Deadline` or day and time for`Event`.","lastModifiedDate":"2022-09-17"},{"lineNumber":229,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":230,"author":{"gitId":"nshian"},"content":"**Example**:","lastModifiedDate":"2022-09-17"},{"lineNumber":231,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":232,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":233,"author":{"gitId":"nshian"},"content":"T | 0 | return book","lastModifiedDate":"2022-09-17"},{"lineNumber":234,"author":{"gitId":"nshian"},"content":"D | 1 | CS3243 Project | Monday 2359hrs","lastModifiedDate":"2022-09-17"},{"lineNumber":235,"author":{"gitId":"nshian"},"content":"E | 0 | CS2113 project meeting | 17 Sep 2022","lastModifiedDate":"2022-09-17"},{"lineNumber":236,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":237,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":238,"author":{"gitId":"nshian"},"content":"## Table of valid user commands","lastModifiedDate":"2022-09-17"},{"lineNumber":239,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":240,"author":{"gitId":"nshian"},"content":"| Command    | Format                               | Example                                        |","lastModifiedDate":"2022-09-17"},{"lineNumber":241,"author":{"gitId":"nshian"},"content":"|:-----------|:-------------------------------------|:-----------------------------------------------|","lastModifiedDate":"2022-09-17"},{"lineNumber":242,"author":{"gitId":"nshian"},"content":"| `todo`     | `todo DESCRIPTION`                   | `todo return book`                             |","lastModifiedDate":"2022-09-17"},{"lineNumber":243,"author":{"gitId":"nshian"},"content":"| `deadline` | `deadline DESCRIPTION /by DEADLINE`  | `deadline CS3243 Project /by Monday 2359hrs`   |","lastModifiedDate":"2022-09-17"},{"lineNumber":244,"author":{"gitId":"nshian"},"content":"| `event`    | `event DESCRIPTION /at DAY_AND_TIME` | `event CS2113 project meeting /at 17 Sep 2022` |","lastModifiedDate":"2022-09-17"},{"lineNumber":245,"author":{"gitId":"nshian"},"content":"| `list`     | `list`                               | `list`                                         |","lastModifiedDate":"2022-09-17"},{"lineNumber":246,"author":{"gitId":"nshian"},"content":"| `mark`     | `mark TASK_NUMBER`                   | `mark 1`                                       |","lastModifiedDate":"2022-09-17"},{"lineNumber":247,"author":{"gitId":"nshian"},"content":"| `unmark`   | `unmark TASK_NUMBER`                 | `unmark 1`                                     |","lastModifiedDate":"2022-09-17"},{"lineNumber":248,"author":{"gitId":"nshian"},"content":"| `delete`   | `delete TASK_NUMBER`                 | `delete 1`                                     |","lastModifiedDate":"2022-09-17"},{"lineNumber":249,"author":{"gitId":"nshian"},"content":"| `find`     | `find KEYWORD`                       | `find project`                                 |","lastModifiedDate":"2022-09-17"},{"lineNumber":250,"author":{"gitId":"nshian"},"content":"| `bye`      | `bye`                                | `bye`                                          |","lastModifiedDate":"2022-09-17"},{"lineNumber":251,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":252,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":253,"author":{"gitId":"nshian"},"content":"## FAQ","lastModifiedDate":"2022-09-17"},{"lineNumber":254,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":255,"author":{"gitId":"nshian"},"content":"**Q**: Must I enter the user command exactly as specified? \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":256,"author":{"gitId":"nshian"},"content":"**A**: Yes, otherwise Axel will not be able to recognise the command you entered. \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":257,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":258,"author":{"gitId":"nshian"},"content":"**Q**: What happens if I make a typo in the type of command? \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":259,"author":{"gitId":"nshian"},"content":"**A**: Axel will show you the following error:","lastModifiedDate":"2022-09-17"},{"lineNumber":260,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":261,"author":{"gitId":"nshian"},"content":"lis","lastModifiedDate":"2022-09-17"},{"lineNumber":262,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":263,"author":{"gitId":"nshian"},"content":"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(","lastModifiedDate":"2022-09-17"},{"lineNumber":264,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":265,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":266,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":267,"author":{"gitId":"nshian"},"content":"But fret not, you can still continue to enter commands :-) \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":268,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":269,"author":{"gitId":"nshian"},"content":"**Q**: I accidentally tried to mark/unmark or delete a task I have not included. Will the program crash? \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":270,"author":{"gitId":"nshian"},"content":"**A**: No. Axel will show you the following error(s):","lastModifiedDate":"2022-09-17"},{"lineNumber":271,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":272,"author":{"gitId":"nshian"},"content":"mark 1","lastModifiedDate":"2022-09-17"},{"lineNumber":273,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":274,"author":{"gitId":"nshian"},"content":"     ☹ OOPS!!! The task you specified is already marked!","lastModifiedDate":"2022-09-17"},{"lineNumber":275,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":276,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":277,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":278,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":279,"author":{"gitId":"nshian"},"content":"delete 3","lastModifiedDate":"2022-09-17"},{"lineNumber":280,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":281,"author":{"gitId":"nshian"},"content":"     ☹ OOPS!!! The task you have specified is out of bounds :-(","lastModifiedDate":"2022-09-17"},{"lineNumber":282,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":283,"author":{"gitId":"nshian"},"content":"You currently have 1 task(s) in your list.","lastModifiedDate":"2022-09-17"},{"lineNumber":284,"author":{"gitId":"nshian"},"content":"    ____________________________________________________________","lastModifiedDate":"2022-09-17"},{"lineNumber":285,"author":{"gitId":"nshian"},"content":"```","lastModifiedDate":"2022-09-17"},{"lineNumber":286,"author":{"gitId":"nshian"},"content":"Notice that the bottom-most line gives you information on the number of tasks in your list. Following this, you can then enter a valid task number :-) \u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":287,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-17"},{"lineNumber":288,"author":{"gitId":"nshian"},"content":"**Q:** I bought a new computer. How do I transfer my data over?\u003cbr\u003e","lastModifiedDate":"2022-09-17"},{"lineNumber":289,"author":{"gitId":"nshian"},"content":"**A:** On your other computer, download the latest version of the application `iP.jar` which can be found [here](https://github.com/nshian/ip/releases).","lastModifiedDate":"2022-09-17"},{"lineNumber":290,"author":{"gitId":"nshian"},"content":"Install and set up the application as per the instructions in the [Getting started](#getting-started) section above.","lastModifiedDate":"2022-09-17"},{"lineNumber":291,"author":{"gitId":"nshian"},"content":"You can then overwrite the empty text file that Axel creates with your original file (from your previous default folder) that contains your previously saved list of tasks.\u003cbr\u003e","lastModifiedDate":"2022-09-17"}],"authorContributionMap":{"nshian":267,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":" * Represents the main program. It contains an instance of the Storage class to load data from the user\u0027s disk","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":" * and save data to the user\u0027s disk according to the changes made. It also contains an instance of the TaskList class to function","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":" * as a task manager for the user. The instantiation of the Ui class is to facilitate user interaction.","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"    private TaskList taskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-18"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"     * Constructs an instance of the Duke class. The instance will contain an Ui object for interaction with the user","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"     * and a Storage object to load previously saved data and save new changes made to the data on the user\u0027s local disk.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"    public Duke() {","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"        try {","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"            taskList \u003d storage.loadFile();","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"     * Serves as the backbone of the entire program, reading in user commands through the Ui object instantiated","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"     * earlier in the Duke constructor and instantiating a Parser object to interpret and execute user commands.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"     * The function terminates when an exit signal is indicated by the user.","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"    public void run() {","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"        ui.greetUser();","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"        Parser parser \u003d new Parser(ui);","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"        boolean isProgramFinished \u003d false; //variable to indicate if the program should be terminated","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"        while(!isProgramFinished) {","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"            String command \u003d ui.getUserCommand();","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"            parser.parse(command, taskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"            isProgramFinished \u003d parser.getTerminationStatus();","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-18"},{"lineNumber":48,"author":{"gitId":"nshian"},"content":"        ui.sayByeToUser();","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-18"},{"lineNumber":50,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"     * Represents the entry point to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"nshian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"        new Duke().run();","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nshian":54,"-":3}},{"path":"src/main/java/duke/exceptions/AccessTaskOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class AccessTaskOutOfBoundsException extends DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-08-31"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/MissingTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class MissingTaskNumberException extends DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/TaskAlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class TaskAlreadyMarkedException extends DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/TaskAlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class TaskAlreadyUnmarkedException extends DukeException {","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"//no need for code","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"public class UnknownCommandException extends DukeException{","lastModifiedDate":"2022-08-31"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-31"}],"authorContributionMap":{"nshian":4}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.parser;","lastModifiedDate":"2022-09-16"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"import duke.exceptions.AccessTaskOutOfBoundsException;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"import duke.exceptions.MissingTaskNumberException;","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":" * Represents an entity to handle and interpret user commands in order to execute the corresponding methods to reflect the program\u0027s intended behaviour.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"public class Parser {","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"    private Ui ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    private boolean isProgramFinished;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"     * Resolves the user command to interpret its type and executes the relevant operations to modify the user\u0027s list of tasks according to the type.","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"     * @param command The full line of input that the user provided to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"     * @param taskList The task manager handling the user\u0027s current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"    public void handleInput(String command, TaskList taskList) {","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"        String[] text \u003d command.split(\" \");","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"        String type \u003d text[0];","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"        if (type.equals(\"mark\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"                taskList.handleMarkAsDone(command);","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"            } catch (MissingTaskNumberException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"                ui.printMissingTaskNumberError();","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"        } else if (type.equals(\"unmark\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"                taskList.handleMarkAsUndone(command);","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"            } catch (MissingTaskNumberException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"                ui.printMissingTaskNumberError();","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"        } else if (type.equals(\"delete\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"nshian"},"content":"                taskList.deleteTask(type, command);","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"            } catch (AccessTaskOutOfBoundsException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"nshian"},"content":"                ui.printAccessTaskOutOfBoundsError();","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"                ui.printNumberOfTasks(taskList.getTasksCount());","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"            } catch (MissingTaskNumberException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"                ui.printMissingTaskNumberError();","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"        } else if (type.equals(\"find\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"nshian"},"content":"            String keyword \u003d text[1];","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"nshian"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"nshian"},"content":"            for(Task task : taskList.getTasks()) {","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"nshian"},"content":"                if(task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"nshian"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"nshian"},"content":"                }","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"nshian"},"content":"            TaskList matchingTaskList \u003d new TaskList(matchingTasks, matchingTasks.size());","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"nshian"},"content":"            ui.printMatchingTasks(matchingTaskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"nshian"},"content":"                taskList.addTask(type, command);","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"nshian"},"content":"            } catch (EmptyDescriptionException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"nshian"},"content":"                ui.printEmptyDescriptionError();","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"nshian"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"nshian"},"content":"                ui.printUnknownCommandError();","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"nshian"},"content":"        try {","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"nshian"},"content":"            Storage.saveFile(taskList.getTasks());","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"nshian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"nshian"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"nshian"},"content":"     * Detects if the user has indicated to terminate the program or print their current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"nshian"},"content":"     * If other types of user commands were given, the user command is resolved further and executed thereafter.","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"nshian"},"content":"     * @param command The full line of input that the user provided to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"nshian"},"content":"     * @param taskList The task manager handling the user\u0027s current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"nshian"},"content":"    public void parse(String command, TaskList taskList) {","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"nshian"},"content":"        if(command.equals(\"bye\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"nshian"},"content":"            this.isProgramFinished \u003d true;","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"nshian"},"content":"        } else if(command.equals(\"list\")) {","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"nshian"},"content":"            ui.printTasks(taskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"nshian"},"content":"            handleInput(command, taskList);","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"nshian"},"content":"    public boolean getTerminationStatus() {","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"nshian"},"content":"        return this.isProgramFinished;","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-16"}],"authorContributionMap":{"nshian":101}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.storage;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"import java.io.File;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"import duke.task.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":" * Class for loading previously saved user data from the local disk (if any) and saving all new modifications made to that data.","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"public class Storage {","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"    private String file_directory;","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    private static String file_path;","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"    private static int tasksCount \u003d 0;","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"     * Constructs an instance of the Storage class. It holds a pre-determined file directory","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"     * and file path to retrieve data from and send data to.","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"    public Storage() {","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"        this.file_directory \u003d \"./data\";","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"        this.file_path \u003d \"./data/duke.txt\";","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"    public static int getTasksCount() {","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"        return tasksCount;","lastModifiedDate":"2022-09-09"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"     * Reads each task stored in the user\u0027s local disk and processes it to correctly set its type and done status.","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"     * The tasks read are then organised and assembled into an ArrayList for further downstream usage.","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"     * @param fileScanner Instance of the Scanner class responsible for reading the user\u0027s saved tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"     * @return An ArrayList of the tasks retrieved from the user\u0027s local disk.","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"    public static ArrayList\u003cTask\u003e assembleTasks(Scanner fileScanner) {","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"            String[] text \u003d fileScanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-09-09"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"            Task curr \u003d new Task(\"\");","lastModifiedDate":"2022-09-09"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"            String type \u003d text[0];","lastModifiedDate":"2022-09-09"},{"lineNumber":48,"author":{"gitId":"nshian"},"content":"            if (type.equals(\"T\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"                curr \u003d new Todo(text[2]);","lastModifiedDate":"2022-09-09"},{"lineNumber":50,"author":{"gitId":"nshian"},"content":"                if (text[1].equals(\"1\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"                    curr.markTaskAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"            } else if (type.equals(\"D\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":54,"author":{"gitId":"nshian"},"content":"                curr \u003d new Deadline(text[2], text[3]);","lastModifiedDate":"2022-09-09"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"                if (text[1].equals(\"1\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":56,"author":{"gitId":"nshian"},"content":"                    curr.markTaskAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":57,"author":{"gitId":"nshian"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":58,"author":{"gitId":"nshian"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":59,"author":{"gitId":"nshian"},"content":"                curr \u003d new Event(text[2], text[3]);","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"nshian"},"content":"                if (text[1].equals(\"1\")) {","lastModifiedDate":"2022-09-09"},{"lineNumber":61,"author":{"gitId":"nshian"},"content":"                    curr.markTaskAsDone();","lastModifiedDate":"2022-09-09"},{"lineNumber":62,"author":{"gitId":"nshian"},"content":"                }","lastModifiedDate":"2022-09-09"},{"lineNumber":63,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":64,"author":{"gitId":"nshian"},"content":"            tasks.add(curr);","lastModifiedDate":"2022-09-09"},{"lineNumber":65,"author":{"gitId":"nshian"},"content":"            tasksCount++;","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":67,"author":{"gitId":"nshian"},"content":"        return tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":68,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":69,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":70,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"nshian"},"content":"     * Loads the user\u0027s saved task list from the file directory and path as defined in the constructor.","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"nshian"},"content":"     * If the file directory cannot be found, a directory with the corresponding name is created.","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"nshian"},"content":"     * If the file cannot be found, a file with the corresponding name is created.","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"nshian"},"content":"     * @return The task manager constructed from the user\u0027s saved tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"nshian"},"content":"     * @throws IOException If an I/O error occurred in creating a new file or the source file could not be found.","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"nshian"},"content":"    public TaskList loadFile() throws IOException {","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"nshian"},"content":"        File directory \u003d new File(file_directory);","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"nshian"},"content":"        if(!directory.exists()){","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"nshian"},"content":"            directory.mkdir();","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":83,"author":{"gitId":"nshian"},"content":"        File file \u003d new File(file_path);","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"nshian"},"content":"        if(!file.exists()) {","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"nshian"},"content":"            file.createNewFile();","lastModifiedDate":"2022-09-09"},{"lineNumber":86,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":87,"author":{"gitId":"nshian"},"content":"        Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2022-09-09"},{"lineNumber":88,"author":{"gitId":"nshian"},"content":"        ArrayList\u003cTask\u003e tasks \u003d  assembleTasks(fileScanner);","lastModifiedDate":"2022-09-09"},{"lineNumber":89,"author":{"gitId":"nshian"},"content":"        int tasksCount \u003d getTasksCount();","lastModifiedDate":"2022-09-09"},{"lineNumber":90,"author":{"gitId":"nshian"},"content":"        return new TaskList(tasks, tasksCount);","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":92,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":93,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":94,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"nshian"},"content":"     * Saves the user\u0027s current list of tasks to the local disk in order for it to be updated with the latest changes.","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"nshian"},"content":"     * @param tasks The ArrayList containerisation of the tasks in the user\u0027s current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"nshian"},"content":"     * @throws IOException If an I/O error occurred in opening or writing to the file.","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"nshian"},"content":"    public static void saveFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2022-09-09"},{"lineNumber":101,"author":{"gitId":"nshian"},"content":"        FileWriter fw \u003d new FileWriter(file_path);","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"nshian"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2022-09-09"},{"lineNumber":103,"author":{"gitId":"nshian"},"content":"            fw.write(tasks.get(i).formattedInformation() + \"\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":104,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":105,"author":{"gitId":"nshian"},"content":"        fw.close();","lastModifiedDate":"2022-09-09"},{"lineNumber":106,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":107,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"nshian":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":" * Represents a task with a deadline that the user wishes to complete.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"    private String deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"     * Processes a task\u0027s attributes to produce a string that encapsulates the task information which includes its type, done status and description.","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"     * @return A well-formatted string containing the task information.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"    public String formattedInformation() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"        String information \u003d \"D\" + divider + (isDone ? \"1\" : \"0\") + divider + this.description + divider + this.deadline;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"        return information;","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nshian":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":" * Represents an event that the user wishes to take note of.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"    private String dayAndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"    public Event(String description, String dayAndTime) {","lastModifiedDate":"2022-08-31"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"        this.dayAndTime \u003d dayAndTime;","lastModifiedDate":"2022-08-31"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dayAndTime + \")\";","lastModifiedDate":"2022-08-31"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"     * Processes a task\u0027s attributes to produce a string that encapsulates the task information which includes its type, done status and description.","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"     * @return A well-formatted string containing the task information.","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"    public String formattedInformation() {","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"        String information \u003d \"E\" + divider + (isDone ? \"1\" : \"0\") + divider + this.description + divider + this.dayAndTime;","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"        return information;","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nshian":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":" * Represents a general task under no specific category that the user wishes to take note of in their list.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"public class Task {","lastModifiedDate":"2022-08-20"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"    protected String description;","lastModifiedDate":"2022-08-20"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-08-20"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"     * Constructs an instance of the Task class to contain a task description and to track whether the task has been done by the user or not.","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-20"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"     * Checks a task\u0027s done status and returns a corresponding string to reflect the status.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"     * @return \"X\" if task has been done or a whitespace character if it is not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-20"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"        return (isDone ? \"X\" : \" \"); // mark task done with X","lastModifiedDate":"2022-08-27"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"     * Overrides the Object class\u0027s toString method to return a more informative string that better reflects the user\u0027s task.","lastModifiedDate":"2022-09-16"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"     * @return A formatted string of the task\u0027s description and done status.","lastModifiedDate":"2022-09-16"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-08-26"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"    public String toString(){","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-08-26"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"    public String formattedInformation() { //dummy function for overriding by subclasses","lastModifiedDate":"2022-09-09"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"        return \"\";","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"        return this.description;","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"nshian":47}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"import duke.exceptions.AccessTaskOutOfBoundsException;","lastModifiedDate":"2022-09-02"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"import duke.exceptions.EmptyDescriptionException;","lastModifiedDate":"2022-09-02"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2022-09-02"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"import duke.exceptions.MissingTaskNumberException;","lastModifiedDate":"2022-09-02"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"import duke.exceptions.TaskAlreadyMarkedException;","lastModifiedDate":"2022-09-02"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"import duke.exceptions.TaskAlreadyUnmarkedException;","lastModifiedDate":"2022-09-02"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-09"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":" * Represents a task manager to encapsulate the user\u0027s list of tasks and execute operations that retrieve,","lastModifiedDate":"2022-09-16"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"public class TaskList {","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"    private int tasksCount \u003d 0;","lastModifiedDate":"2022-08-20"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, int tasksCount) {","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"        this.tasksCount \u003d tasksCount;","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"        return this.tasks;","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"    public int getTasksCount() {","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"        return this.tasksCount;","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"     * Assembles individual words of the task\u0027s description into a combined string","lastModifiedDate":"2022-09-16"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"     * @param text The array of individual words that make up the full description of the task being handled.","lastModifiedDate":"2022-09-16"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"     * @return One combined string containing the full description of the task.","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"    public String assembleTaskDescription(String[] text) {","lastModifiedDate":"2022-08-31"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"        String description \u003d text[1]; //initialise with first word of task","lastModifiedDate":"2022-08-31"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"        for (int i \u003d 2; i \u003c text.length; i++) { //start loop from second word of task","lastModifiedDate":"2022-08-31"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"            description \u003d description + \" \" + text[i];","lastModifiedDate":"2022-08-31"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"        return description;","lastModifiedDate":"2022-08-31"},{"lineNumber":48,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-31"},{"lineNumber":50,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"     * Processes user commands concerning tasks that have a time-related attribute. Creates new Deadline or Event","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"     * types of tasks by extracting their description and time-related attribute ie deadline for Deadline","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"     * and dayAndTime for Event. The newly created task is then added to the user\u0027s list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"     * @param type The type of task being handled by the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"nshian"},"content":"     * @param description The full description of the task being handled.","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"nshian"},"content":"    public void handleTaskWithTime(String type, String description) {","lastModifiedDate":"2022-08-27"},{"lineNumber":60,"author":{"gitId":"nshian"},"content":"        String[] text \u003d description.split(\" \");","lastModifiedDate":"2022-08-26"},{"lineNumber":61,"author":{"gitId":"nshian"},"content":"        String task \u003d text[0]; //initialise with first word of task","lastModifiedDate":"2022-08-27"},{"lineNumber":62,"author":{"gitId":"nshian"},"content":"        int indexOfTime \u003d 0;","lastModifiedDate":"2022-08-26"},{"lineNumber":63,"author":{"gitId":"nshian"},"content":"        for (int i \u003d 1; i \u003c text.length; i++) { //start loop from second word of task","lastModifiedDate":"2022-08-27"},{"lineNumber":64,"author":{"gitId":"nshian"},"content":"            if (text[i].contains(\"/\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":65,"author":{"gitId":"nshian"},"content":"                indexOfTime \u003d i;","lastModifiedDate":"2022-08-26"},{"lineNumber":66,"author":{"gitId":"nshian"},"content":"                break;","lastModifiedDate":"2022-08-26"},{"lineNumber":67,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-08-26"},{"lineNumber":68,"author":{"gitId":"nshian"},"content":"            task \u003d task + \" \" + text[i];","lastModifiedDate":"2022-08-26"},{"lineNumber":69,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":70,"author":{"gitId":"nshian"},"content":"        indexOfTime++;","lastModifiedDate":"2022-08-26"},{"lineNumber":71,"author":{"gitId":"nshian"},"content":"        String time \u003d \"\";","lastModifiedDate":"2022-08-26"},{"lineNumber":72,"author":{"gitId":"nshian"},"content":"        for (int i \u003d indexOfTime; i \u003c text.length; i++) {","lastModifiedDate":"2022-08-26"},{"lineNumber":73,"author":{"gitId":"nshian"},"content":"            if (i \u003c text.length-1) { //if it is the last word","lastModifiedDate":"2022-09-09"},{"lineNumber":74,"author":{"gitId":"nshian"},"content":"                time \u003d time + text[i] + \" \";","lastModifiedDate":"2022-09-09"},{"lineNumber":75,"author":{"gitId":"nshian"},"content":"            } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":76,"author":{"gitId":"nshian"},"content":"                time +\u003d text[i];","lastModifiedDate":"2022-09-09"},{"lineNumber":77,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":78,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":79,"author":{"gitId":"nshian"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2022-08-26"},{"lineNumber":80,"author":{"gitId":"nshian"},"content":"            Task newTask \u003d new Deadline(task, time);","lastModifiedDate":"2022-09-09"},{"lineNumber":81,"author":{"gitId":"nshian"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":82,"author":{"gitId":"nshian"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2022-08-31"},{"lineNumber":83,"author":{"gitId":"nshian"},"content":"            Task newTask \u003d new Event(task, time);","lastModifiedDate":"2022-09-09"},{"lineNumber":84,"author":{"gitId":"nshian"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":85,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-26"},{"lineNumber":86,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":87,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":88,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"nshian"},"content":"     * Processes user commands concerning tasks, irrespective of whether they have a time-related attribute.","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"nshian"},"content":"     * After processing, the task is created and added to the user\u0027s list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"nshian"},"content":"     * @param type The type of task being handled by the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"nshian"},"content":"     * @param description The full description of the task being handled.","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"nshian"},"content":"    public void handleTask(String type, String description) {","lastModifiedDate":"2022-08-31"},{"lineNumber":96,"author":{"gitId":"nshian"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2022-08-27"},{"lineNumber":97,"author":{"gitId":"nshian"},"content":"            Task newTask \u003d new Todo(description);","lastModifiedDate":"2022-09-09"},{"lineNumber":98,"author":{"gitId":"nshian"},"content":"            tasks.add(newTask);","lastModifiedDate":"2022-09-09"},{"lineNumber":99,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":100,"author":{"gitId":"nshian"},"content":"            this.handleTaskWithTime(type, description);","lastModifiedDate":"2022-08-27"},{"lineNumber":101,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":102,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"nshian"},"content":"     * Processes the user input to the program and adds the processed task to the user\u0027s list of tasks if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"nshian"},"content":"     * @param type The type of task being handled by the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"nshian"},"content":"     * @param curr The string representing the task currently being handled, including its type and description (if any).","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"nshian"},"content":"     * @throws EmptyDescriptionException if the user did not enter a description along with the type.","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"nshian"},"content":"     * @throws UnknownCommandException if the user provided an invalid type of task that the program cannot recognise.","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"nshian"},"content":"    public void addTask(String type, String curr) throws EmptyDescriptionException, UnknownCommandException {","lastModifiedDate":"2022-08-31"},{"lineNumber":113,"author":{"gitId":"nshian"},"content":"        if (!(type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\"))) { //type given is invalid","lastModifiedDate":"2022-08-31"},{"lineNumber":114,"author":{"gitId":"nshian"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2022-08-31"},{"lineNumber":115,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":116,"author":{"gitId":"nshian"},"content":"            String[] text \u003d curr.split(\" \");","lastModifiedDate":"2022-08-31"},{"lineNumber":117,"author":{"gitId":"nshian"},"content":"            if (text.length \u003d\u003d 1) { //description is empty","lastModifiedDate":"2022-08-31"},{"lineNumber":118,"author":{"gitId":"nshian"},"content":"                throw new EmptyDescriptionException();","lastModifiedDate":"2022-08-31"},{"lineNumber":119,"author":{"gitId":"nshian"},"content":"            } else {","lastModifiedDate":"2022-08-31"},{"lineNumber":120,"author":{"gitId":"nshian"},"content":"                String description \u003d assembleTaskDescription(text);","lastModifiedDate":"2022-08-31"},{"lineNumber":121,"author":{"gitId":"nshian"},"content":"                handleTask(type, description);","lastModifiedDate":"2022-08-31"},{"lineNumber":122,"author":{"gitId":"nshian"},"content":"                Ui.printAddTaskAcknowledgement(this.tasks, this.tasksCount);","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"nshian"},"content":"                this.tasksCount++;","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-08-31"},{"lineNumber":125,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-31"},{"lineNumber":126,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-31"},{"lineNumber":127,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":128,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"nshian"},"content":"     * Processes the user input to the program and deletes the processed task from the user\u0027s list of tasks if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"nshian"},"content":"     * @param type The type of task being handled by the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"nshian"},"content":"     * @param curr The string representing the task currently being handled, including its number (if any).","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"nshian"},"content":"     * @throws AccessTaskOutOfBoundsException if the user specified an invalid task number to delete.","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"nshian"},"content":"     * @throws MissingTaskNumberException if the user did not specify a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"nshian"},"content":"    public void deleteTask(String type, String curr) throws AccessTaskOutOfBoundsException, MissingTaskNumberException {","lastModifiedDate":"2022-09-09"},{"lineNumber":137,"author":{"gitId":"nshian"},"content":"        String[] text \u003d curr.split(\" \");","lastModifiedDate":"2022-09-09"},{"lineNumber":138,"author":{"gitId":"nshian"},"content":"        if (text.length \u003d\u003d 1) { //user did not specify which task to delete","lastModifiedDate":"2022-09-09"},{"lineNumber":139,"author":{"gitId":"nshian"},"content":"            throw new MissingTaskNumberException();","lastModifiedDate":"2022-09-09"},{"lineNumber":140,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":141,"author":{"gitId":"nshian"},"content":"            int taskNumber \u003d Integer.parseInt(text[1]);","lastModifiedDate":"2022-09-09"},{"lineNumber":142,"author":{"gitId":"nshian"},"content":"            if (taskNumber \u003e this.tasksCount) {","lastModifiedDate":"2022-09-09"},{"lineNumber":143,"author":{"gitId":"nshian"},"content":"                throw new AccessTaskOutOfBoundsException();","lastModifiedDate":"2022-09-09"},{"lineNumber":144,"author":{"gitId":"nshian"},"content":"            } else {","lastModifiedDate":"2022-09-09"},{"lineNumber":145,"author":{"gitId":"nshian"},"content":"                int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-09-09"},{"lineNumber":146,"author":{"gitId":"nshian"},"content":"                Ui.printDeleteTaskAcknowledgement(taskIndex, this.tasks, this.tasksCount);","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"nshian"},"content":"                this.tasksCount--;","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"nshian"},"content":"                tasks.remove(taskIndex);","lastModifiedDate":"2022-09-09"},{"lineNumber":149,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-09"},{"lineNumber":150,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-09"},{"lineNumber":151,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":152,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":153,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"nshian"},"content":"     * Processes the user input to the program and marks the processed task as done if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"nshian"},"content":"     * @param curr The string representing the task currently being handled, including its number (if any).","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"nshian"},"content":"     * @throws MissingTaskNumberException if the user did not specify a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"nshian"},"content":"    public void handleMarkAsDone(String curr) throws MissingTaskNumberException {","lastModifiedDate":"2022-09-02"},{"lineNumber":160,"author":{"gitId":"nshian"},"content":"        String[] text \u003d curr.split(\" \");","lastModifiedDate":"2022-09-02"},{"lineNumber":161,"author":{"gitId":"nshian"},"content":"        if (text.length \u003d\u003d 1) { //did not specify task number","lastModifiedDate":"2022-09-02"},{"lineNumber":162,"author":{"gitId":"nshian"},"content":"            throw new MissingTaskNumberException();","lastModifiedDate":"2022-09-02"},{"lineNumber":163,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":164,"author":{"gitId":"nshian"},"content":"            int taskNumber \u003d Integer.parseInt(text[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":165,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-02"},{"lineNumber":166,"author":{"gitId":"nshian"},"content":"                markAsDone(taskNumber);","lastModifiedDate":"2022-09-02"},{"lineNumber":167,"author":{"gitId":"nshian"},"content":"            } catch (AccessTaskOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":168,"author":{"gitId":"nshian"},"content":"                Ui.printAccessTaskOutOfBoundsError();","lastModifiedDate":"2022-09-16"},{"lineNumber":169,"author":{"gitId":"nshian"},"content":"                Ui.printNumberOfTasks(this.tasksCount);","lastModifiedDate":"2022-09-16"},{"lineNumber":170,"author":{"gitId":"nshian"},"content":"            } catch (TaskAlreadyMarkedException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":171,"author":{"gitId":"nshian"},"content":"                Ui.printTaskAlreadyMarkedError();","lastModifiedDate":"2022-09-16"},{"lineNumber":172,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":173,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":174,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":175,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":176,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":177,"author":{"gitId":"nshian"},"content":"     * Marks the task as done if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"nshian"},"content":"     * @param taskNumber The chronological number of the task being marked as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"nshian"},"content":"     * @throws AccessTaskOutOfBoundsException if the user did not specify a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":181,"author":{"gitId":"nshian"},"content":"     * @throws TaskAlreadyMarkedException if the user tries to mark an already marked task.","lastModifiedDate":"2022-09-16"},{"lineNumber":182,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":183,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":184,"author":{"gitId":"nshian"},"content":"    public void markAsDone(int taskNumber) throws AccessTaskOutOfBoundsException, TaskAlreadyMarkedException {","lastModifiedDate":"2022-09-02"},{"lineNumber":185,"author":{"gitId":"nshian"},"content":"        if (taskNumber \u003e this.tasksCount || taskNumber \u003c 0) { //task specified is out of bounds","lastModifiedDate":"2022-09-02"},{"lineNumber":186,"author":{"gitId":"nshian"},"content":"            throw new AccessTaskOutOfBoundsException();","lastModifiedDate":"2022-09-02"},{"lineNumber":187,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":188,"author":{"gitId":"nshian"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-08-20"},{"lineNumber":189,"author":{"gitId":"nshian"},"content":"            if (!tasks.get(taskIndex).isDone) { //only if task is undone","lastModifiedDate":"2022-09-09"},{"lineNumber":190,"author":{"gitId":"nshian"},"content":"                tasks.get(taskIndex).isDone \u003d true;","lastModifiedDate":"2022-09-09"},{"lineNumber":191,"author":{"gitId":"nshian"},"content":"                Ui.printMarkedTaskAsDoneAcknowledgement(taskIndex, tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":192,"author":{"gitId":"nshian"},"content":"                return;","lastModifiedDate":"2022-09-02"},{"lineNumber":193,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":194,"author":{"gitId":"nshian"},"content":"            throw new TaskAlreadyMarkedException();","lastModifiedDate":"2022-09-02"},{"lineNumber":195,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":196,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":197,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":198,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":199,"author":{"gitId":"nshian"},"content":"     * Processes the user input to the program and marks the processed task as undone if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":200,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"nshian"},"content":"     * @param curr The string representing the task currently being handled, including its number (if any).","lastModifiedDate":"2022-09-16"},{"lineNumber":202,"author":{"gitId":"nshian"},"content":"     * @throws MissingTaskNumberException if the user did not specify a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":203,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":204,"author":{"gitId":"nshian"},"content":"    public void handleMarkAsUndone(String curr) throws MissingTaskNumberException {","lastModifiedDate":"2022-09-02"},{"lineNumber":205,"author":{"gitId":"nshian"},"content":"        String[] text \u003d curr.split(\" \");","lastModifiedDate":"2022-09-02"},{"lineNumber":206,"author":{"gitId":"nshian"},"content":"        if (text.length \u003d\u003d 1) { //did not specify task number","lastModifiedDate":"2022-09-02"},{"lineNumber":207,"author":{"gitId":"nshian"},"content":"            throw new MissingTaskNumberException();","lastModifiedDate":"2022-09-02"},{"lineNumber":208,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":209,"author":{"gitId":"nshian"},"content":"            int taskNumber \u003d Integer.parseInt(text[1]);","lastModifiedDate":"2022-09-02"},{"lineNumber":210,"author":{"gitId":"nshian"},"content":"            try {","lastModifiedDate":"2022-09-02"},{"lineNumber":211,"author":{"gitId":"nshian"},"content":"                markAsUndone(taskNumber);","lastModifiedDate":"2022-09-02"},{"lineNumber":212,"author":{"gitId":"nshian"},"content":"            } catch (AccessTaskOutOfBoundsException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":213,"author":{"gitId":"nshian"},"content":"                Ui.printAccessTaskOutOfBoundsError();","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"nshian"},"content":"                Ui.printNumberOfTasks(this.tasksCount);","lastModifiedDate":"2022-09-16"},{"lineNumber":215,"author":{"gitId":"nshian"},"content":"            } catch (TaskAlreadyUnmarkedException e) {","lastModifiedDate":"2022-09-02"},{"lineNumber":216,"author":{"gitId":"nshian"},"content":"                Ui.printTaskAlreadyUnmarkedError();","lastModifiedDate":"2022-09-16"},{"lineNumber":217,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":218,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-02"},{"lineNumber":219,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-02"},{"lineNumber":220,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":221,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":222,"author":{"gitId":"nshian"},"content":"     * Marks the task as undone if valid.","lastModifiedDate":"2022-09-16"},{"lineNumber":223,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":224,"author":{"gitId":"nshian"},"content":"     * @param taskNumber The chronological number of the task being marked as undone.","lastModifiedDate":"2022-09-16"},{"lineNumber":225,"author":{"gitId":"nshian"},"content":"     * @throws AccessTaskOutOfBoundsException if the user did not specify a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":226,"author":{"gitId":"nshian"},"content":"     * @throws TaskAlreadyUnmarkedException if the user tries to mark an already marked task.","lastModifiedDate":"2022-09-16"},{"lineNumber":227,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":228,"author":{"gitId":"nshian"},"content":"    public void markAsUndone(int taskNumber) throws AccessTaskOutOfBoundsException, TaskAlreadyUnmarkedException{","lastModifiedDate":"2022-09-02"},{"lineNumber":229,"author":{"gitId":"nshian"},"content":"        if (taskNumber \u003e this.tasksCount || taskNumber \u003c 0) { //task specified is out of bounds","lastModifiedDate":"2022-09-02"},{"lineNumber":230,"author":{"gitId":"nshian"},"content":"            throw new AccessTaskOutOfBoundsException();","lastModifiedDate":"2022-09-02"},{"lineNumber":231,"author":{"gitId":"nshian"},"content":"        } else {","lastModifiedDate":"2022-09-02"},{"lineNumber":232,"author":{"gitId":"nshian"},"content":"            int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2022-08-20"},{"lineNumber":233,"author":{"gitId":"nshian"},"content":"            if (tasks.get(taskIndex).isDone) { //only if task is done","lastModifiedDate":"2022-09-09"},{"lineNumber":234,"author":{"gitId":"nshian"},"content":"                tasks.get(taskIndex).isDone \u003d false;","lastModifiedDate":"2022-09-09"},{"lineNumber":235,"author":{"gitId":"nshian"},"content":"                Ui.printMarkedTaskAsUndoneAcknowledgement(taskIndex, tasks);","lastModifiedDate":"2022-09-16"},{"lineNumber":236,"author":{"gitId":"nshian"},"content":"                return;","lastModifiedDate":"2022-09-02"},{"lineNumber":237,"author":{"gitId":"nshian"},"content":"            }","lastModifiedDate":"2022-09-02"},{"lineNumber":238,"author":{"gitId":"nshian"},"content":"            throw new TaskAlreadyUnmarkedException();","lastModifiedDate":"2022-09-02"},{"lineNumber":239,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":240,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":241,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-02"}],"authorContributionMap":{"nshian":241}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.task;","lastModifiedDate":"2022-09-02"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-02"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":" * Represents a task that has to be done by the user but does not have a specific deadline nor a specific time/venue.","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-26"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"        super(description);","lastModifiedDate":"2022-08-26"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":"    public String toString() {","lastModifiedDate":"2022-08-26"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-08-26"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"     * Processes a task\u0027s attributes to produce a string that encapsulates the task information which includes its type, done status and description.","lastModifiedDate":"2022-09-16"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"     * @return A well-formatted string containing the task information.","lastModifiedDate":"2022-09-16"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"    @Override","lastModifiedDate":"2022-09-09"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"    public String formattedInformation() {","lastModifiedDate":"2022-09-09"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"        String information \u003d \"T\" + divider + (isDone ? \"1\" : \"0\") + divider + this.description;","lastModifiedDate":"2022-09-16"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"        return information;","lastModifiedDate":"2022-09-16"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"nshian":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nshian"},"content":"package duke.ui;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"nshian"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-16"},{"lineNumber":4,"author":{"gitId":"nshian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-16"},{"lineNumber":5,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":6,"author":{"gitId":"nshian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-16"},{"lineNumber":7,"author":{"gitId":"nshian"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-16"},{"lineNumber":8,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":9,"author":{"gitId":"nshian"},"content":"/**","lastModifiedDate":"2022-09-16"},{"lineNumber":10,"author":{"gitId":"nshian"},"content":" * Represents the user interface that the user observes when using the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":11,"author":{"gitId":"nshian"},"content":" */","lastModifiedDate":"2022-09-16"},{"lineNumber":12,"author":{"gitId":"nshian"},"content":"public class Ui {","lastModifiedDate":"2022-09-09"},{"lineNumber":13,"author":{"gitId":"nshian"},"content":"    static final String LOGO \u003d \"   _____                .__   \\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"nshian"},"content":"            \"  /  _  \\\\ ___  ___ ____ |  |  \\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":15,"author":{"gitId":"nshian"},"content":"            \" /  /_\\\\  \\\\\\\\  \\\\/  // __ \\\\|  |  \\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":16,"author":{"gitId":"nshian"},"content":"            \"/    |    \\\\\u003e    \u003c\\\\  ___/|  |__\\n\" +","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"nshian"},"content":"            \"\\\\____|__  /__/\\\\_ \\\\\\\\___  \u003e____/\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":20,"author":{"gitId":"nshian"},"content":"     * Greets the user with an introductory message when the program is first started.","lastModifiedDate":"2022-09-16"},{"lineNumber":21,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":22,"author":{"gitId":"nshian"},"content":"    public static void greetUser() {","lastModifiedDate":"2022-09-09"},{"lineNumber":23,"author":{"gitId":"nshian"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"nshian"},"content":"        String greeting \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"nshian"},"content":"                + \"Hello! My name is Axel. :-)\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":26,"author":{"gitId":"nshian"},"content":"                + \"How may I help you today?\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":27,"author":{"gitId":"nshian"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2022-09-09"},{"lineNumber":28,"author":{"gitId":"nshian"},"content":"        System.out.println(greeting);","lastModifiedDate":"2022-09-09"},{"lineNumber":29,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":30,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":31,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":32,"author":{"gitId":"nshian"},"content":"     * Bids goodbye to the user when the user decides to terminate the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":33,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":34,"author":{"gitId":"nshian"},"content":"    public static void sayByeToUser() {","lastModifiedDate":"2022-09-09"},{"lineNumber":35,"author":{"gitId":"nshian"},"content":"        String message \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":36,"author":{"gitId":"nshian"},"content":"                + \"Goodbye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-09-09"},{"lineNumber":37,"author":{"gitId":"nshian"},"content":"                + \"____________________________________________________________\";","lastModifiedDate":"2022-09-09"},{"lineNumber":38,"author":{"gitId":"nshian"},"content":"        System.out.println(message);","lastModifiedDate":"2022-09-09"},{"lineNumber":39,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":40,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":41,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":42,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user of an error in loading their file.","lastModifiedDate":"2022-09-16"},{"lineNumber":43,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":44,"author":{"gitId":"nshian"},"content":"     * @param message The message provided by the getMessage() function for the exception that is used in conjunction with this function.","lastModifiedDate":"2022-09-16"},{"lineNumber":45,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":46,"author":{"gitId":"nshian"},"content":"    public static void showLoadingError(String message) {","lastModifiedDate":"2022-09-16"},{"lineNumber":47,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Something went wrong trying to load the file: \" + message);","lastModifiedDate":"2022-09-16"},{"lineNumber":48,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":49,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":50,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":51,"author":{"gitId":"nshian"},"content":"     * Reads the line of input that the user entered to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":52,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":53,"author":{"gitId":"nshian"},"content":"     * @return The full user input to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":54,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":55,"author":{"gitId":"nshian"},"content":"    public static String getUserCommand() {","lastModifiedDate":"2022-09-16"},{"lineNumber":56,"author":{"gitId":"nshian"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-16"},{"lineNumber":57,"author":{"gitId":"nshian"},"content":"        String command \u003d input.nextLine();","lastModifiedDate":"2022-09-16"},{"lineNumber":58,"author":{"gitId":"nshian"},"content":"        return command;","lastModifiedDate":"2022-09-16"},{"lineNumber":59,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":60,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":61,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":62,"author":{"gitId":"nshian"},"content":"     * Prints a well-formatted list of the user\u0027s current tasks, including its type, description and done status.","lastModifiedDate":"2022-09-16"},{"lineNumber":63,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":64,"author":{"gitId":"nshian"},"content":"     * @param taskList The user\u0027s current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":65,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":66,"author":{"gitId":"nshian"},"content":"    public void printTasks(TaskList taskList) {","lastModifiedDate":"2022-09-16"},{"lineNumber":67,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":68,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":69,"author":{"gitId":"nshian"},"content":"        for(int i \u003d 0; i \u003c taskList.getTasksCount(); i++){","lastModifiedDate":"2022-09-16"},{"lineNumber":70,"author":{"gitId":"nshian"},"content":"            System.out.println((i+1) + \".\" + taskList.getTasks().get(i).toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":71,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":72,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":73,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":74,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":75,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":76,"author":{"gitId":"nshian"},"content":"     * Prints a well-formatted list of the user\u0027s tasks that matched a keyword provided by the user.","lastModifiedDate":"2022-09-16"},{"lineNumber":77,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":78,"author":{"gitId":"nshian"},"content":"     * @param taskList The user\u0027s current list of tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":79,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":80,"author":{"gitId":"nshian"},"content":"    public void printMatchingTasks(TaskList taskList) {","lastModifiedDate":"2022-09-16"},{"lineNumber":81,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":82,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":83,"author":{"gitId":"nshian"},"content":"        for(int i \u003d 0; i \u003c taskList.getTasksCount(); i++){","lastModifiedDate":"2022-09-16"},{"lineNumber":84,"author":{"gitId":"nshian"},"content":"            System.out.println((i+1) + \".\" + taskList.getTasks().get(i).toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":85,"author":{"gitId":"nshian"},"content":"        }","lastModifiedDate":"2022-09-16"},{"lineNumber":86,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":87,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":88,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":89,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":90,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they tried to index a task that is out of bounds.","lastModifiedDate":"2022-09-16"},{"lineNumber":91,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":92,"author":{"gitId":"nshian"},"content":"    public static void printAccessTaskOutOfBoundsError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":93,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":94,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! The task you have specified is out of bounds :-(\\n\";","lastModifiedDate":"2022-09-16"},{"lineNumber":95,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":96,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":97,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":98,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":99,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they did not provide a task description.","lastModifiedDate":"2022-09-16"},{"lineNumber":100,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":101,"author":{"gitId":"nshian"},"content":"    public void printEmptyDescriptionError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":102,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":103,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! The description cannot be empty.\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":104,"author":{"gitId":"nshian"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":105,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":106,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":107,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":108,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":109,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they did not provide a task number.","lastModifiedDate":"2022-09-16"},{"lineNumber":110,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":111,"author":{"gitId":"nshian"},"content":"    public void printMissingTaskNumberError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":112,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":113,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! You did not specify the task number :-(\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":114,"author":{"gitId":"nshian"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":115,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":116,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":117,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":118,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":119,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they are attempting to mark a task that is already done.","lastModifiedDate":"2022-09-16"},{"lineNumber":120,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":121,"author":{"gitId":"nshian"},"content":"    public static void printTaskAlreadyMarkedError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":122,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":123,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! The task you specified is already marked!\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":124,"author":{"gitId":"nshian"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":125,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":126,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":127,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":128,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":129,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they are attempting to unmark a task that is already not done.","lastModifiedDate":"2022-09-16"},{"lineNumber":130,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":131,"author":{"gitId":"nshian"},"content":"    public static void printTaskAlreadyUnmarkedError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":132,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":133,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! The task you specified is already unmarked!\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":134,"author":{"gitId":"nshian"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":135,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":136,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":137,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":138,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":139,"author":{"gitId":"nshian"},"content":"     * Prints an error message to inform the user that they did not provide a valid command to the program.","lastModifiedDate":"2022-09-16"},{"lineNumber":140,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":141,"author":{"gitId":"nshian"},"content":"    public void printUnknownCommandError() {","lastModifiedDate":"2022-09-16"},{"lineNumber":142,"author":{"gitId":"nshian"},"content":"        String error \u003d \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":143,"author":{"gitId":"nshian"},"content":"                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2022-09-16"},{"lineNumber":144,"author":{"gitId":"nshian"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2022-09-16"},{"lineNumber":145,"author":{"gitId":"nshian"},"content":"        System.out.println(error);","lastModifiedDate":"2022-09-16"},{"lineNumber":146,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":147,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":148,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":149,"author":{"gitId":"nshian"},"content":"     * Prints an acknowledgement message to inform the user that they have successfully added a task to their list.","lastModifiedDate":"2022-09-16"},{"lineNumber":150,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":151,"author":{"gitId":"nshian"},"content":"     * @param tasks The ArrayList of the user\u0027s current tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":152,"author":{"gitId":"nshian"},"content":"     * @param tasksCount The number of tasks in the user\u0027s current list.","lastModifiedDate":"2022-09-16"},{"lineNumber":153,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":154,"author":{"gitId":"nshian"},"content":"    public static void printAddTaskAcknowledgement(ArrayList\u003cTask\u003e tasks, int tasksCount) {","lastModifiedDate":"2022-09-16"},{"lineNumber":155,"author":{"gitId":"nshian"},"content":"        String acknowledgement \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":156,"author":{"gitId":"nshian"},"content":"                + \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":157,"author":{"gitId":"nshian"},"content":"                + \" \" + tasks.get(tasksCount).toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":158,"author":{"gitId":"nshian"},"content":"        System.out.println(acknowledgement);","lastModifiedDate":"2022-09-16"},{"lineNumber":159,"author":{"gitId":"nshian"},"content":"        tasksCount++;","lastModifiedDate":"2022-09-16"},{"lineNumber":160,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" task(s) in the list.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":161,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":162,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":163,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":164,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":165,"author":{"gitId":"nshian"},"content":"     * Prints an acknowledgement message to inform the user that they have successfully deleted a task from their list.","lastModifiedDate":"2022-09-16"},{"lineNumber":166,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":167,"author":{"gitId":"nshian"},"content":"     * @param taskIndex The index of the task to delete.","lastModifiedDate":"2022-09-16"},{"lineNumber":168,"author":{"gitId":"nshian"},"content":"     * @param tasks The ArrayList of the user\u0027s current tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":169,"author":{"gitId":"nshian"},"content":"     * @param tasksCount The number of tasks in the user\u0027s current list.","lastModifiedDate":"2022-09-16"},{"lineNumber":170,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":171,"author":{"gitId":"nshian"},"content":"    public static void printDeleteTaskAcknowledgement(int taskIndex, ArrayList\u003cTask\u003e tasks, int tasksCount) {","lastModifiedDate":"2022-09-16"},{"lineNumber":172,"author":{"gitId":"nshian"},"content":"        String acknowledgement \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":173,"author":{"gitId":"nshian"},"content":"                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":174,"author":{"gitId":"nshian"},"content":"                + \" \" + tasks.get(taskIndex).toString();","lastModifiedDate":"2022-09-16"},{"lineNumber":175,"author":{"gitId":"nshian"},"content":"        System.out.println(acknowledgement);","lastModifiedDate":"2022-09-16"},{"lineNumber":176,"author":{"gitId":"nshian"},"content":"        tasksCount--;","lastModifiedDate":"2022-09-16"},{"lineNumber":177,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Now you have \" + tasksCount + \" task(s) in the list.\");","lastModifiedDate":"2022-09-16"},{"lineNumber":178,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":179,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":180,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":181,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":182,"author":{"gitId":"nshian"},"content":"     * Prints the number of tasks that the user currently has in their list.","lastModifiedDate":"2022-09-16"},{"lineNumber":183,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":184,"author":{"gitId":"nshian"},"content":"     * @param tasksCount The number of tasks in the user\u0027s current list.","lastModifiedDate":"2022-09-16"},{"lineNumber":185,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":186,"author":{"gitId":"nshian"},"content":"    public static void printNumberOfTasks(int tasksCount) {","lastModifiedDate":"2022-09-16"},{"lineNumber":187,"author":{"gitId":"nshian"},"content":"        System.out.println(\"You currently have \" + tasksCount + \" task(s) in your list.\\n\"","lastModifiedDate":"2022-09-16"},{"lineNumber":188,"author":{"gitId":"nshian"},"content":"                + \"    ____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":189,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":190,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":191,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":192,"author":{"gitId":"nshian"},"content":"     * Prints an acknowledgement message to inform the user that they have successfully marked a task from their list as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":193,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":194,"author":{"gitId":"nshian"},"content":"     * @param taskIndex The index of the task to mark as done.","lastModifiedDate":"2022-09-16"},{"lineNumber":195,"author":{"gitId":"nshian"},"content":"     * @param tasks The ArrayList of the user\u0027s current tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":196,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":197,"author":{"gitId":"nshian"},"content":"    public static void printMarkedTaskAsDoneAcknowledgement(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":198,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-17"},{"lineNumber":199,"author":{"gitId":"nshian"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":200,"author":{"gitId":"nshian"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":201,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":202,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":203,"author":{"gitId":"nshian"},"content":"","lastModifiedDate":"2022-09-16"},{"lineNumber":204,"author":{"gitId":"nshian"},"content":"    /**","lastModifiedDate":"2022-09-16"},{"lineNumber":205,"author":{"gitId":"nshian"},"content":"     * Prints an acknowledgement message to inform the user that they have successfully marked a task from their list as undone.","lastModifiedDate":"2022-09-16"},{"lineNumber":206,"author":{"gitId":"nshian"},"content":"     *","lastModifiedDate":"2022-09-16"},{"lineNumber":207,"author":{"gitId":"nshian"},"content":"     * @param taskIndex The index of the task to mark as undone.","lastModifiedDate":"2022-09-16"},{"lineNumber":208,"author":{"gitId":"nshian"},"content":"     * @param tasks The ArrayList of the user\u0027s current tasks.","lastModifiedDate":"2022-09-16"},{"lineNumber":209,"author":{"gitId":"nshian"},"content":"     */","lastModifiedDate":"2022-09-16"},{"lineNumber":210,"author":{"gitId":"nshian"},"content":"    public static void printMarkedTaskAsUndoneAcknowledgement(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-16"},{"lineNumber":211,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-17"},{"lineNumber":212,"author":{"gitId":"nshian"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-16"},{"lineNumber":213,"author":{"gitId":"nshian"},"content":"        System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2022-09-16"},{"lineNumber":214,"author":{"gitId":"nshian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2022-09-16"},{"lineNumber":215,"author":{"gitId":"nshian"},"content":"    }","lastModifiedDate":"2022-09-16"},{"lineNumber":216,"author":{"gitId":"nshian"},"content":"}","lastModifiedDate":"2022-09-09"}],"authorContributionMap":{"nshian":216}}]
