[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"todo read","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"todo return book","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"kohnh":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"Duke(Jarvis) is a personalized task manager that handles your todo list using the Command Line Interface.","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"## Table of Contents","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"1. [Getting Started](#getting-started)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"2. [Features](#features)","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"   1. [Storage of task-list on hard-disk](#storage-of-task-list-on-hard-disk)","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"   2. [Datetime format understood by Duke](#datetime-format-understood-by-duke)","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"   3. [Sample command formats given](#sample-command-formats-given)","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"3. [Usage](#usage)","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"   1. [`todo`](#todo---add-a-new-todo-task)","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"   2. [`deadline`](#deadline---add-a-new-deadline-task)","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"   3. [`event`](#event---add-a-new-event-task)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"   4. [`list`](#list---list-all-current-tasks)","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"   5. [`mark`](#mark---mark-a-current-task-as-done)","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"   6. [`unmark`](#unmark---mark-a-current-task-as-not-done)","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"   7. [`delete`](#delete---delete-a-current-task)","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"   8. [`find`](#find---find-tasks-by-keywords)","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"   9. [`bye`](#bye---exit-the-programme)","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"4. [Common Error Messages](#common-error-messages)","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"5. [Command Summary](#command-summary)","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"6. [Credits](#credits)","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"## Getting Started","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"1. Ensure that you have `Java 11` or above installed on your computer","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"2. Download the `jar` file from [here](https://github.com/kohnh/ip/releases/tag/A-Release-v0.2)","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"3. Copy the `jar` file into an empty folder that you want to use as the base folder","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"4. Open a command window in that same folder","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"5. Run the command `java -jar {filename}.jar` e.g., `java -jar Duke.jar`","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"6. If the programme is running correctly, this welcome message should be shown","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"Hello! I\u0027m","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"     ____.  _____ ______________   ____.___  _________","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"    |    | /  _  \\\\______   \\   \\ /   /|   |/   _____/","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    |    |/  /_\\  \\|       _/\\   Y   / |   |\\_____  \\","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"/\\__|    /    |    \\    |   \\ \\     /  |   |/        \\","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"\\________\\____|__  /____|_  /  \\___/   |___/_______  /","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"                 \\/       \\/                       \\/","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"What can I do for you?","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"Enter \"bye\" to exit.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"### Storage of task-list on hard-disk","lastModifiedDate":"2022-09-28"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"Duke will automatically load previously added tasks from the hard-disk","lastModifiedDate":"2022-09-28"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"and also save all added tasks to the hard-disk when Duke is closed.","lastModifiedDate":"2022-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"### Datetime format understood by Duke","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"Currently, Duke only understands date in the format `YYYY-MM-DD` and time in the 24-hour format `HHMM`.","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"Whenever date and time needs to be supplied by the user, the format should be `YYYY-MM-DD HHMM`.","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"(`Y` stands for year, `M` stands for month, `D` stands for date, `H` stands for hour and `M` stands for minutes)","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"kohnh"},"content":"If the date and time information provided cannot be understood by duke or no date or time or ","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"kohnh"},"content":"both is not provided, the date and time will be automatically set to one week from current date. ","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"kohnh"},"content":"Additionally, there will be another line output:","lastModifiedDate":"2022-09-28"},{"lineNumber":68,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":69,"author":{"gitId":"kohnh"},"content":"Sorry. Date and Time cannot be parsed","lastModifiedDate":"2022-09-28"},{"lineNumber":70,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"kohnh"},"content":"### Sample command formats given","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"kohnh"},"content":"Words in round brackets () represents parameters that you are supposed to supply to the programme.","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"kohnh"},"content":"e.g. `todo (discription)` can be used as `todo buy a pen`","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2022-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"kohnh"},"content":"### `todo` - Add a new Todo task","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"kohnh"},"content":"Add a new todo task type in the task list in the format","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"kohnh"},"content":"`todo (discription)`","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":83,"author":{"gitId":"kohnh"},"content":"**Example of usage:** ","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":85,"author":{"gitId":"kohnh"},"content":"`todo read book`","lastModifiedDate":"2022-09-28"},{"lineNumber":86,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":87,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":89,"author":{"gitId":"kohnh"},"content":"Output to confirm addition of todo task where \u0027X\u0027 is the number of tasks currently stored in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":90,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":91,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":92,"author":{"gitId":"kohnh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":93,"author":{"gitId":"kohnh"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-28"},{"lineNumber":94,"author":{"gitId":"kohnh"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":95,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":96,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":97,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":98,"author":{"gitId":"kohnh"},"content":"### `deadline` - Add a new Deadline task","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":100,"author":{"gitId":"kohnh"},"content":"Add a new deadline task type in the task list in the format","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"kohnh"},"content":"`deadline (discription) /by (YYYY-MM-DD HHMM)`","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":103,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":104,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":105,"author":{"gitId":"kohnh"},"content":"`deadline return book /by 2025-05-12 1800`","lastModifiedDate":"2022-09-28"},{"lineNumber":106,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":107,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":108,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":109,"author":{"gitId":"kohnh"},"content":"Output to confirm addition of deadline task where \u0027X\u0027 is the number of tasks currently stored in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":110,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":111,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":112,"author":{"gitId":"kohnh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":113,"author":{"gitId":"kohnh"},"content":"[D][ ] return book  (by: May 12 2025 6:00 PM)","lastModifiedDate":"2022-09-28"},{"lineNumber":114,"author":{"gitId":"kohnh"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":115,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":116,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"kohnh"},"content":"### `event` - Add a new Event task","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"kohnh"},"content":"Add a new event task type in the task list in the format","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"kohnh"},"content":"`event (discription) /at (YYYY-MM-DD HHMM)`","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"kohnh"},"content":"`event book review /at 2025-04-01 1000`","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"kohnh"},"content":"Output to confirm addition of event task where \u0027X\u0027 is the number of tasks currently stored in the list","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":131,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":132,"author":{"gitId":"kohnh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":133,"author":{"gitId":"kohnh"},"content":"[E][ ] book review  (at: Apr 1 2025 10:00 AM)","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"kohnh"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":135,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":136,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":137,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"kohnh"},"content":"### `list` - List all current tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":140,"author":{"gitId":"kohnh"},"content":"List all the current tasks in the task list.","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":143,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":144,"author":{"gitId":"kohnh"},"content":"`list`","lastModifiedDate":"2022-09-28"},{"lineNumber":145,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":147,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":148,"author":{"gitId":"kohnh"},"content":"If there are no tasks currently in the task list","lastModifiedDate":"2022-09-28"},{"lineNumber":149,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":150,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":151,"author":{"gitId":"kohnh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2022-09-28"},{"lineNumber":152,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":153,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":154,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":156,"author":{"gitId":"kohnh"},"content":"### `mark` - Mark a current task as done","lastModifiedDate":"2022-09-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":158,"author":{"gitId":"kohnh"},"content":"Mark a current task as done in the task list in the format `mark (index)`","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":160,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":162,"author":{"gitId":"kohnh"},"content":"`mark 1`","lastModifiedDate":"2022-09-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":164,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":166,"author":{"gitId":"kohnh"},"content":"If the task indicated exist, for example the previous `read book` task","lastModifiedDate":"2022-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":168,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":169,"author":{"gitId":"kohnh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-28"},{"lineNumber":170,"author":{"gitId":"kohnh"},"content":"[T][X] read book","lastModifiedDate":"2022-09-28"},{"lineNumber":171,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"kohnh"},"content":"### `unmark` - Mark a current task as not done","lastModifiedDate":"2022-09-28"},{"lineNumber":175,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":176,"author":{"gitId":"kohnh"},"content":"Mark a current task as not done in the task list in the format `unmark (index)`","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":178,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":180,"author":{"gitId":"kohnh"},"content":"`unmark 1`","lastModifiedDate":"2022-09-28"},{"lineNumber":181,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":182,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":183,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":184,"author":{"gitId":"kohnh"},"content":"If the task indicated exist, for example the previous `read book` task","lastModifiedDate":"2022-09-28"},{"lineNumber":185,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":186,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":187,"author":{"gitId":"kohnh"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2022-09-28"},{"lineNumber":188,"author":{"gitId":"kohnh"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-28"},{"lineNumber":189,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":190,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":191,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":192,"author":{"gitId":"kohnh"},"content":"### `delete` - Delete a current task","lastModifiedDate":"2022-09-28"},{"lineNumber":193,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":194,"author":{"gitId":"kohnh"},"content":"Delete a current task in the task list in the format `delete (index)`","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":196,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":197,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":198,"author":{"gitId":"kohnh"},"content":"`delete 1`","lastModifiedDate":"2022-09-29"},{"lineNumber":199,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":200,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":201,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":202,"author":{"gitId":"kohnh"},"content":"If the task indicated exist, for example the previous `read book` task,","lastModifiedDate":"2022-09-28"},{"lineNumber":203,"author":{"gitId":"kohnh"},"content":"where X is the number of tasks left in the task list.","lastModifiedDate":"2022-09-28"},{"lineNumber":204,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":205,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":206,"author":{"gitId":"kohnh"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2022-09-28"},{"lineNumber":207,"author":{"gitId":"kohnh"},"content":"[T][ ] read book","lastModifiedDate":"2022-09-28"},{"lineNumber":208,"author":{"gitId":"kohnh"},"content":"Now you have X tasks in the list.","lastModifiedDate":"2022-09-28"},{"lineNumber":209,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":210,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":211,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":212,"author":{"gitId":"kohnh"},"content":"### `find` - Find tasks by keyword(s)","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":214,"author":{"gitId":"kohnh"},"content":"Find all tasks in the task list that has a user-specified keyword in the format `find (keyword(s))`","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":216,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":217,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":218,"author":{"gitId":"kohnh"},"content":"`find book`","lastModifiedDate":"2022-09-28"},{"lineNumber":219,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":220,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":221,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":222,"author":{"gitId":"kohnh"},"content":"If the keyword indicated exist, for example the keyword \u0027book\u0027 is part of the previous `read book` task.","lastModifiedDate":"2022-09-28"},{"lineNumber":223,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":224,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":225,"author":{"gitId":"kohnh"},"content":"Here are the tasks matching \"book\" in your list:","lastModifiedDate":"2022-09-28"},{"lineNumber":226,"author":{"gitId":"kohnh"},"content":"1.[T][ ] read book","lastModifiedDate":"2022-09-28"},{"lineNumber":227,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":228,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":229,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":230,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":231,"author":{"gitId":"kohnh"},"content":"### `bye` - Exit the programme","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":233,"author":{"gitId":"kohnh"},"content":"Exit the programme and save all tasks to the hard-drive","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":235,"author":{"gitId":"kohnh"},"content":"**Example of usage:**","lastModifiedDate":"2022-09-29"},{"lineNumber":236,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":237,"author":{"gitId":"kohnh"},"content":"`bye`","lastModifiedDate":"2022-09-29"},{"lineNumber":238,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"kohnh"},"content":"**Expected outcome:**","lastModifiedDate":"2022-09-29"},{"lineNumber":240,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":241,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":242,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":243,"author":{"gitId":"kohnh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2022-09-29"},{"lineNumber":244,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":245,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":246,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":247,"author":{"gitId":"kohnh"},"content":"## Common Error Messages","lastModifiedDate":"2022-09-28"},{"lineNumber":248,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":249,"author":{"gitId":"kohnh"},"content":"If the task index does not exist","lastModifiedDate":"2022-09-28"},{"lineNumber":250,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":251,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":252,"author":{"gitId":"kohnh"},"content":"☹ OOPS!!! The task number you specified does not exist.","lastModifiedDate":"2022-09-28"},{"lineNumber":253,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":254,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":255,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":256,"author":{"gitId":"kohnh"},"content":"If the index provided is not a number","lastModifiedDate":"2022-09-28"},{"lineNumber":257,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":258,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":259,"author":{"gitId":"kohnh"},"content":"☹ OOPS!!! You did not enter a number.","lastModifiedDate":"2022-09-28"},{"lineNumber":260,"author":{"gitId":"kohnh"},"content":"------------------------------------------------------------","lastModifiedDate":"2022-09-28"},{"lineNumber":261,"author":{"gitId":"kohnh"},"content":"```","lastModifiedDate":"2022-09-28"},{"lineNumber":262,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"kohnh"},"content":"If no date or time or both is not provided, the date and time will be ","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"kohnh"},"content":"automatically set to one week from current date","lastModifiedDate":"2022-09-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":266,"author":{"gitId":"kohnh"},"content":"Sorry. Date and Time cannot be parsed","lastModifiedDate":"2022-09-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":268,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"kohnh"},"content":"## Command summary","lastModifiedDate":"2022-09-30"},{"lineNumber":270,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"kohnh"},"content":"| Action                   | Format                                         | Example                                    |","lastModifiedDate":"2022-09-30"},{"lineNumber":272,"author":{"gitId":"kohnh"},"content":"|--------------------------|------------------------------------------------|--------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"kohnh"},"content":"| Add a new Todo task      | `todo (discription)`                           | `todo read book`                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"kohnh"},"content":"| Add a new Deadline task  | `deadline (discription) /by (YYYY-MM-DD HHMM)` | `deadline return book /by 2025-05-12 1800` |","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"kohnh"},"content":"| Add a new Event task     | `event (discription) /at (YYYY-MM-DD HHMM)`    | `event book review /at 2025-04-01 1000`    |","lastModifiedDate":"2022-10-01"},{"lineNumber":276,"author":{"gitId":"kohnh"},"content":"| List all current tasks   | `list`                                         | `list`                                     |","lastModifiedDate":"2022-09-30"},{"lineNumber":277,"author":{"gitId":"kohnh"},"content":"| Mark a task as done      | `mark (index)`                                 | `mark 1`                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":278,"author":{"gitId":"kohnh"},"content":"| Mark a task as not done  | `unmark (index)`                               | `unmark 1`                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"kohnh"},"content":"| Delete a current task    | `delete (index)`                               | `delete 1`                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"kohnh"},"content":"| Find tasks by keyword(s) | `find (keyword(s))`                            | `find book`                                | ","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"kohnh"},"content":"| Exits the programme      | `bye`                                          | `bye`                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"kohnh"},"content":"## Credits","lastModifiedDate":"2022-09-30"},{"lineNumber":284,"author":{"gitId":"kohnh"},"content":"Credit to Owen Leong (@owenl131) for the inspiration and layout for the ","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"kohnh"},"content":"[Table of Contents](#table-of-contents), [Getting Started](#getting-started) and the [Command Summary](#command-summary) ","lastModifiedDate":"2022-09-30"},{"lineNumber":286,"author":{"gitId":"kohnh"},"content":"in this UserGuide.","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"kohnh":258,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskManager;","lastModifiedDate":"2022-09-08"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":" * The main class for Duke the task manager.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"public class Duke {","lastModifiedDate":"2022-09-23"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"     * Creates a new \u003ccode\u003eTaskManager\u003c/code\u003e and constantly receives command until the user stops the programme.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"     * @param args no command line arguments are needed or expected","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"        TaskManager duke \u003d new TaskManager();","lastModifiedDate":"2022-09-15"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"        duke.receiveCommands();","lastModifiedDate":"2022-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kohnh":16,"-":2}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.tasks.Task;","lastModifiedDate":"2022-09-23"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" * Handles all the output that the user can see.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"public class UI {","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     * Demarcation to indicate system output.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    public final String DASH_SEPARATOR \u003d \"------------------------------------------------------------\"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"            + System.lineSeparator();","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     * How the user will see the system output.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * @param stringToOutput message related to the command the user has input","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    public void formatOutput(String stringToOutput) {","lastModifiedDate":"2022-09-23"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"        System.out.println(DASH_SEPARATOR + stringToOutput + System.lineSeparator() + DASH_SEPARATOR);","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"     * The greeting message which will only be shown once at the start of the programme.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        String LOGO \u003d \"     ____.  _____ ______________   ____.___  _________\" + System.lineSeparator()","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"                + \"    |    | /  _  \\\\\\\\______   \\\\   \\\\ /   /|   |/   _____/\" + System.lineSeparator()","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"                + \"    |    |/  /_\\\\  \\\\|       _/\\\\   Y   / |   |\\\\_____  \\\\\" + System.lineSeparator()","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"                + \"/\\\\__|    /    |    \\\\    |   \\\\ \\\\     /  |   |/        \\\\\" + System.lineSeparator()","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"                + \"\\\\________\\\\____|__  /____|_  /  \\\\___/   |___/_______  /\" + System.lineSeparator()","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"                + \"                 \\\\/       \\\\/                       \\\\/\" + System.lineSeparator();","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"        String greet \u003d \"Hello! I\u0027m\" + System.lineSeparator() + LOGO + \"What can I do for you?\"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"                + System.lineSeparator() + \"Enter \\\"bye\\\" to exit.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"        formatOutput(greet);","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"     * Output message to inform the user which \u003ccode\u003etask\u003c/code\u003e is successfully marked or unmarked.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"     * @param task the task to be marked or unmarked","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"     * @param done whether the task is done","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"    public void printMark(Task task, boolean done) {","lastModifiedDate":"2022-09-23"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"        formatOutput(task.markDone(done));","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"     * Output message to inform the user which new \u003ccode\u003etask\u003c/code\u003e is successfully added to the","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e which is the last \u003ccode\u003etask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"     * @param tasks stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"    public void printTask(TaskList tasks) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"        Task task \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"                + task + System.lineSeparator() + \"Now you have \" + tasks.size()","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":64,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"kohnh"},"content":"     * Output message to inform the user which \u003ccode\u003etask\u003c/code\u003e is successfully deleted from the","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"kohnh"},"content":"     * @param tasks stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"kohnh"},"content":"     * @param pos   the position of the task to be deleted","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"kohnh"},"content":"    public void printTaskAfterDelete(TaskList tasks, int pos) {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"kohnh"},"content":"        Task task \u003d tasks.get(pos);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"kohnh"},"content":"        //account for deleted task","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"kohnh"},"content":"        int numTasks \u003d tasks.size() - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"Noted. I\u0027ve removed this task:\" + System.lineSeparator()","lastModifiedDate":"2022-09-23"},{"lineNumber":77,"author":{"gitId":"kohnh"},"content":"                + task + System.lineSeparator() + \"Now you have \" + numTasks","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"kohnh"},"content":"                + \" tasks in the list.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":80,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":81,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"kohnh"},"content":"     * Outputs all the current \u003ccode\u003etask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"kohnh"},"content":"     * @param tasks stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"kohnh"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2022-09-25"},{"lineNumber":87,"author":{"gitId":"kohnh"},"content":"        StringBuilder listMessage \u003d new StringBuilder();","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"kohnh"},"content":"        listMessage.append(\"Here are the tasks in your list:\").append(System.lineSeparator());","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"kohnh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"kohnh"},"content":"            listMessage.append(i+1).append(\".\").append(tasks.get(i)).append(System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-23"},{"lineNumber":92,"author":{"gitId":"kohnh"},"content":"        formatOutput(listMessage.toString());","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":94,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":95,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":96,"author":{"gitId":"kohnh"},"content":"     * Looks through the \u003ccode\u003eTaskList\u003c/code\u003e for \u003ccode\u003etask\u003c/code\u003es that match the keyword(s) and print it.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"kohnh"},"content":"     * The case of the keyword(s) does not matter.","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":99,"author":{"gitId":"kohnh"},"content":"     * @param tasks       stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":100,"author":{"gitId":"kohnh"},"content":"     * @param keywords    user provided keyword","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":102,"author":{"gitId":"kohnh"},"content":"    public void printMatchList(TaskList tasks, String keywords) {","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"kohnh"},"content":"        Pattern pattern \u003d Pattern.compile(keywords, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"kohnh"},"content":"        StringBuilder matchString \u003d new StringBuilder();","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"kohnh"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-09-25"},{"lineNumber":106,"author":{"gitId":"kohnh"},"content":"        matchString.append(\"Here are the tasks matching \\\"\").append(keywords);","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"kohnh"},"content":"        matchString.append(\"\\\" in your list:\").append(System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"kohnh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"kohnh"},"content":"            if (pattern.matcher(tasks.get(i).getDescription()).find()) {","lastModifiedDate":"2022-09-25"},{"lineNumber":110,"author":{"gitId":"kohnh"},"content":"                matchString.append(i+1).append(\".\").append(tasks.get(i)).append(System.lineSeparator());","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"kohnh"},"content":"                count++;","lastModifiedDate":"2022-09-25"},{"lineNumber":112,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":113,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":114,"author":{"gitId":"kohnh"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2022-09-25"},{"lineNumber":115,"author":{"gitId":"kohnh"},"content":"            formatOutput(matchString.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":117,"author":{"gitId":"kohnh"},"content":"            formatOutput(\"Sorry! There are no tasks matching your specified keyword(s)\");","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":119,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":120,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":121,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":122,"author":{"gitId":"kohnh"},"content":"    public void printEmptyException(String command) {","lastModifiedDate":"2022-09-23"},{"lineNumber":123,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":124,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":125,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":126,"author":{"gitId":"kohnh"},"content":"    public void printWrongCommandException() {","lastModifiedDate":"2022-09-23"},{"lineNumber":127,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-09-23"},{"lineNumber":128,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":129,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":130,"author":{"gitId":"kohnh"},"content":"    public void printTaskOutOfBoundsException() {","lastModifiedDate":"2022-09-23"},{"lineNumber":131,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"☹ OOPS!!! The task number you specified does not exist.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":132,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":133,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":134,"author":{"gitId":"kohnh"},"content":"    public void printFileNotFoundException() {","lastModifiedDate":"2022-09-23"},{"lineNumber":135,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"File not found sorry.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":136,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":137,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":138,"author":{"gitId":"kohnh"},"content":"    public void printNumberFormatException() {","lastModifiedDate":"2022-09-23"},{"lineNumber":139,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"☹ OOPS!!! You did not enter a number.\");","lastModifiedDate":"2022-09-23"},{"lineNumber":140,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":141,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":142,"author":{"gitId":"kohnh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2022-09-24"},{"lineNumber":143,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"☹ OOPS!!! There was no previously saved tasks.\");","lastModifiedDate":"2022-09-24"},{"lineNumber":144,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":145,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":146,"author":{"gitId":"kohnh"},"content":"    public void printExitMessage() {","lastModifiedDate":"2022-09-23"},{"lineNumber":147,"author":{"gitId":"kohnh"},"content":"        formatOutput(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-09-25"},{"lineNumber":148,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":149,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"kohnh":149}},{"path":"src/main/java/duke/exceptions/EmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * Throw this exception when the user enters incomplete inputs.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" * e.g., \u0027mark\u0027 or \u0027todo\u0027","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"public class EmptyException extends Exception {","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"kohnh":8}},{"path":"src/main/java/duke/exceptions/LoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * Throw this exception when previously saved file cannot be loaded.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"public class LoadException extends Exception{","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"kohnh":7}},{"path":"src/main/java/duke/exceptions/TaskOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * Throw this exception when the user specified task index does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"public class TaskOutOfBoundsException extends Exception{","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"kohnh":8}},{"path":"src/main/java/duke/exceptions/WrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.exceptions;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * Throw this command when user enters an unknown command.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"public class WrongCommandException extends Exception{","lastModifiedDate":"2022-09-07"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-07"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-07"}],"authorContributionMap":{"kohnh":8}},{"path":"src/main/java/duke/taskmanager/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.EmptyException;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.WrongCommandException;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.commands.*;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * Checks the user input to detect invalid inputs. If the input is valid it will proceed to detect","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" * the type of command.","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"public class Parser {","lastModifiedDate":"2022-09-23"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     * Checks the user input for valid commands. First checks for valid one word commands before checking","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     * for multiple word commands.","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * @param userInput the \u003ccode\u003eString\u003c/code\u003e that the user input","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     * @return          \u003ccode\u003eCommand\u003c/code\u003e class type representing the user\u0027s command","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"    public static Command parser(String userInput) {","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"        switch (userInput) {","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"        case \"list\":","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        default:","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"            return multiWordParser(userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"     * Checks the user input for valid multiple word commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"     * @param userInput the multiple word \u003ccode\u003eString\u003c/code\u003e that the user input","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"     * @return          \u003ccode\u003eCommand\u003c/code\u003e class type representing the user\u0027s command","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"    public static Command multiWordParser(String userInput) {","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"        String firstWord;","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"            firstWord \u003d userInput.substring(0, userInput.indexOf(\u0027 \u0027));","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"            switch (firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"            case \"mark\":","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"                //Fallthrough","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"            case \"unmark\":","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"                return new MarkCommand(userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"            case \"todo\":","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"                //Fallthrough","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"                //Fallthrough","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"            case \"event\":","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"                return new AddCommand(userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"            case \"delete\":","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"                return new DeleteCommand(userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"            case \"find\":","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"                return new FindCommand(userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"            default:","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"                return new WrongCommand(userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"            try {","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"                checkExceptions(userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"            } catch (EmptyException ee) {","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"                return new EmptyCommand(userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"            } catch (WrongCommandException ee) {","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"kohnh"},"content":"                return new WrongCommand(userInput,userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"kohnh"},"content":"        return new WrongCommand(userInput,userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"kohnh"},"content":"     * Checks if the user input is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"kohnh"},"content":"     * @param userInput              the \u003ccode\u003eString\u003c/code\u003e that the user input","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"kohnh"},"content":"     * @throws EmptyException        the command must have multiple words","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"kohnh"},"content":"     * @throws WrongCommandException the command does not exist and is not valid","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":78,"author":{"gitId":"kohnh"},"content":"    private static void checkExceptions(String userInput) throws EmptyException, WrongCommandException {","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"kohnh"},"content":"        if (userInput.matches(\"mark|unmark|todo|deadline|event|delete|find\")) {","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"kohnh"},"content":"            throw new EmptyException();","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"kohnh"},"content":"            throw new WrongCommandException();","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":85,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"kohnh":85}},{"path":"src/main/java/duke/taskmanager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import java.io.File;","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":" * Manages the saving and loading of \u003ccode\u003etask\u003c/code\u003es.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"public class Storage {","lastModifiedDate":"2022-09-23"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    public final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    public ArrayList\u003cString\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     * Loads previously saved tasks.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @throws FileNotFoundException there was no previously saved tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    public Storage() throws FileNotFoundException {","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"        File f \u003d new File(FILE_PATH); // create a File for the given file path","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-09-24"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"            storedTasks.add(command);","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"     * There are no previously saved task. Create this \u003ccode\u003eStorage\u003c/code\u003e class to save tasks in the future.","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"     * @param ignoredForSaving random text","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"    public Storage(String ignoredForSaving) {","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"     * Saves all current tasks by overriding the file.","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"     * @param toSave       all current tasks formatted as commands","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"     * @throws IOException failed or interrupted I/O operations","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    public void saveTasks(StringBuilder toSave) throws IOException {","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"        File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"        FileWriter fw;","lastModifiedDate":"2022-09-24"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"        if (file.getParentFile().mkdirs()) {","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"            file.createNewFile();","lastModifiedDate":"2022-09-24"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"        fw \u003d new FileWriter(file);","lastModifiedDate":"2022-09-24"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"        fw.write(String.valueOf(toSave));","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"        fw.close();","lastModifiedDate":"2022-09-24"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"kohnh":55}},{"path":"src/main/java/duke/taskmanager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager;","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.LoadException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.commands.Command;","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.tasks.Task;","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":" * Stores all the user\u0027s \u003ccode\u003etask\u003c/code\u003es.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     * Creates an empty \u003ccode\u003eTasList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * Load all the user\u0027s the previously saved \u003ccode\u003etask\u003c/code\u003es.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     * @param storage        where all the previously saved \u003ccode\u003etask\u003c/code\u003es are stored","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"     * @throws LoadException when there is no previously saved \u003ccode\u003etask\u003c/code\u003es","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    public TaskList(Storage storage) throws LoadException {","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        if (storage.storedTasks.isEmpty()) {","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"            throw new LoadException();","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        for (String command : storage.storedTasks) {","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"            Command c \u003d Parser.parser(command);","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"            c.execute(this, ui,storage);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-23"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-23"}],"authorContributionMap":{"kohnh":36}},{"path":"src/main/java/duke/taskmanager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-23"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.LoadException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.commands.Command;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-27"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":" * A Task Manager to keep track of all the tasks that user supplies to it.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"public class TaskManager {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    public static StringBuilder toSave \u003d new StringBuilder();","lastModifiedDate":"2022-09-23"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"    private Storage storage;","lastModifiedDate":"2022-09-23"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    private final UI ui;","lastModifiedDate":"2022-09-24"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     * Manages all the tasks in one \u003ccode\u003eTaskList\u003c/code\u003e. It will check if there is any","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     * previously saved tasks and enter those tasks into the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"    public TaskManager() {","lastModifiedDate":"2022-09-15"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-09-23"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"            tasks \u003d new TaskList(storage);","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"            ui.printFileNotFoundException();","lastModifiedDate":"2022-09-23"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"            storage \u003d new Storage(\"no saved tasks\");","lastModifiedDate":"2022-09-24"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"        } catch (LoadException e) {","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2022-09-24"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     * Keeps on receiving user commands until the user closes the programme. Once the user closes the programme,","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"     * the \u003ccode\u003eTask\u003c/code\u003es in the \u003ccode\u003eTaskList\u003c/code\u003e will be saved.","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"    public void receiveCommands() {","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"        String userInput;","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"        while (!isExit) {","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"            userInput \u003d in.nextLine().trim();","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"            Command c \u003d Parser.parser(userInput);","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"            c.execute(tasks,ui,storage);","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"            isExit \u003d c.isExit;","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-07"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-15"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"            storage.saveTasks(toSave);","lastModifiedDate":"2022-09-24"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-15"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"            System.out.println(\"I/O error...\");","lastModifiedDate":"2022-09-15"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-15"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-15"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-15"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"kohnh":61}},{"path":"src/main/java/duke/taskmanager/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.tasks.Deadline;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.tasks.Event;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.tasks.Todo;","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"import static duke.taskmanager.TaskManager.toSave;","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":" * Add a new \u003ccode\u003etask\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"    public AddCommand(String userInput, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"        super(userInput, firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * Add a new \u003ccode\u003etask\u003c/code\u003e of the user specified type to the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     * Checks for incorrect input.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"            tasks.add(new Todo(userInput, \u0027 \u0027));","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"            ui.printTask(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"            toSave.append(userInput).append(System.lineSeparator());","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"            break;","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"            //Fallthrough","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"        case \"event\":","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"            addDeadlineOrEvent(tasks,ui,userInput,firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"            toSave.append(userInput).append(System.lineSeparator());","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"            break;","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"        default:","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"            ui.printWrongCommandException();","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"     * Adds a \u003ccode\u003edeadline\u003c/code\u003e or \u003ccode\u003eevent\u003c/code\u003e task. If the date and time specified","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"     * by the user is too short(not valid), append a string such that an IndexOutOfBoundsException","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"     * will not be thrown when searching for valid date and time.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"     * @param tasks     stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"     * @param ui        contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"     * @param command   the \u003ccode\u003ecommand\u003c/code\u003e that the user input","lastModifiedDate":"2022-09-29"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"     * @param firstWord first word of \u003ccode\u003ecommand\u003c/code\u003e input","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"    private void addDeadlineOrEvent(TaskList tasks, UI ui, String command, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"        if (command.contains(\"/\")){","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"            int dateTimeLength \u003d command.substring(command.indexOf(\u0027/\u0027)).length();","lastModifiedDate":"2022-09-28"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"            int minLength \u003d \"/at _\".length();","lastModifiedDate":"2022-09-28"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"            if (dateTimeLength \u003c minLength) {","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"                command +\u003d \"error\";","lastModifiedDate":"2022-09-28"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"kohnh"},"content":"            switch (firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":65,"author":{"gitId":"kohnh"},"content":"            case \"deadline\":","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"kohnh"},"content":"                tasks.add(new Deadline(command, \u0027/\u0027));","lastModifiedDate":"2022-09-25"},{"lineNumber":67,"author":{"gitId":"kohnh"},"content":"                break;","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"kohnh"},"content":"            case \"event\":","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"kohnh"},"content":"                tasks.add(new Event(command, \u0027/\u0027));","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"kohnh"},"content":"                break;","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":72,"author":{"gitId":"kohnh"},"content":"            ui.printTask(tasks);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"kohnh"},"content":"            addDeadlineOrEvent(tasks, ui, command + \"/at error\", firstWord);","lastModifiedDate":"2022-09-28"},{"lineNumber":75,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":76,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":77,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":77}},{"path":"src/main/java/duke/taskmanager/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * Abstract base class for all the understood commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"     * Execute the \u003ccode\u003eCommand\u003c/code\u003e base on the type.","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"    public boolean isExit \u003d false;","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"    protected String userInput;","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    protected String firstWord;","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    public Command() {","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        userInput \u003d null;","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"    public Command(String userInput,String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"        this.firstWord \u003d firstWord;","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":32}},{"path":"src/main/java/duke/taskmanager/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.TaskOutOfBoundsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" * Delete a specified \u003ccode\u003etask\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"    public DeleteCommand(String userInput, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"        super(userInput, firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     * Deletes the \u003ccode\u003etask\u003c/code\u003e specified by user in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     * Checks if the user input an existing task.","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"            int startIdx \u003d \"delete \".length();","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"            int pos \u003d Integer.parseInt(this.userInput.substring(startIdx)) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"            if (pos \u003e tasks.size() || pos \u003c 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"                throw new TaskOutOfBoundsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"            ui.printTaskAfterDelete(tasks,pos);","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"            tasks.remove(pos);","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"            ui.printNumberFormatException();","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"        } catch (TaskOutOfBoundsException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"            ui.printTaskOutOfBoundsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":41}},{"path":"src/main/java/duke/taskmanager/commands/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * User input is incomplete.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public class EmptyCommand extends Command{","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    private final String keyword;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     * Stores the \u003ccode\u003eCommand\u003c/code\u003e keyword for which the user has not provided sufficient details.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * @param keyword part of the user input that contains the command keyword","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    public EmptyCommand(String keyword) {","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     * Prints which \u003ccode\u003eCommand\u003c/code\u003e the user has not provided sufficient details.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        ui.printEmptyException(keyword);","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":33}},{"path":"src/main/java/duke/taskmanager/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * Indication to stop and exit the programme.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    public ExitCommand() {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"        super();","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     * Prints exit message before exiting the programme.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        ui.printExitMessage();","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":27}},{"path":"src/main/java/duke/taskmanager/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * Searches for \u003ccode\u003etasks\u003c/code\u003e base on keyword.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    public FindCommand(String userInput, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"        super(userInput, firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * Finds all the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e that contains the user specified keyword(s).","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"        int DescStartIdx \u003d userInput.indexOf(\u0027 \u0027) + 1;","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        String keywords \u003d userInput.substring(DescStartIdx);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"        ui.printMatchList(tasks, keywords);","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":28}},{"path":"src/main/java/duke/taskmanager/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * List out all current \u003ccode\u003etask\u003c/code\u003es.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"     * Lists all current tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"        ui.printList(tasks);","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":22}},{"path":"src/main/java/duke/taskmanager/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.exceptions.TaskOutOfBoundsException;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" * Mark a specified \u003ccode\u003etask\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"    public MarkCommand(String userInput, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"        super(userInput, firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     * Mark or unmark a \u003ccode\u003etask\u003c/code\u003e based on the user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        boolean isMarked \u003d false, isValid \u003d true;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"        switch (firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"            isMarked \u003d true;","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"            break;","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"            break;","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"        default:","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"            isValid \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"        if (isValid) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"            mark(tasks,ui,userInput,isMarked);","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     * Mark whether the \u003ccode\u003etask\u003c/code\u003e specified by user is done.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"     * Checks if the user input an existing task.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"     * @param tasks     stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"     * @param ui        contains the formatted outputs","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"     * @param userInput the \u003ccode\u003eString\u003c/code\u003e that the user input","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"     * @param done      whether the task is done","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"    private void mark(TaskList tasks, UI ui, String userInput, boolean done) {","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"            int startIdx \u003d userInput.substring(0, userInput.indexOf(\u0027 \u0027) + 1).length();","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"            int pos \u003d Integer.parseInt(userInput.substring(startIdx)) - 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"            if (pos \u003e tasks.size() || pos \u003c 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"                throw new TaskOutOfBoundsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"            }","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"            ui.printMark(tasks.get(pos), done);","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"            ui.printNumberFormatException();","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"        } catch (TaskOutOfBoundsException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"            ui.printTaskOutOfBoundsException();","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":63}},{"path":"src/main/java/duke/taskmanager/commands/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.commands;","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import duke.UI;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.Storage;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import duke.taskmanager.TaskList;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":" * Unknown user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"    public WrongCommand(String userInput, String firstWord) {","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"        super(userInput, firstWord);","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     * Prints wrong user input message.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     * @param tasks   stores all the user\u0027s current tasks","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     * @param ui      contains the formatted outputs","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param storage stores the tasks after the programme closes","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"        ui.printWrongCommandException();","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":26}},{"path":"src/main/java/duke/taskmanager/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * A \u003ccode\u003eDeadline task\u003c/code\u003e that has a \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" * This \u003ccode\u003eDeadline\u003c/code\u003e has to be completed by an associated \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"     * Instantiate a new \u003ccode\u003eDeadline\u003c/code\u003e and splits the \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"     * to find the associated date and time.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"     * @param command  user input in the form of \"TASK_TYPE description ADDITIONAL_INFORMATION_FOR_DEADLINE_AND_EVENT\"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     * @param lastChar \u0027/\u0027 which represents a \u003ccode\u003eevent\u003c/code\u003e or \u003ccode\u003edeadline\u003c/code\u003e command","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    public Deadline(String command, Character lastChar) {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"        super(command, lastChar);","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"        int byStartIdx \u003d command.indexOf(\u0027/\u0027) + \"by _\".length();","lastModifiedDate":"2022-09-04"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"        command \u003d command.substring(byStartIdx);","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"        findDateAndTime(command);","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    public String getBy() {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"        return formatDate() + \" \" + this.time;","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eDeadline\u003c/code\u003e is associated with \u0027\u003ccode\u003eD\u003c/code\u003e\u0027.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"     * @return the formatted type","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"        return \"[D]\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"     * Adds the formatted \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e that this","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eDeadline\u003c/code\u003e has to be completed by.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e representing this task","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"        return super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kohnh":48}},{"path":"src/main/java/duke/taskmanager/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * A \u003ccode\u003eEvent task\u003c/code\u003e that has a \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" * This \u003ccode\u003eEvent\u003c/code\u003e occurs at associated \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"public class Event extends Todo {","lastModifiedDate":"2022-08-29"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"     * Instantiate a new \u003ccode\u003eEvent\u003c/code\u003e and splits the \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"     * to find the associated date and time.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"     * @param command  user input in the form of \"TASK_TYPE description ADDITIONAL_INFORMATION_FOR_DEADLINE_AND_EVENT\"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     * @param lastChar \u0027/\u0027 which represents a \u003ccode\u003eevent\u003c/code\u003e or \u003ccode\u003edeadline\u003c/code\u003e command","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    public Event(String command, Character lastChar) {","lastModifiedDate":"2022-08-29"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"        super(command, lastChar);","lastModifiedDate":"2022-08-29"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"        int atStartIdx \u003d command.indexOf(\u0027/\u0027) + \"at _\".length();","lastModifiedDate":"2022-09-08"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"        command \u003d command.substring(atStartIdx);","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"        findDateAndTime(command);","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    public String getAt() {","lastModifiedDate":"2022-08-29"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"        return formatDate() + \" \" + this.time;","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eEvent\u003c/code\u003e is associated with \u0027\u003ccode\u003eE\u003c/code\u003e`.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"     * @return the formatted type","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"        return \"[E]\";","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"     * Adds the formatted \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e that this","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eEvent\u003c/code\u003e occurs at.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e representing this task","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"        return super.toString() + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kohnh":46}},{"path":"src/main/java/duke/taskmanager/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":" * Represents the simplest task.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"    protected String description;","lastModifiedDate":"2022-08-26"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"    protected abstract String  getTypeIcon();","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"     * Getter for if \u003ccode\u003etask\u003c/code\u003e is done.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"     * @return whether \u003ccode\u003etask\u003c/code\u003e is done","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-26"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"        // mark done task with X","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"        return (this.isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"    public String getDescription() {","lastModifiedDate":"2022-08-26"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"        return this.description;","lastModifiedDate":"2022-08-29"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-08-26"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-26"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-26"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2022-08-26"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-26"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"     * Output in the format [type][done status] description.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"     * @return formatted \u003ccode\u003eString\u003c/code\u003e representing this task","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-08-29"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"    public String toString() {","lastModifiedDate":"2022-08-29"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"        return this.getTypeIcon() + this.getStatusIcon()","lastModifiedDate":"2022-08-29"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"                + this.getDescription();","lastModifiedDate":"2022-08-29"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-08-29"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"     * Mark current task done or not done.","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"     * @param  done whether task is done","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"     * @return output message to be formatted","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"    public String markDone(boolean done) {","lastModifiedDate":"2022-09-07"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"        setDone(done);","lastModifiedDate":"2022-08-29"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"        StringBuilder markMessage \u003d new StringBuilder();","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"        if (done) {","lastModifiedDate":"2022-08-29"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"            markMessage.append(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"            markMessage.append(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"        markMessage.append(System.lineSeparator()).append(this);","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"        return String.valueOf(markMessage);","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-08-26"}],"authorContributionMap":{"kohnh":62}},{"path":"src/main/java/duke/taskmanager/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"package duke.taskmanager.tasks;","lastModifiedDate":"2022-09-08"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"import java.util.Date;","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":" * A \u003ccode\u003eTodo task\u003c/code\u003e that only has \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":" * Does not have an associated \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-29"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"    protected LocalDate date;","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"kohnh"},"content":"    protected String time;","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"kohnh"},"content":"     * Parses the command base on type of task to set description.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"kohnh"},"content":"     * @param command  user input in the form of \"TASK_TYPE description ADDITIONAL_INFORMATION_FOR_DEADLINE_AND_EVENT\"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kohnh"},"content":"     * @param lastChar \u0027 \u0027 represents a \u003ccode\u003etodo\u003c/code\u003e command while","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"kohnh"},"content":"     *                 \u0027/\u0027 represents a \u003ccode\u003eevent\u003c/code\u003e or \u003ccode\u003edeadline\u003c/code\u003e command","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"kohnh"},"content":"    public Todo(String command, Character lastChar) {","lastModifiedDate":"2022-08-29"},{"lineNumber":25,"author":{"gitId":"kohnh"},"content":"        int DescStartIdx \u003d command.indexOf(\u0027 \u0027) + 1;","lastModifiedDate":"2022-08-29"},{"lineNumber":26,"author":{"gitId":"kohnh"},"content":"        String description;","lastModifiedDate":"2022-08-29"},{"lineNumber":27,"author":{"gitId":"kohnh"},"content":"        if (lastChar.equals(\u0027 \u0027)) {","lastModifiedDate":"2022-08-29"},{"lineNumber":28,"author":{"gitId":"kohnh"},"content":"            description \u003d command.substring(DescStartIdx);","lastModifiedDate":"2022-08-29"},{"lineNumber":29,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-08-29"},{"lineNumber":30,"author":{"gitId":"kohnh"},"content":"            int DescEndIdx \u003d command.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-08-29"},{"lineNumber":31,"author":{"gitId":"kohnh"},"content":"            description \u003d command.substring(DescStartIdx, DescEndIdx);","lastModifiedDate":"2022-08-29"},{"lineNumber":32,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-08-29"},{"lineNumber":33,"author":{"gitId":"kohnh"},"content":"        setDescription(description);","lastModifiedDate":"2022-08-29"},{"lineNumber":34,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-08-29"},{"lineNumber":35,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"kohnh"},"content":"     * Separates a date and time \u003ccode\u003eString\u003c/code\u003e of a specific format into a \u003ccode\u003edate\u003c/code\u003e date","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"kohnh"},"content":"     * and a \u003ccode\u003eString\u003c/code\u003e time. If the \u003ccode\u003eString\u003c/code\u003e is not of the specified","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"kohnh"},"content":"     * format, the date and time will be set to a week from current time.","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"kohnh"},"content":"     * @param dateAndTime date and time of format \"yyyy-MM-dd HHmm\u0027","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"kohnh"},"content":"    public void findDateAndTime(String dateAndTime) {","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"kohnh"},"content":"        try {","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"kohnh"},"content":"            Date dateTime \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\").parse(dateAndTime);","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"kohnh"},"content":"            date \u003d LocalDate.parse(new SimpleDateFormat(\"yyyy-MM-dd\").format(dateTime));","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"kohnh"},"content":"            time \u003d new SimpleDateFormat(\"h:mm aa\").format(dateTime);","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"kohnh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"kohnh"},"content":"            System.out.println(\"Sorry. Date and Time cannot be parsed\");","lastModifiedDate":"2022-09-25"},{"lineNumber":50,"author":{"gitId":"kohnh"},"content":"            date \u003d LocalDate.now().plusWeeks(1);","lastModifiedDate":"2022-09-28"},{"lineNumber":51,"author":{"gitId":"kohnh"},"content":"            time \u003d new SimpleDateFormat(\"h:mm aa\").format(new Date());","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-25"},{"lineNumber":53,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"kohnh"},"content":"     * Format the date to a specified format.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-29"},{"lineNumber":58,"author":{"gitId":"kohnh"},"content":"     * @return formatted date","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-29"},{"lineNumber":60,"author":{"gitId":"kohnh"},"content":"    public String formatDate() {","lastModifiedDate":"2022-09-25"},{"lineNumber":61,"author":{"gitId":"kohnh"},"content":"        if (date !\u003d null){","lastModifiedDate":"2022-09-28"},{"lineNumber":62,"author":{"gitId":"kohnh"},"content":"            return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-09-25"},{"lineNumber":63,"author":{"gitId":"kohnh"},"content":"        } else {","lastModifiedDate":"2022-09-28"},{"lineNumber":64,"author":{"gitId":"kohnh"},"content":"            return \"\";","lastModifiedDate":"2022-09-28"},{"lineNumber":65,"author":{"gitId":"kohnh"},"content":"        }","lastModifiedDate":"2022-09-28"},{"lineNumber":66,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":67,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"kohnh"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"kohnh"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"kohnh"},"content":"     * \u003ccode\u003eTodo\u003c/code\u003e is associated with \u0027\u003ccode\u003eT\u003c/code\u003e\u0027.","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"kohnh"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"kohnh"},"content":"     * @return the formatted type","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"kohnh"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"kohnh"},"content":"    @Override","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"kohnh"},"content":"    protected String getTypeIcon() {","lastModifiedDate":"2022-09-29"},{"lineNumber":76,"author":{"gitId":"kohnh"},"content":"        return \"[T]\";","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"kohnh"},"content":"    }","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"kohnh"},"content":"}","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kohnh":78}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"todo borrow book","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"deadline return book /by 2022-12-02 1800","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"event project meeting /at 2022-11-01 2359","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"deadline hello","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"kohnh":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kohnh"},"content":"list","lastModifiedDate":"2022-08-29"},{"lineNumber":2,"author":{"gitId":"kohnh"},"content":"todo borrow book","lastModifiedDate":"2022-09-08"},{"lineNumber":3,"author":{"gitId":"kohnh"},"content":"deadline return book /by 2022-12-02 1800","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"kohnh"},"content":"event project meeting /at 2022-11-01 2359","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"kohnh"},"content":"list","lastModifiedDate":"2022-08-29"},{"lineNumber":6,"author":{"gitId":"kohnh"},"content":"find project","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"mark 1","lastModifiedDate":"2022-09-08"},{"lineNumber":8,"author":{"gitId":"kohnh"},"content":"delete 2","lastModifiedDate":"2022-09-15"},{"lineNumber":9,"author":{"gitId":"kohnh"},"content":"list","lastModifiedDate":"2022-09-08"},{"lineNumber":10,"author":{"gitId":"kohnh"},"content":"mark","lastModifiedDate":"2022-09-08"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"mark 0","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"kohnh"},"content":"mark hello","lastModifiedDate":"2022-09-08"},{"lineNumber":13,"author":{"gitId":"kohnh"},"content":"deadline hello","lastModifiedDate":"2022-09-08"},{"lineNumber":14,"author":{"gitId":"kohnh"},"content":"bye","lastModifiedDate":"2022-08-29"}],"authorContributionMap":{"kohnh":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"kohnh"},"content":"if exist data\\ rmdir /S /Q data\\","lastModifiedDate":"2022-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"kohnh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exceptions\\*.java ..\\src\\main\\java\\duke\\taskmanager\\*.java ..\\src\\main\\java\\duke\\taskmanager\\tasks\\*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"kohnh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kohnh":3,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kohnh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exceptions/*.java ../src/main/java/duke/taskmanager/*.java ../src/main/java/duke/taskmanager/tasks/*.java","lastModifiedDate":"2022-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kohnh"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kohnh":2,"-":36}}]
