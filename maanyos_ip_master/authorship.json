[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"# Duke User Guide","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"**Duke is a task manager application run on the command line interface  ","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"Duke is powered by Slave Kai, Zhou Zhou\u0027s 256 IQ bot**","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"**Duke recognises 3 types of tasks: ToDos, Deadlines and Events**","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"\u003e ### Add tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"\u003eAdd a new task to track  ","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"\u003e Each task has a completion status and task description  ","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"\u003e Each deadline \u0026 event has a date and optional time","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"\u003e ### Modify tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"\u003eMake changes to existing tasks:","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"\u003e- Mark a task as done or not done (tasks done are marked with \u0027X\u0027)","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"\u003e- Delete a task *(this action is irreversible!)*","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"\u003e ### View tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"\u003eList all tasks, or filter tasks by:","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"\u003e- keyword - tasks containing the keyword in their description","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"\u003e- date - tasks (of types deadline and event) before, on, or after a particular date","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"\u003e- completion status - tasks that are done or not done","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"\u003e\u003e **Tasks are displayed in the format:**","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"\u003e\u003e{number}.[{type}][{done status}] {description} ({date} {time} (if applicable))  ","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"\u003e\u003e**Example:**","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"\u003e\u003e3.[D][X] make a new friend (31 Dec 2021 23:59)","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"\u003e\u003eTasks are displayed in the order by which they were added","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"\u003e ### Save and load tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will save your tasks and reload them the next time you run Duke  ","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"\u003e The saved tasks are stored in src/main/java/duke/data/data.txt  ","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"\u003e Slave Kai will automatically create a new save file if one does not exist","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"**Deadlines and events must be associated with a date, but a time is optional  ","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"All dates must be entered in the format dd-mm-yyyy, eg. 22-7-2026  ","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"All times must be entered in the format hhmm in 24hr notation, eg. 2359**","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"\u003e ### `bye` - to exit Duke","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will end Duke program and save tasks, if any","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"`bye`","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Slave Kai ends Duke program and saves tasks, if any","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"\u003e\u003ePlease don\u0027t go :(","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"\u003e\u003e------------------------------","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"\u003e\u003eSlaving tasks......","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"\u003e ### `help` - to try asking for help","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will consider helping","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"\u003e `help`","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":73,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"maanyos"},"content":"\u003e Slave Kai\u0027s decision to help","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":76,"author":{"gitId":"maanyos"},"content":"\u003e\u003eYou asked for help, but I don\u0027t feel like helping ;p","lastModifiedDate":"2022-09-20"},{"lineNumber":77,"author":{"gitId":"maanyos"},"content":"\u003e\u003eMaybe try saying the magic word?","lastModifiedDate":"2022-09-20"},{"lineNumber":78,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":81,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":82,"author":{"gitId":"maanyos"},"content":"\u003e ### `please` - to actually get help","lastModifiedDate":"2022-09-20"},{"lineNumber":83,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":84,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":86,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will display help message","lastModifiedDate":"2022-09-20"},{"lineNumber":87,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":88,"author":{"gitId":"maanyos"},"content":"\u003e `please`","lastModifiedDate":"2022-09-20"},{"lineNumber":89,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":90,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":91,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Help message displaying available commands","lastModifiedDate":"2022-09-20"},{"lineNumber":92,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":93,"author":{"gitId":"maanyos"},"content":"\u003e\u003eSlave Kai is glad to help! ","lastModifiedDate":"2022-09-20"},{"lineNumber":94,"author":{"gitId":"maanyos"},"content":"\u003e\u003eAvailable commands: ","lastModifiedDate":"2022-09-20"},{"lineNumber":95,"author":{"gitId":"maanyos"},"content":"\u003e\u003ebye - to exit Duke","lastModifiedDate":"2022-09-20"},{"lineNumber":96,"author":{"gitId":"maanyos"},"content":"\u003e\u003ehelp - to try asking for help","lastModifiedDate":"2022-09-20"},{"lineNumber":97,"author":{"gitId":"maanyos"},"content":"\u003e\u003eplease - to actually get help","lastModifiedDate":"2022-09-20"},{"lineNumber":98,"author":{"gitId":"maanyos"},"content":"\u003e\u003etodo {description} - to add a new todo","lastModifiedDate":"2022-09-20"},{"lineNumber":99,"author":{"gitId":"maanyos"},"content":"\u003e\u003eevent {description} /{date} {time (optional)} - to add a new event","lastModifiedDate":"2022-09-20"},{"lineNumber":100,"author":{"gitId":"maanyos"},"content":"\u003e\u003edeadline {description} /{date} {time (optional)} - to add a new deadline","lastModifiedDate":"2022-09-20"},{"lineNumber":101,"author":{"gitId":"maanyos"},"content":"\u003e\u003emark/unmark {task number} - to mark a task as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":102,"author":{"gitId":"maanyos"},"content":"\u003e\u003edelete {task number} - to delete a task","lastModifiedDate":"2022-09-20"},{"lineNumber":103,"author":{"gitId":"maanyos"},"content":"\u003e\u003elist - to list all tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":104,"author":{"gitId":"maanyos"},"content":"\u003e\u003efind {keyword} - to list tasks containing {keyword}","lastModifiedDate":"2022-09-20"},{"lineNumber":105,"author":{"gitId":"maanyos"},"content":"\u003e\u003edone/undone - to list tasks that are marked as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":106,"author":{"gitId":"maanyos"},"content":"\u003e\u003eon/before/after {date} - to list tasks on/before/after {date}","lastModifiedDate":"2022-09-20"},{"lineNumber":107,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":108,"author":{"gitId":"maanyos"},"content":"\u003e\u003eNote: all dates must be entered in the format dd-mm-yyyy, eg. 22-7-2026","lastModifiedDate":"2022-09-20"},{"lineNumber":109,"author":{"gitId":"maanyos"},"content":"\u003e\u003eand all times must be entered in the format hhmm, eg. 2359","lastModifiedDate":"2022-09-20"},{"lineNumber":110,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":111,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":112,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":113,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":114,"author":{"gitId":"maanyos"},"content":"\u003e ### `todo {description}` - to add a new todo","lastModifiedDate":"2022-09-20"},{"lineNumber":115,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":116,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":117,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":118,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will add a new todo with {description}","lastModifiedDate":"2022-09-20"},{"lineNumber":119,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":120,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `todo find a girlfriend`","lastModifiedDate":"2022-09-20"},{"lineNumber":121,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":122,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":123,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Todo is created","lastModifiedDate":"2022-09-20"},{"lineNumber":124,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":125,"author":{"gitId":"maanyos"},"content":"\u003e\u003eTask added:","lastModifiedDate":"2022-09-20"},{"lineNumber":126,"author":{"gitId":"maanyos"},"content":"\u003e\u003e1.[T][ ] find a girlfriend","lastModifiedDate":"2022-09-20"},{"lineNumber":127,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":128,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":129,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":130,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":131,"author":{"gitId":"maanyos"},"content":"\u003e ### `event {description} /{date} {time}` - to add a new event","lastModifiedDate":"2022-09-20"},{"lineNumber":132,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":133,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":134,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":135,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will add a new event with {description} on {date} at {time (optional)}","lastModifiedDate":"2022-09-20"},{"lineNumber":136,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":137,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `event go on a date /1-1-2066`","lastModifiedDate":"2022-09-20"},{"lineNumber":138,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":139,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":140,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Event is created","lastModifiedDate":"2022-09-20"},{"lineNumber":141,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":142,"author":{"gitId":"maanyos"},"content":"\u003e\u003eTask added:","lastModifiedDate":"2022-09-20"},{"lineNumber":143,"author":{"gitId":"maanyos"},"content":"\u003e\u003e2.[E][ ] go on a date (1 Jan 2066)","lastModifiedDate":"2022-09-20"},{"lineNumber":144,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":145,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":146,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":147,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":148,"author":{"gitId":"maanyos"},"content":"\u003e ### `deadline {description} /{date} {time}` - to add a new deadline","lastModifiedDate":"2022-09-20"},{"lineNumber":149,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":150,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":151,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":152,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will add a new deadline with {description} on {date} at {time (optional)}","lastModifiedDate":"2022-09-20"},{"lineNumber":153,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":154,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `deadline make a new friend /31-12-2021 2359`","lastModifiedDate":"2022-09-20"},{"lineNumber":155,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":156,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":157,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Deadline is created","lastModifiedDate":"2022-09-20"},{"lineNumber":158,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":159,"author":{"gitId":"maanyos"},"content":"\u003e\u003eTask added:","lastModifiedDate":"2022-09-20"},{"lineNumber":160,"author":{"gitId":"maanyos"},"content":"\u003e\u003e3.[D][ ] make a new friend (31 Dec 2021 23:59)","lastModifiedDate":"2022-09-20"},{"lineNumber":161,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":162,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":163,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":164,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":165,"author":{"gitId":"maanyos"},"content":"\u003e ### `mark/unmark {task number}` - to mark a task as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":166,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":167,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":168,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":169,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will mark that task as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":170,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":171,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `mark 3`","lastModifiedDate":"2022-09-20"},{"lineNumber":172,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":173,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":174,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Task is marked as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":175,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":176,"author":{"gitId":"maanyos"},"content":"\u003e\u003eWell done. I\u0027ve marked this task as done:","lastModifiedDate":"2022-09-20"},{"lineNumber":177,"author":{"gitId":"maanyos"},"content":"\u003e\u003e3.[D][X] make a new friend (31 Dec 2021 23:59)","lastModifiedDate":"2022-09-20"},{"lineNumber":178,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":179,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":180,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"maanyos"},"content":"\u003e ### `delete {task number}` - to delete a task","lastModifiedDate":"2022-09-20"},{"lineNumber":183,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":184,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":185,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":186,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will delete that task (irreversible!)","lastModifiedDate":"2022-09-20"},{"lineNumber":187,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":188,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `delete 3`","lastModifiedDate":"2022-09-20"},{"lineNumber":189,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":190,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":191,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Task is deleted","lastModifiedDate":"2022-09-20"},{"lineNumber":192,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":193,"author":{"gitId":"maanyos"},"content":"\u003e\u003eTask deleted:","lastModifiedDate":"2022-09-20"},{"lineNumber":194,"author":{"gitId":"maanyos"},"content":"\u003e\u003e3.[D][X] make a new friend (31 Dec 2021 23:59)","lastModifiedDate":"2022-09-20"},{"lineNumber":195,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":196,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":197,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"maanyos"},"content":"\u003e ### `list` - to list all tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":200,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":201,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":202,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":203,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will list all tasks and total number of tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":204,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":205,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `list`","lastModifiedDate":"2022-09-20"},{"lineNumber":206,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":207,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":208,"author":{"gitId":"maanyos"},"content":"\u003e \u003e All tasks in Slave Kai\u0027s memory","lastModifiedDate":"2022-09-20"},{"lineNumber":209,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":210,"author":{"gitId":"maanyos"},"content":"\u003e\u003eYou have 2 tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":211,"author":{"gitId":"maanyos"},"content":"\u003e\u003e1.[T][ ] find a girlfriend","lastModifiedDate":"2022-09-20"},{"lineNumber":212,"author":{"gitId":"maanyos"},"content":"\u003e\u003e2.[E][ ] go on a date (1 Jan 2066)","lastModifiedDate":"2022-09-20"},{"lineNumber":213,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":214,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":215,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"maanyos"},"content":"\u003e ### `find {keyword}` - to list tasks containing {keyword}","lastModifiedDate":"2022-09-20"},{"lineNumber":218,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":219,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":220,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":221,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will list tasks containing {keyword} in task description","lastModifiedDate":"2022-09-20"},{"lineNumber":222,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":223,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `find friend`","lastModifiedDate":"2022-09-20"},{"lineNumber":224,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":225,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":226,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Tasks containing friend in task description","lastModifiedDate":"2022-09-20"},{"lineNumber":227,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":228,"author":{"gitId":"maanyos"},"content":"\u003e\u003eSlave Kai found these 1 tasks:","lastModifiedDate":"2022-09-20"},{"lineNumber":229,"author":{"gitId":"maanyos"},"content":"\u003e\u003e1.[T][ ] find a girlfriend","lastModifiedDate":"2022-09-20"},{"lineNumber":230,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":231,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":232,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":234,"author":{"gitId":"maanyos"},"content":"\u003e ### `done/undone` - to list tasks that are marked as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":235,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":236,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":237,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":238,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will list tasks that are marked as done/not done","lastModifiedDate":"2022-09-20"},{"lineNumber":239,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":240,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `undone`","lastModifiedDate":"2022-09-20"},{"lineNumber":241,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":242,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":243,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Tasks marked as not done","lastModifiedDate":"2022-09-20"},{"lineNumber":244,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":245,"author":{"gitId":"maanyos"},"content":"\u003e\u003eSlave Kai found these 2 tasks:","lastModifiedDate":"2022-09-20"},{"lineNumber":246,"author":{"gitId":"maanyos"},"content":"\u003e\u003e1.[T][ ] find a girlfriend","lastModifiedDate":"2022-09-20"},{"lineNumber":247,"author":{"gitId":"maanyos"},"content":"\u003e\u003e2.[E][ ] go on a date (1 Jan 2066)","lastModifiedDate":"2022-09-20"},{"lineNumber":248,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":249,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":250,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"maanyos"},"content":"\u003e ### `on/before/after {date}` - to list tasks on/before/after {date}","lastModifiedDate":"2022-09-20"},{"lineNumber":253,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":254,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":255,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":256,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will list tasks (of types deadline and event) on/before/after {date}","lastModifiedDate":"2022-09-20"},{"lineNumber":257,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":258,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `after 22-7-2026`","lastModifiedDate":"2022-09-20"},{"lineNumber":259,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":260,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":261,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Tasks (of types deadline and event) after {date}","lastModifiedDate":"2022-09-20"},{"lineNumber":262,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":263,"author":{"gitId":"maanyos"},"content":"\u003e\u003eSlave Kai found these 1 tasks:","lastModifiedDate":"2022-09-20"},{"lineNumber":264,"author":{"gitId":"maanyos"},"content":"\u003e\u003e2.[E][ ] go on a date (1 Jan 2066)","lastModifiedDate":"2022-09-20"},{"lineNumber":265,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":266,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":267,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":269,"author":{"gitId":"maanyos"},"content":"\u003e ### `hi` - to greet Slave Kai","lastModifiedDate":"2022-09-20"},{"lineNumber":270,"author":{"gitId":"maanyos"},"content":"\u003e\u003cdetails\u003e\u003csummary\u003edetails\u003c/summary\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":271,"author":{"gitId":"maanyos"},"content":"\u003e\u003cp\u003e  ","lastModifiedDate":"2022-09-20"},{"lineNumber":272,"author":{"gitId":"maanyos"},"content":"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":273,"author":{"gitId":"maanyos"},"content":"\u003eSlave Kai will respond with a greeting","lastModifiedDate":"2022-09-20"},{"lineNumber":274,"author":{"gitId":"maanyos"},"content":"\u003e\u003e Example of usage:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":275,"author":{"gitId":"maanyos"},"content":"\u003e \u003e `hi`","lastModifiedDate":"2022-09-20"},{"lineNumber":276,"author":{"gitId":"maanyos"},"content":"\u003e\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":277,"author":{"gitId":"maanyos"},"content":"\u003e\u003eExpected outcome:  ","lastModifiedDate":"2022-09-20"},{"lineNumber":278,"author":{"gitId":"maanyos"},"content":"\u003e \u003e Slave Kai\u0027s response","lastModifiedDate":"2022-09-20"},{"lineNumber":279,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":280,"author":{"gitId":"maanyos"},"content":"\u003e\u003eHowdy!","lastModifiedDate":"2022-09-20"},{"lineNumber":281,"author":{"gitId":"maanyos"},"content":"\u003e\u003e```","lastModifiedDate":"2022-09-20"},{"lineNumber":282,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/p\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":283,"author":{"gitId":"maanyos"},"content":"\u003e\u003c/details\u003e","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"maanyos":266,"-":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.command.Command;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.command.LoadCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":" * This is Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Controls high level flow of Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    private static Ui ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    private static TaskList taskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    private static Storage storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-15"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Constructs Duke with ui, taskList and storage objects","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public Duke() {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"     * Constructs Duke object and attempts to load previous tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"    public static void startDuke() {","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"        new Duke();","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        Command loadCommand \u003d new LoadCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        loadCommand.execute(taskList, ui, storage);","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"     * Attempts to save current tasks before exiting Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    public static void stopDuke() {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"        Command saveCommand \u003d new SaveCommand();","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"        saveCommand.execute(taskList, ui, storage);","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     * Starts Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     * Reads and executes command from user until user wants to exit","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * Stops Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"     * @param args user inputs","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"        startDuke();","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"        boolean isProgramFinished \u003d false;","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"        while (!isProgramFinished) {","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"            try {","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"                String input \u003d ui.input();","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"                ui.line();","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"                isProgramFinished \u003d command.isExitCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-09-03"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"                e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"            } finally {","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"                ui.line();","lastModifiedDate":"2022-09-18"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-11"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-11"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"        stopDuke();","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"maanyos":70,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.command.*;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Converts user inputs into Duke commands","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class Parser {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"     * Interprets user inputs as Duke commands","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"     * @param input user input containing command and parameters","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * @return type of command and its parameters","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if command fails to execute","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"        String userCommand \u003d input.split(\" \")[0];","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"        String arguments \u003d input.substring(userCommand.length());","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"        switch (userCommand) {","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"        case \"hi\":","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"            return new HiCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        case \"help\":","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"        case \"please\":","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"            return new PleaseCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        case \"list\":","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"        case \"find\":","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"            return new FindCommand(arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"        case \"done\":","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"            return new StatusCommand(\"done\");","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        case \"undone\":","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            return new StatusCommand(\"undone\");","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"        case \"on\":","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"            return new DateCommand(arguments.trim(), \"on\");","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"        case \"before\":","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"            return new DateCommand(arguments.trim(), \"before\");","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"        case \"after\":","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"            return new DateCommand(arguments.trim(), \"after\");","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"        case \"mark\":","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"            return new MarkCommand(arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"        case \"unmark\":","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"            return new UnmarkCommand(arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"        case \"delete\":","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"            return new DeleteCommand(arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"        case \"todo\":","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"            return new AddCommand(TaskType.TODO, arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"        case \"event\":","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"            return new AddCommand(TaskType.EVENT, arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"        case \"deadline\":","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"            return new AddCommand(TaskType.DEADLINE, arguments.trim());","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"        case \"bye\":","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"        default:","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":62}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents all communications with user","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class Ui {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public Ui() {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"        greet();","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * Prints line separator","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    public void line() {","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"        System.out.println(\"------------------------------\");","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * Prints welcome message","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    public void greet() {","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        line();","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        System.out.println(\"Hi! I\u0027m Slave Kai, Zhou Zhou\u0027s 256IQ bot\\nHow can I help you?\");","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"        line();","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"     * Reads user input from terminal","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"     * @return user input","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"    public String input() {","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"        return in.nextLine();","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * Prints output to terminal","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"     * @param output Varargs output for printing","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"    public void output(String... output) {","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"        for (String line : output) {","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"            System.out.println(line);","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":59}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskType;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" * Represents command for adding a new task to taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    private final String arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    public AddCommand(TaskType taskType, String arguments) {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * Adds new task of type taskType, with parameters arguments, to taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * Informs user if task addition is successful","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            String task \u003d taskList.addTask(taskType, arguments);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Task added:\", task);","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents commands recognised by Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    public Command() {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * Executes the command, and informs user on the outcome of execution","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * This method is overridden in each specific command","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     * Checks if user entered command to exit Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * This method is overridden in ExitCommand","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     * @return true if user entered command to exit, false otherwise","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        return false;","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":34}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.InvalidTaskDateTimeDukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import duke.task.Event;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":" * Represents command for searching tasks by date","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":" * User can search for tasks before, on, or after a particular date","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"    private final String dateComparator;","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     * Constructs DateCommand object after converting user input into LocalDate","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"     * @param date           date entered by user as string","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"     * @param dateComparator comparator for search entered by user as string","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if date is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"    public DateCommand(String date, String dateComparator) throws DukeException {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskDateTimeDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"        this.dateComparator \u003d dateComparator;","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"     * Prints all tasks in taskList matching date and comparator specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"     * Informs user if no matching tasks were found","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d extractMatchingTasks(taskList);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"        if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Slave Kai found these \" + matchingTasks.size() + \" tasks:\");","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"                ui.output(task.listTask(taskList.tasks));","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"        } else {","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Nothing found, better luck next time\");","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"     * Extracts all tasks in taskList matching date and comparator specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"     * @return ArrayList of tasks matching comparator","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"    public ArrayList\u003cTask\u003e extractMatchingTasks(TaskList taskList) {","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"        return (ArrayList\u003cTask\u003e) taskList.tasks.stream()","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"maanyos"},"content":"                .filter(t -\u003e (t instanceof Deadline \u0026\u0026 isMatch(((Deadline) t).getDate()))","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"maanyos"},"content":"                        || (t instanceof Event \u0026\u0026 isMatch(((Event) t).getDate())))","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"maanyos"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"maanyos"},"content":"     * Compares task date with date specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"maanyos"},"content":"     * @param date task date","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"maanyos"},"content":"     * @return true if task date matches comparator, false otherwise","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"maanyos"},"content":"    private boolean isMatch(LocalDate date) {","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"maanyos"},"content":"        switch (dateComparator) {","lastModifiedDate":"2022-09-20"},{"lineNumber":85,"author":{"gitId":"maanyos"},"content":"        case \"on\":","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"maanyos"},"content":"            return date.equals(this.date);","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"maanyos"},"content":"        case \"before\":","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"maanyos"},"content":"            return date.isBefore(this.date);","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"maanyos"},"content":"        case \"after\":","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"maanyos"},"content":"            return date.isAfter(this.date);","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"maanyos"},"content":"        default:","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"maanyos"},"content":"            return false;","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":96,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"maanyos":96}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents command for deleting a task from taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    private final String arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    public DeleteCommand(String arguments) {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Deletes a task from taskList after extracting task number from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Informs user if task deletion is successful","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            String task \u003d taskList.deleteTask(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Task deleted:\", task);","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":37}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents command for exiting Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"     * Informs user that Duke is terminating","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Please don\u0027t go :(\");","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * Updates Duke that user has entered command to exit","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * @return true when Duke checks if user wants to exit","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"        return true;","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.MissingKeywordDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" * Represents command for searching tasks by keyword","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":" * Search only looks through task names","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    private final String keyword;","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     * Prints all tasks in taskList matching keyword specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * Informs user if no matching tasks were found","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            ArrayList\u003cTask\u003e matchingTasks \u003d extractMatchingTasks(taskList);","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"            if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"                ui.output(\"Slave Kai found these \" + matchingTasks.size() + \" tasks:\");","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"                for (Task task : matchingTasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"                    ui.output(task.listTask(taskList.tasks));","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"                }","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"            } else {","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"                ui.output(\"Nothing found, better luck next time\");","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"     * Extracts all tasks in taskList matching keyword specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"     * @return ArrayList of tasks matching keyword","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if keyword is empty","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"    private ArrayList\u003cTask\u003e extractMatchingTasks(TaskList taskList) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"        if (keyword.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-18"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"            throw new MissingKeywordDukeException();","lastModifiedDate":"2022-09-18"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"        return (ArrayList\u003cTask\u003e) taskList.tasks.stream()","lastModifiedDate":"2022-09-18"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"                .filter(t -\u003e t.getName().contains(keyword))","lastModifiedDate":"2022-09-18"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-18"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":66}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents command for trying to help user","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    public HelpCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * Informs user to ask for help again using different command","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        ui.output(\"You asked for help, but I don\u0027t feel like helping ;p\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"                \"Maybe try saying the magic word?\");","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":27}},{"path":"src/main/java/duke/command/HiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents command for greeting user","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class HiCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    public HiCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"        super();","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * Responds to user\u0027s greeting","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Howdy!\");","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":28}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents command for invalid input from user","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    public InvalidCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * Informs user of invalid input command and how to ask for help","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Invalid input. Boo! Please type help for help\");","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents command for listing all tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public ListCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * Informs user of total number of tasks, then lists all tasks in taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        ui.output(\"You have \" + taskList.tasks.size() + \" tasks\");","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"        for (Task task : taskList.tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"            ui.output(task.listTask(taskList.tasks));","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":30}},{"path":"src/main/java/duke/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.exception.LoadErrorDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.exception.MissingDataFileDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" * Represents command for loading tasks from save file","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    public LoadCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     * Loads tasks, if any, from save file","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * Informs user if tasks are successfully loaded","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * Informs user if new save file is created","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            storage.loadTasks(taskList);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"            if (taskList.tasks.size() \u003e 0) {","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"                ui.output(\"Remembering existing tasks......\");","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"                ui.line();","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"                Command command \u003d new ListCommand();","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"                ui.line();","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"            try {","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"                storage.createDataFile();","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"                ui.output(\"Data file created under src/main/java/duke/data/data.txt\");","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"                new MissingDataFileDukeException().handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"            new LoadErrorDukeException().handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":52}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents command for marking a task as done","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    private final String arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    public MarkCommand(String arguments) {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Mark task as done after extracting task number from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Informs user if task marking is successful","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            String task \u003d taskList.markAsDone(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Well done. I\u0027ve marked this task as done:\", task);","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":37}},{"path":"src/main/java/duke/command/PleaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" * Represents command for displaying help message","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"public class PleaseCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    public PleaseCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * Displays available commands to user","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Slave Kai is glad to help! \\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"                \"Available commands: \\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"                \"bye - to exit Duke\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"                \"help - to try asking for help\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"                \"please - to actually get help\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"                \"todo {description} - to add a new todo\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"                \"event {description} /{date} {time (optional)} - to add a new event\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"                \"deadline {description} /{date} {time (optional)} - to add a new deadline\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"                \"mark/unmark {task number} - to mark a task as done/not done\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"                \"delete {task number} - to delete a task\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"                \"list - to list all tasks\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"                \"find {keyword} - to list tasks containing {keyword}\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"                \"done/undone - to list tasks that are marked as done/not done\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"                \"on/before/after {date} - to list tasks on/before/after {date}\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"                \"\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"                \"Note: all dates must be entered in the format dd-mm-yyyy, eg. 22-7-2026\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"                \"and all times must be entered in the format hhmm, eg. 2359\");","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":42}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.exception.MissingDataFileDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Represents command for saving tasks into save file","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    public SaveCommand() {","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Saves tasks, if any, into save file","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Informs user if tasks are successfully saved","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            if (taskList.tasks.size() \u003e 0) {","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"                ui.output(\"Slaving tasks......\");","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"                ui.line();","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            new MissingDataFileDukeException().handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"            ui.output(e.getMessage());","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":43}},{"path":"src/main/java/duke/command/StatusCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.Task;","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Represents command for searching tasks by done status","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" * User can search for tasks marked as done or not done","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"public class StatusCommand extends Command {","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    private final String statusComparator;","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    public StatusCommand(String statusComparator) {","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"        this.statusComparator \u003d statusComparator;","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * Prints all tasks in taskList matching status specified by user","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * Informs user if no matching tasks were found","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing all tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d extractMatchingTasks(taskList);","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        if (matchingTasks.size() \u003e 0) {","lastModifiedDate":"2022-09-20"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Slave Kai found these \" + matchingTasks.size() + \" tasks:\");","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            for (Task task : matchingTasks) {","lastModifiedDate":"2022-09-20"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"                ui.output(task.listTask(taskList.tasks));","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"        } else if (statusComparator.equals(\"done\")) {","lastModifiedDate":"2022-09-20"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Better buck up. You ain\u0027t accomplished nuttin\u0027 yet\");","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"        } else {","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"            ui.output(\"What a legend. You\u0027ve gone and done them all\");","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     * Extracts all tasks in taskList matching status specified by user","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing all tasks","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     * @return ArrayList of tasks matching comparator","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"    public ArrayList\u003cTask\u003e extractMatchingTasks(TaskList taskList) {","lastModifiedDate":"2022-09-20"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"        return (ArrayList\u003cTask\u003e) taskList.tasks.stream()","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"                .filter(t -\u003e (isMatch(t.doneIcon())))","lastModifiedDate":"2022-09-20"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-20"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"     * Compares task date with status specified by user","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"     * @param doneIcon task done status as icon","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"     * @return true if task done status matches comparator, false otherwise","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"    private boolean isMatch(char doneIcon) {","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"        switch (statusComparator) {","lastModifiedDate":"2022-09-20"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"        case \"done\":","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"            return doneIcon \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2022-09-20"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"        case \"undone\":","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"            return doneIcon \u003d\u003d \u0027 \u0027;","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"        default:","lastModifiedDate":"2022-09-20"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"            return false;","lastModifiedDate":"2022-09-20"},{"lineNumber":72,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-20"},{"lineNumber":73,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-20"},{"lineNumber":74,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":75,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"maanyos":75}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.command;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.storage.Storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents command for marking a task as not done","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    private final String arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    public UnmarkCommand(String arguments) {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Mark task as not done after extracting task number from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Informs user if task unmarking is successful","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param taskList ArrayList containing current tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @param ui       Ui object for communicating with user","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * @param storage  Storage object for loading and saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            String task \u003d taskList.markAsNotDone(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            ui.output(\"Boo! I\u0027ve marked this task as not done yet:\", task);","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            e.handle(ui);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":36}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exceptions expected by Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-09-03"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public DukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"     * Informs user of the exception","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"     * Displays valid sample inputs if applicable","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * @param ui Ui for printing message","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Invalid input. Boo! Please type help for help\");","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-03"}],"authorContributionMap":{"maanyos":23}},{"path":"src/main/java/duke/exception/InvalidTaskDateTimeDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception with task date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class InvalidTaskDateTimeDukeException extends DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"    public InvalidTaskDateTimeDukeException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Please specify a date (and time)\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"                \"Follow this format:\\n\" +","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"                \"\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"                \"on/before/after {date in dd-mm-yyyy}\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"                \"Example: after 22-7-2026\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"                \"\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"                \"event/deadline {description} /{date in dd-mm-yyyy} {time (optional) in hhmm 24hr notation}\\n\" +","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"                \"Example: event go on a date /1-1-2066\");","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"maanyos":23}},{"path":"src/main/java/duke/exception/InvalidTaskNumberDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception with task number","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class InvalidTaskNumberDukeException extends DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public InvalidTaskNumberDukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Invalid task number: task does not exist\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"                \"Please try again\");","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":18}},{"path":"src/main/java/duke/exception/LoadErrorDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception when loading tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class LoadErrorDukeException extends DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public LoadErrorDukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Error with loading task\");","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":17}},{"path":"src/main/java/duke/exception/MissingDataFileDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception with missing save file","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class MissingDataFileDukeException extends DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"    public MissingDataFileDukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"        ui.output(\"data file not found\");","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":16}},{"path":"src/main/java/duke/exception/MissingKeywordDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception with missing search keyword","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class MissingKeywordDukeException extends DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"    public MissingKeywordDukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Please enter a keyword\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"                \"Follow this format:\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"                \"\\nbye\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"                \"find {keyword}\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"                \"Example: find friend\");","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":21}},{"path":"src/main/java/duke/exception/MissingTaskNameDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception with missing task name","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class MissingTaskNameDukeException extends DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public MissingTaskNameDukeException() {","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Please describe the task\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"                \"Follow this format:\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"                \"\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"                \"todo {description}\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"                \"Example: todo find a girlfriend\\n\" +","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"                \"\\n\" +","lastModifiedDate":"2022-09-20"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"                \"event/deadline {description} /{date in dd-mm-yyyy} {time(optional) in hhmm 24hr notation}\\n\" +","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"                \"Example: deadline make a new friend /31-12-2021 2359\");","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":24}},{"path":"src/main/java/duke/exception/SaveErrorDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.exception;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.Ui;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":" * Represents exception when saving tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"public class SaveErrorDukeException extends DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"    public SaveErrorDukeException() {","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    public void handle(Ui ui) {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"        ui.output(\"Error with saving task\");","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":17}},{"path":"src/main/java/duke/storage/LoadTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.LoadErrorDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.io.File;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" * Represents operation of loading tasks from save file","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"public class LoadTasks {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * Loads tasks from save file into taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param dataFile Path of save file","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @throws FileNotFoundException if save file does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException         if any task fails to load","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    public static void loadTasks(TaskList taskList, Path dataFile) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        Scanner input \u003d new Scanner(new File(dataFile.toUri()));","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"        while (input.hasNext()) {","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"            String[] line \u003d input.nextLine().split(\" \\\\| \");","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"            String taskType \u003d line[0];","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"            String doneIcon \u003d line[1];","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            Task task;","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            switch (taskType) {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"            case \"T\":","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"                task \u003d new ToDo(line[2]);","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"            case \"E\":","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"                task \u003d new Event(String.format(line[2] + \"/\" + line[3]));","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"            case \"D\":","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"                task \u003d new Deadline(String.format(line[2] + \"/\" + line[3]));","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"                break;","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"            default:","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"                throw new LoadErrorDukeException();","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"            if (doneIcon.equals(\"X\")) {","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"                task.markAsDone();","lastModifiedDate":"2022-09-18"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"            taskList.loadTask(task);","lastModifiedDate":"2022-09-18"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"        input.close();","lastModifiedDate":"2022-09-18"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":51}},{"path":"src/main/java/duke/storage/SaveTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.SaveErrorDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.task.*;","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Represents operation of saving tasks to save file","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"public class SaveTasks {","lastModifiedDate":"2022-09-18"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * Saves tasks from taskList to save file","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     * @param dataFile Path of save file","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @throws IOException   if save file does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if any task fails to save","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public static void saveTasks(TaskList taskList, Path dataFile) throws IOException, DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        FileWriter output \u003d new FileWriter(dataFile.toFile());","lastModifiedDate":"2022-09-18"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        for (Task task : taskList.tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"            String description;","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"                description \u003d task.getName();","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"                description \u003d String.format(task.getName() + \" | \" + ((Deadline) task).saveDateTime());","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"                description \u003d String.format(task.getName() + \" | \" + ((Event) task).saveDateTime());","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            } else {","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"                throw new SaveErrorDukeException();","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-18"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            output.write(String.format(\"%c | %c | %s\",","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"                    task.taskType(), task.doneIcon(), description) + System.lineSeparator());","lastModifiedDate":"2022-09-18"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"        output.close();","lastModifiedDate":"2022-09-18"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":41}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.storage;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-18"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" * Represents operations with save file","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"public class Storage {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    private final Path dataDirectory \u003d Paths.get(\"src/main/java/duke/data/\");","lastModifiedDate":"2022-09-18"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    private final Path dataFile \u003d Paths.get(\"src/main/java/duke/data/data.txt\");","lastModifiedDate":"2022-09-18"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"    public Storage() {","lastModifiedDate":"2022-09-18"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * Creates new save file, and save file directory if necessary","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     * @throws IOException if save file or directory creation fails","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void createDataFile() throws IOException {","lastModifiedDate":"2022-09-18"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        if (!Files.exists(dataDirectory)) {","lastModifiedDate":"2022-09-18"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            Files.createDirectory(dataDirectory);","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-18"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        Files.createFile(dataFile);","lastModifiedDate":"2022-09-18"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"     * Loads tasks from save file into taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"     * @throws FileNotFoundException if save file does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException         if any task fails to load","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    public void loadTasks(TaskList taskList) throws FileNotFoundException, DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"        LoadTasks.loadTasks(taskList, dataFile);","lastModifiedDate":"2022-09-18"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"     * Saves tasks from taskList to save file","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     * @throws IOException   if save file does not exist","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if any task fails to save","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    public void saveTasks(TaskList taskList) throws IOException, DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"        SaveTasks.saveTasks(taskList, dataFile);","lastModifiedDate":"2022-09-18"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Represents task of type deadline","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Constructs a Deadline object","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Sets deadline date \u0026 time after extracting from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name and task date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name or task date \u0026 time are invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    public Deadline(String arguments) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"        super(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        String dateTime \u003d TaskDateTimeParser.extractTaskDateTime(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        this.date \u003d TaskDateTimeParser.extractTaskDate(dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"        this.time \u003d TaskDateTimeParser.extractTaskTime(dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        return date;","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"    public String saveDateTime() {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"        return TaskDateTimeParser.saveDateTime(date, time);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    private String listDateTime() {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"        return TaskDateTimeParser.listDateTime(date, time);","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    public char taskType() {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    public String listTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"        return String.format(\"%s (%s)\", super.listTask(tasks), listDateTime());","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Represents task of type event","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Constructs an Event object","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * Sets event date \u0026 time after extracting from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name and task date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name or task date \u0026 time are invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    public Event(String arguments) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"        super(arguments);","lastModifiedDate":"2022-09-03"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        String dateTime \u003d TaskDateTimeParser.extractTaskDateTime(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        this.date \u003d TaskDateTimeParser.extractTaskDate(dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"        this.time \u003d TaskDateTimeParser.extractTaskTime(dateTime);","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"        return date;","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"    public String saveDateTime() {","lastModifiedDate":"2022-09-19"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"        return TaskDateTimeParser.saveDateTime(date, time);","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"    private String listDateTime() {","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"        return TaskDateTimeParser.listDateTime(date, time);","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    public char taskType() {","lastModifiedDate":"2022-08-27"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    public String listTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"        return String.format(\"%s (%s)\", super.listTask(tasks), listDateTime());","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents tasks recognised by Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-03"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    private String name;","lastModifiedDate":"2022-08-20"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"    private boolean isDone;","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     * Constructs a task object after extracting task name from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * Task is set to not done by default","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name (and task date \u0026 time)","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name is empty","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"    public Task(String arguments) throws DukeException {","lastModifiedDate":"2022-09-03"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"        setName(TaskNameParser.extractTaskName(arguments));","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-09-18"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-18"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"    public void setName(String name) {","lastModifiedDate":"2022-08-20"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-08-20"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"    public String getName() {","lastModifiedDate":"2022-08-20"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"        return name;","lastModifiedDate":"2022-08-20"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-08-20"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-08-20"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-27"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"    public abstract char taskType();","lastModifiedDate":"2022-09-18"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     * Returns icon based on isDone status of task","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * @return X if task is done, whitespace otherwise","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"    public char doneIcon() {","lastModifiedDate":"2022-09-11"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-08-27"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"            return \u0027X\u0027;","lastModifiedDate":"2022-08-20"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-08-20"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"        return \u0027 \u0027;","lastModifiedDate":"2022-08-20"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-20"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-20"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"     * Lists the task for printing purposes","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"     * This method is overridden for task types with date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"     * @return string containing task number, task type, task done icon, task name, task date \u0026 time if any","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"    public String listTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2022-09-18"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"        return String.format(\"%d.[%c][%c] %s\",","lastModifiedDate":"2022-09-11"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"                tasks.indexOf(this) + 1, taskType(), doneIcon(), getName());","lastModifiedDate":"2022-09-18"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-20"}],"authorContributionMap":{"maanyos":68}},{"path":"src/main/java/duke/task/TaskDateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.InvalidTaskDateTimeDukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":" * Converts user input into task date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":" * Date is mandatory but time is optional","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"public class TaskDateTimeParser {","lastModifiedDate":"2022-09-20"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"     * Extracts task date \u0026 time from user input, ignoring task name","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name (and task date \u0026 time)","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     * @return task date \u0026 time as string","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task date \u0026 time is empty","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    public static String extractTaskDateTime(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        if (arguments.indexOf(\u0027/\u0027) \u003d\u003d -1) {","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskDateTimeDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        String taskDateTime \u003d arguments.substring(arguments.indexOf(\u0027/\u0027) + 1).trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        if (taskDateTime.length() \u003d\u003d 0) {","lastModifiedDate":"2022-09-19"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskDateTimeDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        return taskDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"     * Extracts task date from task date \u0026 time","lastModifiedDate":"2022-09-19"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"     * @param taskDateTime task date \u0026 time as string","lastModifiedDate":"2022-09-19"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"     * @return task date as LocalDate","lastModifiedDate":"2022-09-19"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task date is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"    public static LocalDate extractTaskDate(String taskDateTime) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"        String taskDate \u003d taskDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"        if (taskDateTime.contains(\" \")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"            taskDate \u003d taskDateTime.substring(0, taskDateTime.indexOf(\u0027 \u0027));","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"            return LocalDate.parse(taskDate, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskDateTimeDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"     * Extracts task time from task date \u0026 time, if any","lastModifiedDate":"2022-09-19"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"     * @param taskDateTime task date \u0026 time as string","lastModifiedDate":"2022-09-19"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"     * @return task time as LocalTime","lastModifiedDate":"2022-09-19"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task time is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"    public static LocalTime extractTaskTime(String taskDateTime) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"        if (!taskDateTime.contains(\" \")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"            return null;","lastModifiedDate":"2022-09-19"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"        String taskTime \u003d taskDateTime.substring(taskDateTime.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"        if (taskTime.length() \u003e 0) {","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"            try {","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"                return LocalTime.parse(taskTime, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"                throw new InvalidTaskDateTimeDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"            }","lastModifiedDate":"2022-09-19"},{"lineNumber":72,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":73,"author":{"gitId":"maanyos"},"content":"        return null;","lastModifiedDate":"2022-09-19"},{"lineNumber":74,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":75,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":76,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"maanyos"},"content":"     * Converts task date \u0026 time for saving purposes","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":79,"author":{"gitId":"maanyos"},"content":"     * @param date task date","lastModifiedDate":"2022-09-19"},{"lineNumber":80,"author":{"gitId":"maanyos"},"content":"     * @param time task time","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"maanyos"},"content":"     * @return task date \u0026 time as string","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"maanyos"},"content":"    public static String saveDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"maanyos"},"content":"        String taskDateTime \u003d date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"maanyos"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"maanyos"},"content":"            taskDateTime +\u003d \u0027 \u0027 + time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":87,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":88,"author":{"gitId":"maanyos"},"content":"        return taskDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":89,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":90,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":91,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":92,"author":{"gitId":"maanyos"},"content":"     * Converts task date \u0026 time for printing purposes","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":94,"author":{"gitId":"maanyos"},"content":"     * @param date task date","lastModifiedDate":"2022-09-19"},{"lineNumber":95,"author":{"gitId":"maanyos"},"content":"     * @param time task time","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"maanyos"},"content":"     * @return task date \u0026 time as string","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"maanyos"},"content":"    public static String listDateTime(LocalDate date, LocalTime time) {","lastModifiedDate":"2022-09-19"},{"lineNumber":99,"author":{"gitId":"maanyos"},"content":"        String taskDateTime \u003d date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2022-09-20"},{"lineNumber":100,"author":{"gitId":"maanyos"},"content":"        if (time !\u003d null) {","lastModifiedDate":"2022-09-19"},{"lineNumber":101,"author":{"gitId":"maanyos"},"content":"            taskDateTime +\u003d \u0027 \u0027 + time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-09-19"},{"lineNumber":102,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":103,"author":{"gitId":"maanyos"},"content":"        return taskDateTime;","lastModifiedDate":"2022-09-19"},{"lineNumber":104,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"maanyos":105}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-11"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"import duke.exception.InvalidTaskNumberDukeException;","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":" * Represents and manages ArrayList of tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"public class TaskList {","lastModifiedDate":"2022-09-18"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2022-09-18"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    public TaskList() {","lastModifiedDate":"2022-09-18"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-18"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"     * Adds new task to ArrayList of tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"     * @param taskType  type of new task","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name, and task date \u0026 time if applicable","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"     * @return string description of task for printing","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name or task date \u0026 time is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    public String addTask(TaskType taskType, String arguments) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"        switch (taskType) {","lastModifiedDate":"2022-08-27"},{"lineNumber":29,"author":{"gitId":"maanyos"},"content":"        case TODO:","lastModifiedDate":"2022-08-27"},{"lineNumber":30,"author":{"gitId":"maanyos"},"content":"            tasks.add(new ToDo(arguments));","lastModifiedDate":"2022-09-18"},{"lineNumber":31,"author":{"gitId":"maanyos"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":32,"author":{"gitId":"maanyos"},"content":"        case EVENT:","lastModifiedDate":"2022-08-27"},{"lineNumber":33,"author":{"gitId":"maanyos"},"content":"            tasks.add(new Event(arguments));","lastModifiedDate":"2022-09-18"},{"lineNumber":34,"author":{"gitId":"maanyos"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":35,"author":{"gitId":"maanyos"},"content":"        case DEADLINE:","lastModifiedDate":"2022-08-27"},{"lineNumber":36,"author":{"gitId":"maanyos"},"content":"            tasks.add(new Deadline(arguments));","lastModifiedDate":"2022-09-18"},{"lineNumber":37,"author":{"gitId":"maanyos"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":38,"author":{"gitId":"maanyos"},"content":"        default:","lastModifiedDate":"2022-08-27"},{"lineNumber":39,"author":{"gitId":"maanyos"},"content":"            break;","lastModifiedDate":"2022-08-27"},{"lineNumber":40,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-08-27"},{"lineNumber":41,"author":{"gitId":"maanyos"},"content":"        return tasks.get(tasks.size() - 1).listTask(tasks);","lastModifiedDate":"2022-09-18"},{"lineNumber":42,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":43,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":44,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":45,"author":{"gitId":"maanyos"},"content":"     * Mark task as done","lastModifiedDate":"2022-09-19"},{"lineNumber":46,"author":{"gitId":"maanyos"},"content":"     * Checks that task number is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":47,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":48,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task number","lastModifiedDate":"2022-09-19"},{"lineNumber":49,"author":{"gitId":"maanyos"},"content":"     * @return string description of the task after marking, for printing","lastModifiedDate":"2022-09-19"},{"lineNumber":50,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task number is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":51,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":52,"author":{"gitId":"maanyos"},"content":"    public String markAsDone(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":53,"author":{"gitId":"maanyos"},"content":"        int taskNumber \u003d TaskNumberParser.extractTaskNumber(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":54,"author":{"gitId":"maanyos"},"content":"        checkTaskNumberValid(taskNumber);","lastModifiedDate":"2022-09-11"},{"lineNumber":55,"author":{"gitId":"maanyos"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-09-18"},{"lineNumber":56,"author":{"gitId":"maanyos"},"content":"        task.markAsDone();","lastModifiedDate":"2022-09-11"},{"lineNumber":57,"author":{"gitId":"maanyos"},"content":"        return task.listTask(tasks);","lastModifiedDate":"2022-09-18"},{"lineNumber":58,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-03"},{"lineNumber":59,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":60,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":61,"author":{"gitId":"maanyos"},"content":"     * Mark task as not done","lastModifiedDate":"2022-09-19"},{"lineNumber":62,"author":{"gitId":"maanyos"},"content":"     * Checks that task number is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":63,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":64,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task number","lastModifiedDate":"2022-09-19"},{"lineNumber":65,"author":{"gitId":"maanyos"},"content":"     * @return string description of the task after unmarking, for printing","lastModifiedDate":"2022-09-19"},{"lineNumber":66,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task number is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":67,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":68,"author":{"gitId":"maanyos"},"content":"    public String markAsNotDone(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":69,"author":{"gitId":"maanyos"},"content":"        int taskNumber \u003d TaskNumberParser.extractTaskNumber(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":70,"author":{"gitId":"maanyos"},"content":"        checkTaskNumberValid(taskNumber);","lastModifiedDate":"2022-09-11"},{"lineNumber":71,"author":{"gitId":"maanyos"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2022-09-18"},{"lineNumber":72,"author":{"gitId":"maanyos"},"content":"        task.markAsNotDone();","lastModifiedDate":"2022-09-11"},{"lineNumber":73,"author":{"gitId":"maanyos"},"content":"        return task.listTask(tasks);","lastModifiedDate":"2022-09-18"},{"lineNumber":74,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":75,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-11"},{"lineNumber":76,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":77,"author":{"gitId":"maanyos"},"content":"     * Deletes a task from ArrayList of tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":78,"author":{"gitId":"maanyos"},"content":"     * Checks that task number is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":79,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":80,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task number","lastModifiedDate":"2022-09-19"},{"lineNumber":81,"author":{"gitId":"maanyos"},"content":"     * @return string description of the task before deleting, for printing","lastModifiedDate":"2022-09-19"},{"lineNumber":82,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task number is invalid","lastModifiedDate":"2022-09-19"},{"lineNumber":83,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":84,"author":{"gitId":"maanyos"},"content":"    public String deleteTask(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":85,"author":{"gitId":"maanyos"},"content":"        int taskNumber \u003d TaskNumberParser.extractTaskNumber(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":86,"author":{"gitId":"maanyos"},"content":"        checkTaskNumberValid(taskNumber);","lastModifiedDate":"2022-09-11"},{"lineNumber":87,"author":{"gitId":"maanyos"},"content":"        String listTask \u003d tasks.get(taskNumber - 1).listTask(tasks);","lastModifiedDate":"2022-09-18"},{"lineNumber":88,"author":{"gitId":"maanyos"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2022-09-18"},{"lineNumber":89,"author":{"gitId":"maanyos"},"content":"        return listTask;","lastModifiedDate":"2022-09-18"},{"lineNumber":90,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":91,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":92,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":93,"author":{"gitId":"maanyos"},"content":"     * Checks if task number is valid","lastModifiedDate":"2022-09-19"},{"lineNumber":94,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":95,"author":{"gitId":"maanyos"},"content":"     * @param taskNumber task number specified by user","lastModifiedDate":"2022-09-19"},{"lineNumber":96,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task number is out of bounds of taskList","lastModifiedDate":"2022-09-19"},{"lineNumber":97,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":98,"author":{"gitId":"maanyos"},"content":"    public void checkTaskNumberValid(int taskNumber) throws DukeException {","lastModifiedDate":"2022-09-18"},{"lineNumber":99,"author":{"gitId":"maanyos"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2022-09-18"},{"lineNumber":100,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskNumberDukeException();","lastModifiedDate":"2022-09-18"},{"lineNumber":101,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-03"},{"lineNumber":102,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":103,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":104,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":105,"author":{"gitId":"maanyos"},"content":"     * Directly adds a task to ArrayList of tasks","lastModifiedDate":"2022-09-19"},{"lineNumber":106,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":107,"author":{"gitId":"maanyos"},"content":"     * @param task loaded task from save file","lastModifiedDate":"2022-09-19"},{"lineNumber":108,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":109,"author":{"gitId":"maanyos"},"content":"    public void loadTask(Task task) {","lastModifiedDate":"2022-09-18"},{"lineNumber":110,"author":{"gitId":"maanyos"},"content":"        tasks.add(task);","lastModifiedDate":"2022-09-18"},{"lineNumber":111,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-11"},{"lineNumber":112,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":112}},{"path":"src/main/java/duke/task/TaskNameParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.MissingTaskNameDukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" * Converts user input into task name","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"public class TaskNameParser {","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"     * Checks for and extracts task name from user input, ignoring task date \u0026 time if any","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name (and task date \u0026 time)","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"     * @return task name","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name is empty","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    public static String extractTaskName(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"        if (arguments.length() \u003d\u003d 0 || arguments.indexOf(\u0027/\u0027) \u003d\u003d 0) {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"            throw new MissingTaskNameDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"        String taskName \u003d arguments;","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"        if (taskName.contains(\"/\")) {","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"            taskName \u003d taskName.substring(0, arguments.indexOf(\u0027/\u0027));","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":26,"author":{"gitId":"maanyos"},"content":"        return taskName.trim();","lastModifiedDate":"2022-09-19"},{"lineNumber":27,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":28,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"maanyos":28}},{"path":"src/main/java/duke/task/TaskNumberParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-19"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"import duke.exception.InvalidTaskNumberDukeException;","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":" * Converts user input into task number","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"public class TaskNumberParser {","lastModifiedDate":"2022-09-19"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"     * Extracts task number from user input","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"     * @param arguments user String input containing task number","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"     * @return task number","lastModifiedDate":"2022-09-19"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if input is not int","lastModifiedDate":"2022-09-19"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    public static int extractTaskNumber(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"        try {","lastModifiedDate":"2022-09-19"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"            return Integer.parseInt(arguments.trim());","lastModifiedDate":"2022-09-19"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-09-19"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"            throw new InvalidTaskNumberDukeException();","lastModifiedDate":"2022-09-19"},{"lineNumber":23,"author":{"gitId":"maanyos"},"content":"        }","lastModifiedDate":"2022-09-19"},{"lineNumber":24,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-09-19"},{"lineNumber":25,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-19"}],"authorContributionMap":{"maanyos":25}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-18"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"/**","lastModifiedDate":"2022-09-19"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":" * Represents different types of tasks recognised by Duke","lastModifiedDate":"2022-09-19"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":" */","lastModifiedDate":"2022-09-19"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"public enum TaskType {","lastModifiedDate":"2022-09-18"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2022-09-18"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-18"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-09-18"}],"authorContributionMap":{"maanyos":9}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"package duke.task;","lastModifiedDate":"2022-09-03"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2022-09-03"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-09-03"},{"lineNumber":5,"author":{"gitId":"maanyos"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-08-27"},{"lineNumber":6,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":7,"author":{"gitId":"maanyos"},"content":"    /**","lastModifiedDate":"2022-09-19"},{"lineNumber":8,"author":{"gitId":"maanyos"},"content":"     * Constructs a ToDo object","lastModifiedDate":"2022-09-19"},{"lineNumber":9,"author":{"gitId":"maanyos"},"content":"     *","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"maanyos"},"content":"     * @param arguments user input containing task name","lastModifiedDate":"2022-09-19"},{"lineNumber":11,"author":{"gitId":"maanyos"},"content":"     * @throws DukeException if task name is empty","lastModifiedDate":"2022-09-19"},{"lineNumber":12,"author":{"gitId":"maanyos"},"content":"     */","lastModifiedDate":"2022-09-19"},{"lineNumber":13,"author":{"gitId":"maanyos"},"content":"    public ToDo(String arguments) throws DukeException {","lastModifiedDate":"2022-09-19"},{"lineNumber":14,"author":{"gitId":"maanyos"},"content":"        super(arguments);","lastModifiedDate":"2022-09-19"},{"lineNumber":15,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":16,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":17,"author":{"gitId":"maanyos"},"content":"    @Override","lastModifiedDate":"2022-08-27"},{"lineNumber":18,"author":{"gitId":"maanyos"},"content":"    public char taskType() {","lastModifiedDate":"2022-08-27"},{"lineNumber":19,"author":{"gitId":"maanyos"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2022-08-27"},{"lineNumber":20,"author":{"gitId":"maanyos"},"content":"    }","lastModifiedDate":"2022-08-27"},{"lineNumber":21,"author":{"gitId":"maanyos"},"content":"","lastModifiedDate":"2022-08-27"},{"lineNumber":22,"author":{"gitId":"maanyos"},"content":"}","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"maanyos"},"content":"todo borrow book","lastModifiedDate":"2022-08-27"},{"lineNumber":2,"author":{"gitId":"maanyos"},"content":"list","lastModifiedDate":"2022-08-27"},{"lineNumber":3,"author":{"gitId":"maanyos"},"content":"deadline return book /by Sunday","lastModifiedDate":"2022-08-27"},{"lineNumber":4,"author":{"gitId":"maanyos"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2022-08-27"}],"authorContributionMap":{"maanyos":4}}]
